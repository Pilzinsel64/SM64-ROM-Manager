//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SM64_ROM_Manager.My.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Form_Main_Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Form_Main_Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SM64_ROM_Manager.RomManager.Language_Resources.MainForm.Form_Main_Resources", typeof(Form_Main_Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open ROM... ähnelt.
        /// </summary>
        public static string Button_OpenRom {
            get {
                return ResourceManager.GetString("Button_OpenRom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This ROM was modified by SM64 Editor and isn&apos;t compatible with SM64 ROM Manager. ähnelt.
        /// </summary>
        public static string Exception_RomWasUsedBySM64E {
            get {
                return ResourceManager.GetString("Exception_RomWasUsedBySM64E", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Successfully changed the size of bank 0x19. ähnelt.
        /// </summary>
        public static string MsgBox_BankSizeChangedSuccess {
            get {
                return ResourceManager.GetString("MsgBox_BankSizeChangedSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size changed ähnelt.
        /// </summary>
        public static string MsgBox_BankSizeChangedSuccess_Title {
            get {
                return ResourceManager.GetString("MsgBox_BankSizeChangedSuccess_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This area ID is already used in this level. Please use another one. ähnelt.
        /// </summary>
        public static string MsgBox_ChangeAreaID {
            get {
                return ResourceManager.GetString("MsgBox_ChangeAreaID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change Area ID ähnelt.
        /// </summary>
        public static string MsgBox_ChangeAreaID_Title {
            get {
                return ResourceManager.GetString("MsgBox_ChangeAreaID_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while converting .m64 to .midi! ähnelt.
        /// </summary>
        public static string MsgBox_ConvertToMidi_Failed {
            get {
                return ResourceManager.GetString("MsgBox_ConvertToMidi_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die M64 to MIDI failed ähnelt.
        /// </summary>
        public static string MsgBox_ConvertToMidi_Failed_Titel {
            get {
                return ResourceManager.GetString("MsgBox_ConvertToMidi_Failed_Titel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Successfully converted M64 to MIDI ähnelt.
        /// </summary>
        public static string MsgBox_ConvertToMidi_Succes {
            get {
                return ResourceManager.GetString("MsgBox_ConvertToMidi_Succes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die M64 to MIDI success ähnelt.
        /// </summary>
        public static string MsgBox_ConvertToMidi_Succes_Titel {
            get {
                return ResourceManager.GetString("MsgBox_ConvertToMidi_Succes_Titel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Global Behavior Bank is disabled right now. Do you want to enable it?&lt;br/&gt;&lt;br/&gt;Note:&lt;br/&gt;- If you enable it, all existing behaviors will be copied to a new Segmented Bank replacing the vanilla one.&lt;br/&gt;- All existing behaviors that get copied will not be re-aligned while saving the ROM. ähnelt.
        /// </summary>
        public static string MsgBox_EnableGlobalBehaviorBank {
            get {
                return ResourceManager.GetString("MsgBox_EnableGlobalBehaviorBank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable Global Behavior Bank ähnelt.
        /// </summary>
        public static string MsgBox_EnableGlobalBehaviorBank_Title {
            get {
                return ResourceManager.GetString("MsgBox_EnableGlobalBehaviorBank_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while saving the sequence. ähnelt.
        /// </summary>
        public static string MsgBox_ErrorSavingSequence {
            get {
                return ResourceManager.GetString("MsgBox_ErrorSavingSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred while exporting the sequence as MIDI. ähnelt.
        /// </summary>
        public static string MsgBox_ExportToMidi_Failed {
            get {
                return ResourceManager.GetString("MsgBox_ExportToMidi_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export to MIDI ähnelt.
        /// </summary>
        public static string MsgBox_ExportToMidi_Failed_Titel {
            get {
                return ResourceManager.GetString("MsgBox_ExportToMidi_Failed_Titel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The game name probably contains invalid characters. ähnelt.
        /// </summary>
        public static string MsgBox_GameNameHasInvalidChars {
            get {
                return ResourceManager.GetString("MsgBox_GameNameHasInvalidChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The size is too small. The minimum size is {0}. ähnelt.
        /// </summary>
        public static string MsgBox_InvalidBankSize {
            get {
                return ResourceManager.GetString("MsgBox_InvalidBankSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid size ähnelt.
        /// </summary>
        public static string MsgBox_InvalidBankSize_Title {
            get {
                return ResourceManager.GetString("MsgBox_InvalidBankSize_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This image does not have a valid size.&lt;br/&gt;The &lt;b&gt;recommended&lt;/b&gt;size is 248x248. ähnelt.
        /// </summary>
        public static string MsgBox_InvalidBgImageSize {
            get {
                return ResourceManager.GetString("MsgBox_InvalidBgImageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid size ähnelt.
        /// </summary>
        public static string MsgBox_InvalidBgImageSize_Title {
            get {
                return ResourceManager.GetString("MsgBox_InvalidBgImageSize_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The MD5 Hash of your ROM is invalid. Please try getting your ROM from an other site. It has to be 8MB and following MD5 checksum:
        ///{0} ähnelt.
        /// </summary>
        public static string MsgBox_InvalidRomHash {
            get {
                return ResourceManager.GetString("MsgBox_InvalidRomHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The limit of possible music sequences in the original game is 127. Do you want to add more anyway? ähnelt.
        /// </summary>
        public static string MsgBox_LimitSequenceCountReached {
            get {
                return ResourceManager.GetString("MsgBox_LimitSequenceCountReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Limit reached ähnelt.
        /// </summary>
        public static string MsgBox_LimitSequenceCountReached_Title {
            get {
                return ResourceManager.GetString("MsgBox_LimitSequenceCountReached_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The maximum amount of areas a level can have is 8. ähnelt.
        /// </summary>
        public static string MsgBox_MaxCountAreasReached {
            get {
                return ResourceManager.GetString("MsgBox_MaxCountAreasReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum reached ähnelt.
        /// </summary>
        public static string MsgBox_MaxCountAreasReached_Title {
            get {
                return ResourceManager.GetString("MsgBox_MaxCountAreasReached_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The maximum amount of possible music sequences has been reached! It is not possible to add any more. ähnelt.
        /// </summary>
        public static string MsgBox_MaxSequenceCountReached {
            get {
                return ResourceManager.GetString("MsgBox_MaxSequenceCountReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum reached ähnelt.
        /// </summary>
        public static string MsgBox_MaxSequenceCountReached_Title {
            get {
                return ResourceManager.GetString("MsgBox_MaxSequenceCountReached_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The ROM will be prepared for use with SM64 ROM Manager.&lt;br/&gt;&lt;br/&gt;Please Note:&lt;br/&gt;While prepairing your ROM, an additional file will be created. It will be named like your ROM but with a &quot;.config&quot; extension.&lt;br/&gt;This file contains many important settings and other stuff to provide some features in the SM64 ROM Manager.&lt;br/&gt;If you delete this .config file, you might get &lt;u&gt;some errors or unwanted behaviors&lt;/u&gt; in ROM Manager.&lt;br/&gt;So, if &lt;u&gt;you rename your ROM file&lt;/u&gt;, &lt;u&gt;always rename the config file&lt;/u&gt; to [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string MsgBox_PrepaireRom {
            get {
                return ResourceManager.GetString("MsgBox_PrepaireRom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prepare ROM ähnelt.
        /// </summary>
        public static string MsgBox_PrepaireRom_Title {
            get {
                return ResourceManager.GetString("MsgBox_PrepaireRom_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The ROM can&apos;t be started. Make sure the path to the emulator is correct. ähnelt.
        /// </summary>
        public static string MsgBox_RomCanNotBestarted {
            get {
                return ResourceManager.GetString("MsgBox_RomCanNotBestarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Launch Game ähnelt.
        /// </summary>
        public static string MsgBox_RomCanNotBestarted_Title {
            get {
                return ResourceManager.GetString("MsgBox_RomCanNotBestarted_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The ROM was changed by an external program. Do you want to reload the ROM?&lt;br/&gt;&lt;br/&gt;Warning:&lt;br/&gt;When reloading the ROM, all unsaved changes will be lost! ähnelt.
        /// </summary>
        public static string MsgBox_RomChanged {
            get {
                return ResourceManager.GetString("MsgBox_RomChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ROM changes detected ähnelt.
        /// </summary>
        public static string MsgBox_RomChanged_Title {
            get {
                return ResourceManager.GetString("MsgBox_RomChanged_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The opened ROM has been deleted.&lt;br/&gt;The program will close now. ähnelt.
        /// </summary>
        public static string MsgBox_RomRemoved {
            get {
                return ResourceManager.GetString("MsgBox_RomRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ROM deleted ähnelt.
        /// </summary>
        public static string MsgBox_RomRemoved_Titel {
            get {
                return ResourceManager.GetString("MsgBox_RomRemoved_Titel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This ROM has been used in a newer version of SM64 ROM Manager. If you save your ROM in an older (this) version it is possible that you will losse some data or some data may break. ähnelt.
        /// </summary>
        public static string MsgBox_RomUsedInNewerVersion {
            get {
                return ResourceManager.GetString("MsgBox_RomUsedInNewerVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detected newer version ähnelt.
        /// </summary>
        public static string MsgBox_RomUsedInNewerVersion_Title {
            get {
                return ResourceManager.GetString("MsgBox_RomUsedInNewerVersion_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your text exceeds the character limit! Please shorten it before saving the ROM. ähnelt.
        /// </summary>
        public static string MsgBox_TextsOverLimit {
            get {
                return ResourceManager.GetString("MsgBox_TextsOverLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Character limit exceeded ähnelt.
        /// </summary>
        public static string MsgBox_TextsOverLimit_Title {
            get {
                return ResourceManager.GetString("MsgBox_TextsOverLimit_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An unknown error occurred while loading the ROM. ähnelt.
        /// </summary>
        public static string MsgBox_UnknownErrorAtLoadingRom {
            get {
                return ResourceManager.GetString("MsgBox_UnknownErrorAtLoadingRom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load ROM ähnelt.
        /// </summary>
        public static string MsgBox_UnknownErrorAtLoadingRom_Titel {
            get {
                return ResourceManager.GetString("MsgBox_UnknownErrorAtLoadingRom_Titel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are unsaved changes to the ROM.&lt;br/&gt;Do you want to save before closing? ähnelt.
        /// </summary>
        public static string MsgBox_UnsavedChanges {
            get {
                return ResourceManager.GetString("MsgBox_UnsavedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsaved changes ähnelt.
        /// </summary>
        public static string MsgBox_UnsavedChanges_Title {
            get {
                return ResourceManager.GetString("MsgBox_UnsavedChanges_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are updated patches available for this ROM, which provide improvements and/or new features.&lt;br/&gt;It is &lt;u&gt;highly recommended&lt;/u&gt; to apply them.&lt;br/&gt;&lt;br/&gt;Do you want to apply the patches now? ähnelt.
        /// </summary>
        public static string MsgBox_UpdatePatchesAvaiable {
            get {
                return ResourceManager.GetString("MsgBox_UpdatePatchesAvaiable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New patches available ähnelt.
        /// </summary>
        public static string MsgBox_UpdatePatchesAvaiable_Title {
            get {
                return ResourceManager.GetString("MsgBox_UpdatePatchesAvaiable_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You must open a ROM first! ähnelt.
        /// </summary>
        public static string Notify_ShouldLoadRomFirst {
            get {
                return ResourceManager.GetString("Notify_ShouldLoadRomFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bob-Omb ähnelt.
        /// </summary>
        public static string SoundEffect_BobOmb {
            get {
                return ResourceManager.GetString("SoundEffect_BobOmb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Boo ähnelt.
        /// </summary>
        public static string SoundEffect_Boo {
            get {
                return ResourceManager.GetString("SoundEffect_Boo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bowser Fight ähnelt.
        /// </summary>
        public static string SoundEffect_BowserFight {
            get {
                return ResourceManager.GetString("SoundEffect_BowserFight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bowser (Intro/Doors) ähnelt.
        /// </summary>
        public static string SoundEffect_BowserIntroDoors {
            get {
                return ResourceManager.GetString("SoundEffect_BowserIntroDoors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die King Bob-Omb ähnelt.
        /// </summary>
        public static string SoundEffect_KingBobOmb {
            get {
                return ResourceManager.GetString("SoundEffect_KingBobOmb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Koopa The Quick ähnelt.
        /// </summary>
        public static string SoundEffect_KoopaTheQuick {
            get {
                return ResourceManager.GetString("SoundEffect_KoopaTheQuick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Monkey ähnelt.
        /// </summary>
        public static string SoundEffect_Monkey {
            get {
                return ResourceManager.GetString("SoundEffect_Monkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Penguin ähnelt.
        /// </summary>
        public static string SoundEffect_Penguin {
            get {
                return ResourceManager.GetString("SoundEffect_Penguin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sign ähnelt.
        /// </summary>
        public static string SoundEffect_Sign {
            get {
                return ResourceManager.GetString("SoundEffect_Sign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whomp King ähnelt.
        /// </summary>
        public static string SoundEffect_WhompKing {
            get {
                return ResourceManager.GetString("SoundEffect_WhompKing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wiggler ähnelt.
        /// </summary>
        public static string SoundEffect_Wiggler {
            get {
                return ResourceManager.GetString("SoundEffect_Wiggler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yoshi ähnelt.
        /// </summary>
        public static string SoundEffect_Yoshi {
            get {
                return ResourceManager.GetString("SoundEffect_Yoshi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculating space... ähnelt.
        /// </summary>
        public static string Status_CalculatingTextSpace {
            get {
                return ResourceManager.GetString("Status_CalculatingTextSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking ROM... ähnelt.
        /// </summary>
        public static string Status_Checking {
            get {
                return ResourceManager.GetString("Status_Checking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating new sequence... ähnelt.
        /// </summary>
        public static string Status_CreatingNewSequence {
            get {
                return ResourceManager.GetString("Status_CreatingNewSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating text list... ähnelt.
        /// </summary>
        public static string Status_CreatingTextList {
            get {
                return ResourceManager.GetString("Status_CreatingTextList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting Model Map... ähnelt.
        /// </summary>
        public static string Status_ExportingModel {
            get {
                return ResourceManager.GetString("Status_ExportingModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exporting Sequence... ähnelt.
        /// </summary>
        public static string Status_ExportingSequence {
            get {
                return ResourceManager.GetString("Status_ExportingSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Importing Sequence ähnelt.
        /// </summary>
        public static string Status_ImportingSequence {
            get {
                return ResourceManager.GetString("Status_ImportingSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading Level... ähnelt.
        /// </summary>
        public static string Status_LoadingLevel {
            get {
                return ResourceManager.GetString("Status_LoadingLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading Model Map... ähnelt.
        /// </summary>
        public static string Status_LoadingModel {
            get {
                return ResourceManager.GetString("Status_LoadingModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading Music... ähnelt.
        /// </summary>
        public static string Status_LoadingMusic {
            get {
                return ResourceManager.GetString("Status_LoadingMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading ROM... ähnelt.
        /// </summary>
        public static string Status_LoadingRom {
            get {
                return ResourceManager.GetString("Status_LoadingRom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading text from ROM... ähnelt.
        /// </summary>
        public static string Status_LoadingTexts {
            get {
                return ResourceManager.GetString("Status_LoadingTexts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ready ähnelt.
        /// </summary>
        public static string Status_Ready {
            get {
                return ResourceManager.GetString("Status_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving ROM... ähnelt.
        /// </summary>
        public static string Status_SavingRom {
            get {
                return ResourceManager.GetString("Status_SavingRom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting up... ähnelt.
        /// </summary>
        public static string Status_StartingUp {
            get {
                return ResourceManager.GetString("Status_StartingUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Area ähnelt.
        /// </summary>
        public static string Text_Area {
            get {
                return ResourceManager.GetString("Text_Area", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change level to overwrite ähnelt.
        /// </summary>
        public static string Text_ChangeReplacingLevel {
            get {
                return ResourceManager.GetString("Text_ChangeReplacingLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabled ähnelt.
        /// </summary>
        public static string Text_Disabled {
            get {
                return ResourceManager.GetString("Text_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invisible ähnelt.
        /// </summary>
        public static string Text_Invisible {
            get {
                return ResourceManager.GetString("Text_Invisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Level {0}, Star {1} ähnelt.
        /// </summary>
        public static string Text_LevelStar {
            get {
                return ResourceManager.GetString("Text_LevelStar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mist ähnelt.
        /// </summary>
        public static string Text_Mist {
            get {
                return ResourceManager.GetString("Text_Mist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Length ähnelt.
        /// </summary>
        public static string Text_NewLength {
            get {
                return ResourceManager.GetString("Text_NewLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Secret Star ähnelt.
        /// </summary>
        public static string Text_SecretStar {
            get {
                return ResourceManager.GetString("Text_SecretStar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Position ähnelt.
        /// </summary>
        public static string Text_StartPosition {
            get {
                return ResourceManager.GetString("Text_StartPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Toxic Haze ähnelt.
        /// </summary>
        public static string Text_ToxicHaze {
            get {
                return ResourceManager.GetString("Text_ToxicHaze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown ähnelt.
        /// </summary>
        public static string Text_Unknown {
            get {
                return ResourceManager.GetString("Text_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} of {1} used / {2} left ähnelt.
        /// </summary>
        public static string Text_UsedOfMaxLeft {
            get {
                return ResourceManager.GetString("Text_UsedOfMaxLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Water ähnelt.
        /// </summary>
        public static string Text_Water {
            get {
                return ResourceManager.GetString("Text_Water", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reload ROM ähnelt.
        /// </summary>
        public static string WarningBox_RomChanged_ReloadRom {
            get {
                return ResourceManager.GetString("WarningBox_RomChanged_ReloadRom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The ROM was changed by an external program. To reload the ROM click on &apos;Reload ROM&apos;. ähnelt.
        /// </summary>
        public static string WarningBox_RomChanged_Text {
            get {
                return ResourceManager.GetString("WarningBox_RomChanged_Text", resourceCulture);
            }
        }
    }
}
