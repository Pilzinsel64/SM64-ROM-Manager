<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADJqos5wJV04ryIXv63fFH/t3xR/7yI
        X/7ClXXgy6WENgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDnYC3uYBV/8yTaP/kq3//7rWJ/+61
        if/kqn7/zJNo/7mAVf/DnH6yAAAAAAAAAAAAAAAAAAAAAAAAAADEnH20uoBW/+Wrf//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//kqn//uoFW/8ScfbAAAAAAAAAAAAAAAADFpoI5uH9U/+asgP/wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL/+Wrf/+4f1T/wKSCNQAAAAAAAAAAv5Vz5M2Uaf/wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/zJNo/8GWc+IAAAAAAAAAALyGXP7kqn7/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL/+Oqff+8h13+AAAAAAAAAAC2fVH/7rSI//C3
        i//wt4v/8LeL/+asgP/Eil7/8LeL//C3i//wt4v/8LeL//C3i//ttIj/t31S/wAAAAAAAAAAtn1R/+60
        iP/wt4v/7LSH/8+Vaf+7glf/tXpO//C3i//wt4v/8LeL//C3i//wt4v/7bSH/7d9Uv8AAAAAAAAAALyG
        Xf7jqn3/2Z9z/7uCV//Op4j/7uPX/7V6Tv/wt4v/8LeL//C3i//wt4v/8LeL/+Oqfv+8h13+AAAAAAAA
        AADAlXPluH1S/8STbP/m1sb/8uvh//Lr4f+1ek7/8LeL//C3i//wt4v/8LeL//C3i//OlGr/wZZ04gAA
        AAAAAAAAxph6Q8aliv7r4dT/8uvh//Lr4f/y6+H/tXpO//C3i//wt4v/8LeL//C3i//lq3//uYBV/8Ck
        gjUAAAAAAAAAAAAAAADNuKKPzrun/+rh1f/y6+H/8uvh/7V6Tv/wt4v/8LeL//C3i//kqn//uoFW/8Sc
        fbAAAAAAAAAAAAAAAAAAAAAAAAAAAMy4pZbNuaX/28u8/+vg1P+1ek7/7LOH/+Sqfv/Mk2j/uH5T/8Ga
        e7YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzrykKs+4pcPPu6f6tXpO/7h/VP+8iF/+wpV14Maj
        gDoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD4HwAA4AcAAMADAADAAwAAgAEAAIABAACAAQAAgAEAAIAB
        AACAAQAAwAMAAMADAADgBwAA+B8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAxJ2AeL+UdN66iWT7uYNa/rZ8UP+2fFD/uYNa/ruKZPrAlXPdwZyBdwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/qqoDwJt7t7mDWv61ek7/tXpO/7V6Tv+1ek7/tXpO/7V6Tv+1ek7/tXpO/7V6Tv+1ek7/uINa/sGa
        ebX/qqoDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAw6CBYbmGXv21ek7/tXpO/7uAVP/Ok2j/4KZ6/+ivgv/utYn/7rWJ/+ivgv/fpnr/zZNn/7uA
        VP+1ek7/tXpO/7mHYP3Eo4FbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMSff4e3f1b/tXpO/7p+U//Um27/7rWJ//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/7rWJ/9Sbbv+6f1L/tXpO/7eAVv/CnICGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADEn4CUtntQ/7V6Tv/IjmL/7rSI//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL/+60iP/HjWL/tXpO/7Z7UP/FnICQAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAxKKCWrd/VP+1ek7/z5Vp//C2iv/wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL/++3i//OlWn/tXpO/7d+Vf/BoYFXAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+qqgO5h1/9tXpO/8eNYf/vt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL/++3i//HjWD/tXpO/7qH
        YPz/qqoDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwZl7srV6Tv+7gVT/7bSI//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL/+2z
        iP+6gFT/tXpO/8Cbe64AAAAAAAAAAAAAAAAAAAAAAAAAAP+qqgO5hFv+tXpO/9iec//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL/9eecf+1ek7/uYRb/gAAAAAAAAAAAAAAAAAAAAAAAAAAwp+CerV6Tv+7gFX/77aK//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/77WK/7uAVP+1ek7/xKCAdAAAAAAAAAAAAAAAAAAAAAC+lHLgtXpO/82T
        Z//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/zZJn/7V6Tv/AlXPdAAAAAAAAAAAAAAAAAAAAALqI
        Y/u1ek7/36V6//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//epXn/tXpO/7qIY/sAAAAAAAAAAAAA
        AAAAAAAAuYRa/rV6Tv/nroL/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/566C/8eN
        YP/wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL/+atgf+1ek7/uYRb/gAA
        AAAAAAAAAAAAAAAAAAC2fVL/tXpO/+60iP/wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/67KH/86T
        aP+2e0//tXpO//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/7bSI/7V6
        Tv+2fVL/AAAAAAAAAAAAAAAAAAAAALZ9Uv+1ek7/7rSI//C3i//wt4v/8LeL//C3i//wt4v/8LaK/9uh
        df+7gFT/tXpO/7V6Tv+1ek7/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//ttIj/tXpO/7Z9Uv8AAAAAAAAAAAAAAAAAAAAAuINZ/rV6Tv/oroL/8LeL//C3i//wt4v/8LeL/+Gn
        ev+/hVn/tXpO/7V6Tv/Fmnf/tXpO/7V6Tv/wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL/+atgf+1ek7/uYRb/gAAAAAAAAAAAAAAAAAAAAC7iGL7tXpO/9+mef/wt4v/8LeL/+iv
        gv/IjmL/tXpO/7V6Tv+9imP/38i0//Lr4f+1ek7/tXpO//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/36V6/7V6Tv+6iGP7AAAAAAAAAAAAAAAAAAAAAL+Uc+K1ek7/z5Ro/+62
        iv/XnHD/uH1R/7V6Tv+4flP/0q+T//Dm2v/y6+H/8uvh/7V6Tv+1ek7/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//PlGj/tXpO/76TcuEAAAAAAAAAAAAAAAAAAAAAwp+CerV6
        Tv+6f1P/u4BV/7V6Tv+1e0//y6SE/+zg0//y6+H/8uvh//Lr4f/y6+H/tXpO/7V6Tv/wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/77aK/7uBVf+1ek7/xKCAdAAAAAAAAAAAAAAAAAAA
        AAD/qqoDuINZ/rV6Tv+1ek7/wpJt/+XSwf/y6+H/8uvh//Lr4f/y6+H/8uvh//Lr4f+1ek7/tXpO//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//Zn3P/tXpO/7mEW/4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC+kW/BuIBX/8akiP/w593/8uvh//Lr4f/y6+H/8uvh//Lr4f/y6+H/8uvh/7V6
        Tv+1ek7/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/7bOI/7uAVP+1ek7/wJt7rgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAL+PYBDMs570zLej/9jHtv/y6uD/8uvh//Lr4f/y6+H/8uvh//Lr
        4f/y6+H/tXpO/7V6Tv/wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL/++3i//HjWD/tXpO/7qH
        YPz/qqoDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMy4oUHMt6P+zLej/93Ov//y6+H/8uvh//Lr
        4f/y6+H/8uvh//Lr4f+1ek7/tXpO//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//vt4v/zpVp/7V6
        Tv+3flX/waGBVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM25pXHMt6P/zLej/9jI
        t//x6d7/8uvh//Lr4f/y6+H/8uvh/7V6Tv+1ek7/8LeL//C3i//wt4v/8LeL//C3i//wt4v/7rSI/8eN
        Yv+1ek7/tntQ/8WcgJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMy1
        ooPMt6P+zLej/9G+rP/l2sz/8urg//Lr4f/y6+H/tXpO/7V6Tv/wt4v/8LeL//C3i//wt4v/77eL/9yj
        d/+9g1f/tXpO/7Z9Uv/CnHynAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMy2oEbMt6P1zLej/8y3o//QvKn/3M29/+jc0P+1ek7/tXpO/+uzhv/mroL/36Z6/82T
        Z/+7gFT/tXpO/7V6Tv+5h2D9xKOBWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wLLtqKSzbek+cy3o//Mt6P/zLej/7V6Tv+1ek7/tXpO/7V6
        Tv+1ek7/tXpO/7V6Tv+4g1r+wZp5tf+qqgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAy7WgWcy3pL7Mt6PstXpO/7V6
        Tv+2f1X/uYVc/ruKZPrAlXPdwZyBdwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////AP//+AAf//AAD//AAAP/gAAB/4AAAf8AAAD+AA
        AAfgAAAH4AAAB8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAAD4AAAB+AAAAfgAAAH8AAAD/gA
        AB/8AAAf/AAAP/8AAP//gAH///AP////////////
</value>
  </data>
</root>