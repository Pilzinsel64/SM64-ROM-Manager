<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevComponents.DotNetBar.Charts</name>
    </assembly>
    <members>
        <member name="T:DevComponents.DotNetBar.Charts.ChartControl">
            <summary>
            Represents a Chart Control
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.DataBindingStart">
            <summary>
            Occurs when the Chart is about to start a binding operation
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.ChartDataBindingComplete">
            <summary>
            Occurs when a Chart data binding operation is completed
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.ChartMatrixResized">
            <summary>
            Occurs when a ChartMatrix has been resized.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.CompareElements">
            <summary>
            Occurs when the chart needs to compare 1 element with another
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.EmptyTextMarkupLinkClick">
            <summary>
            Occurs when a ChartContainer's EmptyText MarkupLink has been clicked
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.GetPieCenterLabel">
            <summary>
            Occurs when a Pie Center label is needed
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.GetCrosshairAxisLabel">
            <summary>
            Occurs when a Crosshair Axis label is needed
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.GetCrosshairLabelHeader">
            <summary>
            Occurs when a CrosshairLabel header is needed
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.GetCrosshairLabelItem">
            <summary>
            Occurs when a CrosshairLabel item (text) is needed
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.GetSliceLabel">
            <summary>
            Occurs when a Pie Slice label (text) is needed
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.GetTickmarkLabel">
            <summary>
            Occurs when a MajorTickmark label (text and color) is needed
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.GetToolTip">
            <summary>
            Occurs when a Pie SeriesPoint ToolTip is needed
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.GetElementStyle">
            <summary>
            Occurs when a ChartElement Style is needed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.GetPieSeriesPointStyle">
            <summary>
            Occurs when a PieSeriesPoint Style is needed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.LayoutBoundsInvalid">
            <summary>
            Occurs when layout bounds of the item is invalidated.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.LegendItemCheckedChanged">
            <summary>
            Occurs when a LegendItem checked state has changed
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.ChartMouseClick">
            <summary>
            Occurs when a single click has ocurred on a chart Pie element.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.ChartMouseDoubleClick">
            <summary>
            Occurs when a double click has ocurred on a chart Pie element.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PieCenterMarkupLinkClick">
            <summary>
            Occurs after a pie center MarkupLink has been clicked.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PieDetachChanged">
            <summary>
            Occurs after a pie element detach was performed by the user.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PieExplodeChanged">
            <summary>
            Occurs after a pie explode operation was performed by the user.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PieRingLevelChanged">
            <summary>
            Occurs after a ring level change, as initiated
            by the user, has taken place.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PieRingLevelChanging">
            <summary>
            Occurs after a user has initiated a ring level change, but
            before the actual change has taken place.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PieSelectionChanged">
            <summary>
            Occurs after a pie selection was performed by the user.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PointLabelUpdate">
            <summary>
            Occurs when a PointLabel update is needed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostLoadLegendData">
            <summary>
            Occurs after a Legend's data has been loaded.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostRenderContentBackground">
            <summary>
            Occurs after a chart content area has been rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostRenderFrameBackground">
            <summary>
            Occurs after a chart Frame area has been rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostRenderPanelBackground">
            <summary>
            Occurs after a chart Panel area has been rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostRenderPieCenterBackground">
            <summary>
            Occurs after the pie center background has been rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostRenderPieCenterContent">
            <summary>
            Occurs after the pie center content has been rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostRenderPointConnector">
            <summary>
            Occurs after a PointConnector has been rendered
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostRenderPointLabel">
            <summary>
            Occurs after a PointLabel has been rendered
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostRenderRadialGrid">
            <summary>
            Occurs after a radial grid has been rendered
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostRenderSeriesBar">
            <summary>
            Occurs after a series bar has been rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostRenderSeriesHiLoBar">
            <summary>
            Occurs after a series HiLo Bar segment has been rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostRenderSeriesPoint">
            <summary>
            Occurs after a series point has been rendered
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PostRenderSlice">
            <summary>
            Occurs after the pie slice area has been rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreLoadLegendData">
            <summary>
            Occurs prior to a Legend's data being loaded.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreRenderContentBackground">
            <summary>
            Occurs prior to the chart Content area being rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreRenderFrameBackground">
            <summary>
            Occurs prior to the chart Frame area being rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreRenderPanelBackground">
            <summary>
            Occurs prior to the chart Panel area being rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreRenderPieCenterBackground">
            <summary>
            Occurs prior to the pie center background being rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreRenderPieCenterContent">
            <summary>
            Occurs prior to the pie center content being rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreRenderPointConnector">
            <summary>
            Occurs prior to a PointConnector being rendered
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreRenderPointLabel">
            <summary>
            Occurs prior to a PointLabel being rendered
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreRenderRadialGrid">
            <summary>
            Occurs prior to a radial (circular) grid being rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreRenderSeriesBar">
            <summary>
            Occurs prior to a series bar being rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreRenderSeriesHiLoBar">
            <summary>
            Occurs prior to a series HiLo Bar segment being rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreRenderSeriesPoint">
            <summary>
            Occurs prior to a series point being rendered
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PreRenderSlice">
            <summary>
            Occurs prior to the pie slice area being rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.ReferenceLineMarkupLinkClick">
            <summary>
            Occurs when a ReferenceLine MarkupLink has been clicked
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.RenderCrosshairCallout">
            <summary>
            Occurs when a Crosshair Callout (enclosing "border") needs to be rendered
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.RenderCrosshairLabel">
            <summary>
            Occurs when a CrosshairLabel needs to be rendered
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.RenderCrosshairLabelItem">
            <summary>
            Occurs when an individual CrosshairLabel item needs to be rendered
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.RenderPieRingOut">
            <summary>
            Occurs when the pie center 'ring-out' indicator needs to be rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.RenderSliceCenterLine">
            <summary>
            Occurs when a pie slice center line needs to be rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.RenderSliceInnerLabel">
            <summary>
            Occurs when a slice inner label needs to be rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.RenderSliceOuterLabel">
            <summary>
            Occurs when a slice outer label needs to be rendered.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.Scroll">
            <summary>
            Occurs when the Horizontal or Vertical scrollbar has been scrolled
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.ScrollMin">
            <summary>
            Occurs when the Horizontal or Vertical
            scrollbar has been scrolled to the Minimum and released
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.ScrollMax">
            <summary>
            Occurs when the Horizontal or Vertical scrollbar has been scrolled to the Maximum and released
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.SelectionChanged">
            <summary>
            Occurs when a visual item's selected state has changed
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.SeriesDataBindingComplete">
            <summary>
            Occurs when a ChartSeries data binding operation is completed
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.StyleManagerChanged">
            <summary>
            Occurs when the StyleManager style has changed
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.TitleMarkupLinkClick">
            <summary>
            Occurs when a title MarkupLink has been clicked
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.#ctor">
            <summary>
            Initializes a new instance of the ChartControl class.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.Scale(System.Windows.Forms.Form)">
            <summary>
            Scales the ChartControl based upon the
            parent form AutoScaleDimensions.
            </summary>
            <param name="form"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartControl.BaseVisualStyles">
            <summary>
             BaseVisualStyles - the ChartControl starting base styles
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartControl.ChartCursor">
            <summary>
             Gets or sets the logical Chart cursor
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartControl.ChartPanel">
            <summary>
            Gets or sets the base Chart Panel for the Chart (contains Chart Graphs and additional Chart Panels)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartControl.DataMember">
            <summary>
             Gets or sets the name of the list or table
             in the data source that the Chart is bound to.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartControl.DataSource">
            <summary>
             Gets or sets the data source that the Chart is bound to
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartControl.DefaultVisualStyles">
            <summary>
             Gets or sets the Default Visual Styles for each Chart element
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartControl.IsUpdateSuspended">
            <summary>
             Gets whether Chart updating / rendering is suspended
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartControl.SelectedItems">
            <summary>
            Gets a list of the currently selected chart items.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnLayoutBoundsInvalid(System.EventArgs)">
            <summary>
            Raises LayoutBoundsInvalid event.
            </summary>
            <param name="e">Provides event arguments.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnEnabledChanged(System.EventArgs)">
            <summary>
            OnEnabledChanged
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.StyleManagerStyleChanged(DevComponents.DotNetBar.eDotNetBarStyle)">
            <summary>
            Called by StyleManager to notify control that style on
            manager has changed and that control should refresh its
            appearance if its style is controlled by StyleManager.
            </summary>
            <param name="newStyle">New active style.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Renders the control.
            </summary>
            <param name="e">Paint arguments.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.PaintTo(System.Drawing.Graphics)">
            <summary>
            Paints control to canvas. This method might be used for print output.
            </summary>
            <param name="g">Graphics object to paint control to.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.PaintTo(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints control to canvas. This method might be used for print output.
            </summary>
            <param name="g">Graphics object to paint control to.</param>
            <param name="clipRectangle">Indicates clipping rectangle.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnHandleCreated(System.EventArgs)">
            <summary>
            OnHandleCreated
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.UpdateLayout">
            <summary>
            Performs Chart layout.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.UpdateLayout(System.Boolean)">
             <summary>
             Performs Chart layout.
             </summary>
            <param name="force">Whether to force operation even if layout is valid.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoChartMatrixResizedEvent(DevComponents.DotNetBar.Charts.ChartPanel)">
            <summary>
            Handles invocation of ChartMatrixResized events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoChartTitleMarkupLinkClickEvent(DevComponents.DotNetBar.Charts.ChartNote,DevComponents.Charts.TextMarkup.HyperLink)">
            <summary>
            Handles invocation of ChartTitleMarkupLinkClick events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoDataBindingStartEvent(DevComponents.DotNetBar.Charts.BaseChart,System.Object,System.Boolean@)">
            <summary>
            Handles invocation of DataBindingStart events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoChartDataBindingCompleteEvent(DevComponents.DotNetBar.Charts.BaseChart,System.Object)">
            <summary>
            Handles invocation of ChartDataBindingComplete events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoChartMouseDoubleClickEvent(DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ItemHitArea,DevComponents.DotNetBar.Charts.ChartVisualElement,System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles invocation of ChartMouseDoubleClick events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoCompareElementsEvent(DevComponents.DotNetBar.Charts.ChartVisualElement,System.Object,System.Object,System.Int32@)">
            <summary>
            Handles invocation of CompareElementsEvent events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoEmptyTextMarkupLinkClickEvent(DevComponents.DotNetBar.Charts.ChartContainer,DevComponents.Charts.TextMarkup.HyperLink)">
            <summary>
            Handles invocation of EmptyTextMarkupLinkClick events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoGetElementStyleEvent(DevComponents.DotNetBar.Charts.ChartElement,DevComponents.DotNetBar.Charts.Style.StyleType,DevComponents.DotNetBar.Charts.Style.BaseVisualStyle@)">
            <summary>
            Handles invocation of GetElementStyle events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoGetPieSeriesPointStyleEvent(DevComponents.DotNetBar.Charts.PieSeriesPoint,DevComponents.DotNetBar.Charts.Style.StyleType,DevComponents.DotNetBar.Charts.Style.BaseVisualStyle@)">
            <summary>
            Handles invocation of GetElementStyle events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoGetToolTipEvent(DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.BaseSeries,DevComponents.DotNetBar.Charts.SeriesPoint,System.String@)">
            <summary>
            Handles invocation of GetToolTipEvent events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoLegendItemCheckedChangedEvent(DevComponents.DotNetBar.Charts.ChartLegend,DevComponents.DotNetBar.Charts.ChartLegendItem)">
            <summary>
            Handles invocation of LegendItemCheckedChanged events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoPointLabelUpdateEvent(DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ChartSeries,System.Collections.Generic.List{DevComponents.DotNetBar.Charts.PointLabel})">
            <summary>
            Handles invocation of PointLabelUpdate events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoPieCenterMarkupLinkClickEvent(DevComponents.DotNetBar.Charts.PieChart,DevComponents.Charts.TextMarkup.HyperLink)">
            <summary>
            Handles invocation of PieCenterMarkupLinkClick events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoReferenceLineMarkupLinkClickEvent(DevComponents.DotNetBar.Charts.ReferenceLine,DevComponents.Charts.TextMarkup.HyperLink)">
            <summary>
            Handles invocation of ReferenceLineMarkupLinkClick events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoRenderCrosshairCalloutEvent(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,System.Drawing.Rectangle,System.Drawing.Point,DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle)">
            <summary>
            Handles invocation of RenderCrosshairCallout events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoRenderCrosshairLabelEvent(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,System.Collections.Generic.List{DevComponents.DotNetBar.Charts.CrosshairPoint},System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Handles invocation of RenderCrosshairLabel events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoRenderCrosshairLabelItemEvent(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.CrosshairPoint,System.Drawing.Rectangle,DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle)">
            <summary>
            Handles invocation of RenderCrosshairLabelItem events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoScrollEvent(DevComponents.DotNetBar.Charts.ChartContainer,System.Windows.Forms.ScrollEventArgs,DevComponents.DotNetBar.Charts.ScrollBarLite)">
            <summary>
            Handles invocation of Scroll events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoScrollMinEvent(DevComponents.DotNetBar.Charts.ChartContainer,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Handles invocation of ScrollMin events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoScrollMaxEvent(DevComponents.DotNetBar.Charts.ChartContainer,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Handles invocation of ScrollMax events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoSelectionChangedEvent(DevComponents.DotNetBar.Charts.ChartVisualElement,System.Boolean,System.Boolean)">
            <summary>
            Handles invocation of SelectionChanged events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.DoSeriesDataBindingCompleteEvent(DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.BaseSeries,System.Object)">
            <summary>
            Handles invocation of SeriesDataBindingComplete events
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnMouseLeave(System.EventArgs)">
            <summary>
            OnMouseLeave
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouseMove
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouseDown
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouseUp
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouseClick
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouseDoubleClick
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartControl.Cursor">
            <summary>
            Cursor
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.ClearAllSelected">
            <summary>
            Clears all selected items
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.BeginUpdate">
            <summary>
             Calling the BeginUpdate routine informs the Chart Control
             that an extended update phase has begun. The Chart Control
             will suspend all layout calculations and display updates
             until the corresponding EndUpdate routine is called.
             
             BeginUpdate / EndUpdate can be nested and must be
             called in pairs – every BeginUpdate must have a
             matching EndUpdate call.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.EndUpdate">
            <summary>
             Calling the EndUpdate routine informs the Chart Control
             that an extended update phase has ended.
             
             BeginUpdate / EndUpdate can be nested and must be
             called in pairs – every EndUpdate must have a
             matching BeginUpdate call.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.InvalidateRender(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Invalidates render of the chart element.
            </summary>
            <param name="gridElement">Element to invalidate rendering for.</param>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartControl.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnPropertyChangedEx(System.String,DevComponents.DotNetBar.Charts.Style.VisualChangeType)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
            <param name="changeType">invalidate</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartControl.OnPropertyChanged(System.String)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartCancelEventArgs">
            <summary>
            ChartCancelEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartCancelEventArgs.#ctor(DevComponents.DotNetBar.Charts.BaseChart)">
            <summary>
             ChartCancelEventArgs
            </summary>
            <param name="ChartControl">Associated Chart</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCancelEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the default operation.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartCompareElementsEventArgs">
            <summary>
            GridCompareElementsEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartCompareElementsEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartVisualElement,System.Object,System.Object)">
            <summary>
             ChartCompareElementsEventArgs
            </summary>
            <param name="chartElement"></param>
            <param name="a"></param>
            <param name="b"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCompareElementsEventArgs.ChartElement">
            <summary>
            Gets the visual ChartElement associated with the sort.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCompareElementsEventArgs.ElementA">
            <summary>
            Gets the left-hand element of the comparison
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCompareElementsEventArgs.ElementB">
            <summary>
            Gets the right-hand element of the comparison
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCompareElementsEventArgs.Result">
            <summary>
            Gets or sets the result of the element compare.
            -1 = ElementA is less than ElementB
            0 = ElementA is equal to ElementB
            +1 = ElementA is greater than ElementB
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartEventArgs">
            <summary>
            ChartEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartEventArgs.#ctor(DevComponents.DotNetBar.Charts.BaseChart)">
            <summary>
             ChartControlEventArgs
            </summary>
            <param name="chartControl">Associated ChartControl</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartEventArgs.Chart">
            <summary>
            Gets the associated Chart
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartDataBindingCompleteEventArgs">
            <summary>
            ChartDataBindingCompleteEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartDataBindingCompleteEventArgs.#ctor(DevComponents.DotNetBar.Charts.BaseChart,System.Object)">
            <summary>
             ChartDataBindingCompleteEventArgs
            </summary>
            <param name="BaseChart"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartDataBindingCompleteEventArgs.Source">
            <summary>
            Gets the data source that was bound to.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartDataBindingStartEventArgs">
            <summary>
            ChartDataBindingStartEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartDataBindingStartEventArgs.#ctor(DevComponents.DotNetBar.Charts.BaseChart,System.Object,System.Boolean)">
            <summary>
             ChartDataBindingStartEventArgs
            </summary>
            <param name="chartBase">Associated ChartControl</param>
            <param name="row">Associated ChartPanel</param>
            <param name="source">The data source being bound to</param>
            <param name="autoGenerateSeries">Whether to auto-generate panel series</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartDataBindingStartEventArgs.AutoGenerateSeries">
            <summary>
            Gets or sets whether to auto-generate
            the the panel series from the bound data.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartDataBindingStartEventArgs.Source">
            <summary>
            Gets the associated data source being bound to.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartEmptyTextMarkupLinkClickEventArgs">
            <summary>
            ChartEmptyTextMarkupLinkClickEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartEmptyTextMarkupLinkClickEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartContainer,System.String,System.String)">
            <summary>
            ChartEmptyTextMarkupLinkClickEventArgs
            </summary>
            <param name="chartControl"></param>
            <param name="title"></param>
            <param name="name"></param>
            <param name="href"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartEmptyTextMarkupLinkClickEventArgs.HRef">
            <summary>
            Gets the associated HyperLink HRef
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartEmptyTextMarkupLinkClickEventArgs.Name">
            <summary>
            Gets the associated HyperLink Name
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartEmptyTextMarkupLinkClickEventArgs.ChartContainer">
            <summary>
            Gets the associated ChartContainer
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartGetElementStyleEventArgs">
            <summary>
            ChartGetElementStyleEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartGetElementStyleEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartElement,DevComponents.DotNetBar.Charts.Style.StyleType,DevComponents.DotNetBar.Charts.Style.BaseVisualStyle)">
            <summary>
             ChartGetElementStyleEventArgs
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartGetElementStyleEventArgs.ChartElement">
            <summary>
            Gets the ChartElement.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartGetElementStyleEventArgs.StyleType">
            <summary>
            Gets the StyleType.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartGetElementStyleEventArgs.Style">
            <summary>
            Gets the Style.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartGetPieSeriesPointStyleEventArgs">
            <summary>
            ChartGetPieSeriesPointStyleEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartGetPieSeriesPointStyleEventArgs.#ctor(DevComponents.DotNetBar.Charts.PieSeriesPoint,DevComponents.DotNetBar.Charts.Style.StyleType,DevComponents.DotNetBar.Charts.Style.BaseVisualStyle)">
            <summary>
            ChartGetPieSeriesPointStyleEventArgs
            </summary>
            <param name="pieSeriesPoint"></param>
            <param name="styleType"></param>
            <param name="style"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartGetPieSeriesPointStyleEventArgs.PieSeriesPoint">
            <summary>
            Gets the PieSeriesPoint.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartGetPieSeriesPointStyleEventArgs.StyleType">
            <summary>
            Gets the StyleType.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartGetPieSeriesPointStyleEventArgs.Style">
            <summary>
            Gets the Style.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartMatrixResizedEventArgs">
            <summary>
            ChartMatrixResizedEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMatrixResizedEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartPanel)">
            <summary>
            ChartMatrixResizedEventArgs
            </summary>
            <param name="chartPanel"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMatrixResizedEventArgs.ChartPanel">
            <summary>
            Gets the associated ChartPanel
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartMouseClickEventArgs">
            <summary>
            ChartMouseClickEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMouseClickEventArgs.#ctor(DevComponents.DotNetBar.Charts.BaseChart,System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            ChartMouseClickEventArgs
            </summary>
            <param name="baseChart"></param>
            <param name="item"></param>
            <param name="e"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMouseClickEventArgs.BaseChart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMouseClickEventArgs.HitItem">
            <summary>
            Gets the associated hit item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMouseClickEventArgs.MouseEventArgs">
            <summary>
            Gets the associated MouseEventArgs
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartMouseDoubleClickEventArgs">
            <summary>
            ChartMouseDoubleClickEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMouseDoubleClickEventArgs.#ctor(DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ItemHitArea,DevComponents.DotNetBar.Charts.ChartVisualElement,System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            ChartMouseDoubleClickEventArgs
            </summary>
            <param name="baseChart"></param>
            <param name="hitArea"></param>
            <param name="hitItem"></param>
            <param name="e"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMouseDoubleClickEventArgs.BaseChart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMouseDoubleClickEventArgs.HitArea">
            <summary>
            Gets the associated hit area.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMouseDoubleClickEventArgs.HitItem">
            <summary>
            Gets the associated hit item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMouseDoubleClickEventArgs.HitElement">
            <summary>
            Gets the associated hit Visual Chart Element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMouseDoubleClickEventArgs.MouseEventArgs">
            <summary>
            Gets the associated MouseEventArgs
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartPanelCancelEventArgs">
            <summary>
            ChartPanelCancelEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPanelCancelEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartPanel)">
            <summary>
             ChartPanelCancelEventArgs
            </summary>
            <param name="chartControl">Associated ChartControl</param>
            <param name="chartControl">Associated ChartPanel</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPanelCancelEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel the default operation.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartPanelEventArgs">
            <summary>
            ChartPanelEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPanelEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartPanel)">
            <summary>
             ChartPanelEventArgs
            </summary>
            <param name="chartControl">Associated ChartControl</param>
            <param name="chartControl">Associated ChartPanel</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPanelEventArgs.ChartPanel">
            <summary>
            Gets the associated ChartPanel
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartPointLabelUpdateEventArgs">
            <summary>
            ChartPointLabelUpdateEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPointLabelUpdateEventArgs.#ctor(DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ChartSeries,System.Collections.Generic.List{DevComponents.DotNetBar.Charts.PointLabel})">
            <summary>
             ChartPointLabelUpdateEventArgs
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPointLabelUpdateEventArgs.Chart">
            <summary>
            Gets the associated BaseChart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPointLabelUpdateEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPointLabelUpdateEventArgs.PointLabels">
            <summary>
            Gets the associated list of PointLabels.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartScrollEventArgs">
            <summary>
            ChartScrollEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartScrollEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartContainer,System.Windows.Forms.ScrollEventArgs)">
            <summary>
             ChartScrollEventArgs
            </summary>
            <param name="ChartContainer"></param>
            <param name="scrollEventArgs"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartScrollEventArgs.ChartContainer">
            <summary>
            Gets the ChartContainer that was scrolled
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartScrollEventArgs.ScrollEventArgs">
            <summary>
            Gets the scroll event args
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartScrollBarValueChangedEventArgs">
            <summary>
            ChartScrollBarValueChangedEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartScrollBarValueChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartContainer,System.Int32,System.Int32)">
            <summary>
             ChartScrollBarValueChangedEventArgs
            </summary>
            <param name="chartContainer"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartScrollBarValueChangedEventArgs.ChartContainer">
            <summary>
            Gets the associated ChartContainer
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartScrollBarValueChangedEventArgs.OldValue">
            <summary>
            Gets the old scroll Value
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartScrollBarValueChangedEventArgs.NewValue">
            <summary>
            Gets the new scroll Value
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartTitleMarkupLinkClickEventArgs">
            <summary>
            ChartTitleMarkupLinkClickEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartTitleMarkupLinkClickEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartNote,System.String,System.String)">
            <summary>
            ChartTitleMarkupLinkClickEventArgs
            </summary>
            <param name="chartControl"></param>
            <param name="title"></param>
            <param name="name"></param>
            <param name="href"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartTitleMarkupLinkClickEventArgs.HRef">
            <summary>
            Gets the associated HyperLink HRef
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartTitleMarkupLinkClickEventArgs.Name">
            <summary>
            Gets the associated HyperLink Name
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartTitleMarkupLinkClickEventArgs.Title">
            <summary>
            Gets the associated Title
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.GetCrosshairAxisLabelEventArgs">
            <summary>
            GetCrosshairAxisLabelEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.GetCrosshairAxisLabelEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartAxis,System.Object,System.String)">
            <summary>
            GetCrosshairAxisLabelEventArgs
            </summary>
            <param name="axis">ChartAxis</param>
            <param name="value">object</param>
            <param name="labelText">string List</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetCrosshairAxisLabelEventArgs.ChartAxis">
            <summary>
            Gets the associated ChartAxis
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetCrosshairAxisLabelEventArgs.ChartXy">
            <summary>
            Gets the associated ChartXy
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetCrosshairAxisLabelEventArgs.Value">
            <summary>
            Gets the associated label Value
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetCrosshairAxisLabelEventArgs.LabelText">
            <summary>
            Gets or sets the label Text
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.GetCrosshairLabelHeaderEventArgs">
            <summary>
            GetCrosshairLabelHeaderEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.GetCrosshairLabelHeaderEventArgs.#ctor(DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.CrosshairPoint,System.Collections.Generic.List{DevComponents.DotNetBar.Charts.CrosshairPoint},System.String)">
            <summary>
            GetCrosshairLabelHeaderEventArgs
            </summary>
            <param name="chart">BaseChart</param>
            <param name="cp">CrosshairPoint</param>
            <param name="cps">CrosshairPoint List</param>
            <param name="text">Default header text</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetCrosshairLabelHeaderEventArgs.Chart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetCrosshairLabelHeaderEventArgs.CrosshairPoint">
            <summary>
            Gets the associated CrosshairPoint (for which
            the header text is defined for)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetCrosshairLabelHeaderEventArgs.CrosshairPoints">
            <summary>
            Gets the full list of CrosshairPoints
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetCrosshairLabelHeaderEventArgs.Text">
            <summary>
            Gets or sets the CrosshairPoint header Text
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.GetCrosshairLabelItemEventArgs">
            <summary>
            GetCrosshairLabelItemEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.GetCrosshairLabelItemEventArgs.#ctor(DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.CrosshairPoint,System.String)">
            <summary>
            GetCrosshairLabelItemEventArgs
            </summary>
            <param name="chart">BaseChart</param>
            <param name="cp">CrosshairPoint</param>
            <param name="text">Item text</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetCrosshairLabelItemEventArgs.Chart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetCrosshairLabelItemEventArgs.CrosshairPoint">
            <summary>
            Gets the associated CrosshairPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetCrosshairLabelItemEventArgs.Text">
            <summary>
            Gets or sets the CrosshairPoint item Text
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.GetPieCenterLabelEventArgs">
            <summary>
            GetPieCenterLabelEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.GetPieCenterLabelEventArgs.#ctor(DevComponents.DotNetBar.Charts.PieChart,System.String)">
            <summary>
            GetPieCenterLabelEventArgs
            </summary>
            <param name="pieChart"></param>
            <param name="text"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetPieCenterLabelEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetPieCenterLabelEventArgs.LabelText">
            <summary>
            Gets or sets the Center Label Text
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.GetSliceLabelEventArgs">
            <summary>
            GetSliceLabelEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.GetSliceLabelEventArgs.#ctor(DevComponents.DotNetBar.Charts.PieChart,DevComponents.DotNetBar.Charts.PieSeries,DevComponents.DotNetBar.Charts.PieSeriesPoint,System.Boolean,System.String)">
            <summary>
            GetSliceLabelEventArgs
            </summary>
            <param name="chart"></param>
            <param name="chartSeries"></param>
            <param name="psp"></param>
            <param name="inner"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetSliceLabelEventArgs.Chart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetSliceLabelEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetSliceLabelEventArgs.PieSeriesPoint">
            <summary>
            Gets the associated PieSeriesPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetSliceLabelEventArgs.InnerLabel">
            <summary>
            Gets whether the request is for the inner
            or outer label of the slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetSliceLabelEventArgs.Text">
            <summary>
            Gets or sets the label Text
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.GetTickmarkLabelEventArgs">
            <summary>
            GetTickmarkLabelEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.GetTickmarkLabelEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartAxis,System.Object,System.String)">
            <summary>
            GetTickmarkLabelEventArgs
            </summary>
            <param name="axis">ChartAxis</param>
            <param name="value">object</param>
            <param name="labelText">string List</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetTickmarkLabelEventArgs.ChartAxis">
            <summary>
            Gets the associated ChartAxis
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetTickmarkLabelEventArgs.ChartXy">
            <summary>
            Gets the associated ChartXy
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetTickmarkLabelEventArgs.Value">
            <summary>
            Gets the associated label Value
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetTickmarkLabelEventArgs.LabelText">
            <summary>
            Gets or sets the label Text
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetTickmarkLabelEventArgs.LabelColor">
            <summary>
            Gets or sets the label Color
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.GetToolTipEventArgs">
            <summary>
            GetToolTipEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.GetToolTipEventArgs.#ctor(DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.BaseSeries,DevComponents.DotNetBar.Charts.SeriesPoint,System.String)">
            <summary>
            GetToolTipEventArgs
            </summary>
            <param name="baseChart"></param>
            <param name="baseSeries"></param>
            <param name="sp"></param>
            <param name="toolTip"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetToolTipEventArgs.BaseChart">
            <summary>
            Gets the associated BaseChart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetToolTipEventArgs.BaseSeries">
            <summary>
            Gets the associated BaseSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetToolTipEventArgs.SeriesPoint">
            <summary>
            Gets the associated SeriesPoint.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetToolTipEventArgs.PieChart">
            <summary>
            Gets the associated PieChart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetToolTipEventArgs.PieSeries">
            <summary>
            Gets the associated PieSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetToolTipEventArgs.PieSeriesPoint">
            <summary>
            Gets the associated PieSeriesPoint.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.GetToolTipEventArgs.ToolTip">
            <summary>
            Gets or sets the associated ToolTip text
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.LegendItemCheckedChangedEventArgs">
            <summary>
            LegendItemCheckedChangedEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.LegendItemCheckedChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartLegend,DevComponents.DotNetBar.Charts.ChartLegendItem)">
            <summary>
             LegendItemCheckedChangedEventArgs
            </summary>
            <param name="legend">Associated legend</param>
            <param name="legendItem">Associated legend item</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.LegendItemCheckedChangedEventArgs.Legend">
            <summary>
            Gets the associated Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.LegendItemCheckedChangedEventArgs.LegendItem">
            <summary>
            Gets the associated LegendItem.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PieCenterMarkupLinkClickEventArgs">
            <summary>
            PieCenterMarkupLinkClickEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieCenterMarkupLinkClickEventArgs.#ctor(DevComponents.DotNetBar.Charts.PieChart,System.String,System.String)">
            <summary>
             PieCenterMarkupLinkClickEventArgs
            </summary>
            <param name="pieChart"></param>
            <param name="name"></param>
            <param name="href"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieCenterMarkupLinkClickEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieCenterMarkupLinkClickEventArgs.HRef">
            <summary>
            Gets the associated HyperLink HRef
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieCenterMarkupLinkClickEventArgs.Name">
            <summary>
            Gets the associated HyperLink Name
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PieDetachChangedEventArgs">
            <summary>
            PieDetachChangedEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieDetachChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.PieChart,DevComponents.DotNetBar.Charts.PieSeries,DevComponents.DotNetBar.Charts.PieSelectionMode)">
            <summary>
            PieDetachChangedEventArgs
            </summary>
            <param name="pieChart"></param>
            <param name="pieSeries"></param>
            <param name="psm"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieDetachChangedEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieDetachChangedEventArgs.PieSeries">
            <summary>
            Gets the associated PieSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieDetachChangedEventArgs.PieSelectionMode">
            <summary>
            Gets the associated PieSelectionMode.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PieExplodeChangedEventArgs">
            <summary>
            PieExplodeChangedEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieExplodeChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.PieChart,DevComponents.DotNetBar.Charts.PieSeries)">
            <summary>
            PieExplodeChangedEventArgs
            </summary>
            <param name="pieChart"></param>
            <param name="pieSeries"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieExplodeChangedEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieExplodeChangedEventArgs.PieSeries">
            <summary>
            Gets the associated PieSeries.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PieRingLevelChangedEventArgs">
            <summary>
            PieRingLevelChangedEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieRingLevelChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.PieChart,DevComponents.DotNetBar.Charts.PieSeriesPointCollection,DevComponents.DotNetBar.Charts.PieSeriesPointCollection)">
            <summary>
            PieRingLevelChanged
            </summary>
            <param name="pieChart"></param>
            <param name="spcOld"></param>
            <param name="spcNew"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRingLevelChangedEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRingLevelChangedEventArgs.SpcOld">
            <summary>
            Gets the old, post-change PieSeriesPointCollection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRingLevelChangedEventArgs.SpcNew">
            <summary>
            Gets the new, post-change PieSeriesPointCollection.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PieRingLevelChangingEventArgs">
            <summary>
            PieRingLevelChanging
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieRingLevelChangingEventArgs.#ctor(DevComponents.DotNetBar.Charts.PieChart,DevComponents.DotNetBar.Charts.PieSeriesPointCollection,DevComponents.DotNetBar.Charts.PieSeriesPointCollection)">
            <summary>
            PieRingLevelChangingEventArgs
            </summary>
            <param name="pieChart"></param>
            <param name="spcOld"></param>
            <param name="spcNew"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRingLevelChangingEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRingLevelChangingEventArgs.SpcOld">
            <summary>
            Gets the old, pre-change PieSeriesPointCollection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRingLevelChangingEventArgs.SpcNew">
            <summary>
            Gets the new, pre-change PieSeriesPointCollection.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PieSelectionChangedEventArgs">
            <summary>
            PieSelectionChangedEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSelectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.PieChart,DevComponents.DotNetBar.Charts.PieSeries,DevComponents.DotNetBar.Charts.PieSeriesPoint,DevComponents.DotNetBar.Charts.PieSelectionMode)">
            <summary>
            PieSelectionChangedEventArgs
            </summary>
            <param name="pieChart"></param>
            <param name="pieSeries"></param>
            <param name="psp"></param>
            <param name="psm"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSelectionChangedEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSelectionChangedEventArgs.PieSeries">
            <summary>
            Gets the associated PieSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSelectionChangedEventArgs.PieSeriesPoint">
            <summary>
            Gets the associated PieSeriesPoint (may not be
            applicable for the associated PieSelectionMode).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSelectionChangedEventArgs.PieSelectionMode">
            <summary>
            Gets the associated PieSelectionMode.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostLoadLegendDataEventArgs">
            <summary>
            PostLoadLegendDataEventArgs
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostLoadLegendDataEventArgs.Legend">
            <summary>
            Gets the associated Legend
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostLoadLegendDataEventArgs.ChartContainer">
            <summary>
            Gets the Legend's parent ChartContainer
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostRenderContentBackgroundEventArgs">
            <summary>
            PostRenderContentBackgroundEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PostRenderContentBackgroundEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,System.Drawing.Rectangle)">
            <summary>
            PostRenderContentBackgroundEventArgs
            </summary>
            <param name="g">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="bounds">Bounds</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderContentBackgroundEventArgs.BaseChart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderContentBackgroundEventArgs.ChartXy">
            <summary>
            Gets the associated ChartXy
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderContentBackgroundEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderContentBackgroundEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderContentBackgroundEventArgs.Bounds">
            <summary>
            Gets the associated bounding rectangle
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostRenderFrameBackgroundEventArgs">
            <summary>
            PostRenderFrameBackgroundEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PostRenderFrameBackgroundEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,System.Drawing.Rectangle)">
            <summary>
            PostRenderFrameBackgroundEventArgs
            </summary>
            <param name="g">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="bounds">Bounds</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderFrameBackgroundEventArgs.BaseChart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderFrameBackgroundEventArgs.ChartXy">
            <summary>
            Gets the associated ChartXy
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderFrameBackgroundEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderFrameBackgroundEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderFrameBackgroundEventArgs.Bounds">
            <summary>
            Gets the associated bounding rectangle
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostRenderPanelBackgroundEventArgs">
            <summary>
            PostRenderPanelBackgroundEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PostRenderPanelBackgroundEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.ChartPanel,System.Drawing.Rectangle)">
            <summary>
            PostRenderPanelBackgroundEventArgs
            </summary>
            <param name="g">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="bounds">Bounds</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPanelBackgroundEventArgs.ChartPanel">
            <summary>
            Gets the associated ChartPanel
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPanelBackgroundEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPanelBackgroundEventArgs.Bounds">
            <summary>
            Gets the associated bounding rectangle
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostRenderSeriesBarEventArgs">
            <summary>
            PostRenderSeriesBarEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PostRenderSeriesBarEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ChartSeries,DevComponents.DotNetBar.Charts.SeriesPoint,System.Drawing.Rectangle,System.Drawing.Rectangle,DevComponents.DotNetBar.Charts.BarSegment)">
            <summary>
            PostRenderSeriesBarEventArgs
            </summary>
            <param name="graphics">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="series">Chart Series</param>
            <param name="sp">SeriesPoint</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesBarEventArgs.Chart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesBarEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesBarEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesBarEventArgs.Bounds">
            <summary>
            Gets the bounds for the bar segment.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesBarEventArgs.SeriesPoint">
            <summary>
            Gets the associated SeriesPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesBarEventArgs.ExtendedBounds">
            <summary>
            Gets the 'extended' rectangle for the bar (calculated based
            upon the series maximum displayed bar bounds).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesBarEventArgs.BarSegment">
            <summary>
            Gets the associated 'segment' of the bar being rendered.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostRenderSeriesHiLoBarEventArgs">
            <summary>
            PreRenderSeriesHiLoBarEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PostRenderSeriesHiLoBarEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ChartSeries,DevComponents.DotNetBar.Charts.HiLoRenderData,System.Drawing.Point,System.Drawing.Point,DevComponents.DotNetBar.Charts.HiLoBarSegment)">
            <summary>
            PostRenderSeriesHiLoBarEventArgs
            </summary>
            <param name="g"></param>
            <param name="chartXy"></param>
            <param name="chartSeries"></param>
            <param name="rd"></param>
            <param name="pt1"></param>
            <param name="pt2"></param>
            <param name="segment"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesHiLoBarEventArgs.Chart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesHiLoBarEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesHiLoBarEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesHiLoBarEventArgs.RenderData">
            <summary>
            Gets the associated HiLo RenderData.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesHiLoBarEventArgs.BarSegment">
            <summary>
            Gets the associated HiLo BarSegment.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesHiLoBarEventArgs.Point1">
            <summary>
            Gets the initial segment Point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesHiLoBarEventArgs.Point2">
            <summary>
            Gets the terminal segment Point.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostRenderSliceEventArgs">
            <summary>
            PostRenderSliceEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PostRenderSliceEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,DevComponents.DotNetBar.Charts.PieChart,DevComponents.DotNetBar.Charts.PieSeries,DevComponents.DotNetBar.Charts.PieSeriesPoint,DevComponents.DotNetBar.Charts.SliceRenderType)">
            <summary>
            PostRenderSliceEventArgs
            </summary>
            <param name="g"></param>
            <param name="path"></param>
            <param name="pieChart"></param>
            <param name="pieSeries"></param>
            <param name="psp"></param>
            <param name="type"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSliceEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSliceEventArgs.PieSeries">
            <summary>
            Gets the associated PieSeries
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSliceEventArgs.PieSeriesPoint">
            <summary>
            Gets the associated PieSeriesPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSliceEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSliceEventArgs.GraphicsPath">
            <summary>
            Gets the GraphicsPath for the slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSliceEventArgs.SliceRenderType">
            <summary>
            Gets the SliceRenderType - they 'type' of slice element being rendered.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostRenderPieCenterBackgroundEventArgs">
            <summary>
            PostRenderPieCenterBackgroundEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PostRenderPieCenterBackgroundEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.PieChart,System.Drawing.Rectangle)">
            <summary>
            PostRenderPieCenterBackgroundEventArgs
            </summary>
            <param name="g"></param>
            <param name="pieChart"></param>
            <param name="rc"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPieCenterBackgroundEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPieCenterBackgroundEventArgs.CenterBounds">
            <summary>
            Gets the Pie Center Bounds.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPieCenterBackgroundEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostRenderPieCenterContentEventArgs">
            <summary>
            PostRenderPieCenterContentEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PostRenderPieCenterContentEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.PieChart,System.Drawing.Rectangle,System.String)">
            <summary>
            PostRenderPieCenterContentEventArgs
            </summary>
            <param name="g"></param>
            <param name="pieChart"></param>
            <param name="rt"></param>
            <param name="centerlabel"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPieCenterContentEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPieCenterContentEventArgs.TextBounds">
            <summary>
            Gets the Pie Center Text Bounds.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPieCenterContentEventArgs.CenterLabel">
            <summary>
            Gets the center text label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPieCenterContentEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostRenderPointConnectorEventArgs">
            <summary>
            PostRenderPointConnectorEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PostRenderPointConnectorEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ChartSeries,DevComponents.DotNetBar.Charts.PointLabel,System.Boolean,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            PostRenderPointConnectorEventArgs
            </summary>
            <param name="graphics">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="series">Chart Series</param>
            <param name="pointLabel">PointLabel</param>
            <param name="isCrosshairPoint">Is the point a crosshair point</param>
            <param name="dataPt">Data Point</param>
            <param name="labelPt">Label Point</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointConnectorEventArgs.Chart">
            <summary>
            Gets the associated BaseChart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointConnectorEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointConnectorEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointConnectorEventArgs.PointLabel">
            <summary>
            Gets the associated PointLabel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointConnectorEventArgs.IsCrosshairPoint">
            <summary>
            Gets the whether the point is a Crosshair Point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointConnectorEventArgs.DataPoint">
            <summary>
            Gets the data-side Connector Point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointConnectorEventArgs.LabelPoint">
            <summary>
            Gets the label-side Connector Point.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostRenderPointLabelEventArgs">
            <summary>
            PostRenderPointLabelEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PostRenderPointLabelEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ChartSeries,DevComponents.DotNetBar.Charts.PointLabel,System.Boolean,System.Drawing.Rectangle)">
            <summary>
            PostRenderPointLabelEventArgs
            </summary>
            <param name="graphics">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="series">Chart Series</param>
            <param name="pointLabel">PointLabel</param>
            <param name="isCrosshairPoint">Is the point a crosshair point</param>
            <param name="bounds">Display Bounds</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointLabelEventArgs.Chart">
            <summary>
            Gets the associated BaseChart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointLabelEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointLabelEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointLabelEventArgs.PointLabel">
            <summary>
            Gets the associated PointLabel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointLabelEventArgs.IsCrosshairPoint">
            <summary>
            Gets the whether the point is a Crosshair Point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderPointLabelEventArgs.Bounds">
            <summary>
            Gets the bounding display rectangle.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostRenderRadialGridEventArgs">
            <summary>
            PostRenderRadialGridEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PostRenderRadialGridEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.PieChart,System.Double,System.Double,System.Double)">
            <summary>
            PostRenderRadialGridEventArgs
            </summary>
            <param name="graphics"></param>
            <param name="pieChart"></param>
            <param name="outerRadius"></param>
            <param name="innerRadius"></param>
            <param name="exp"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderRadialGridEventArgs.PieChart">
            <summary>
            Gets the associated PieChart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderRadialGridEventArgs.InnerRadius">
            <summary>
            Gets the inner, bounding radius for the grid.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderRadialGridEventArgs.OuterRadius">
            <summary>
            Gets the outer, bounding radius for the grid.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderRadialGridEventArgs.ExpDelta">
            <summary>
            Gets the expanded/exploded delta for the grid.  This is
            the adjustment needed if the pie has been expanded. If you
            want to render an expanded grid, then this delta should be
            added to both the inner and outer radius values.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderRadialGridEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PostRenderSeriesPointEventArgs">
            <summary>
            PostRenderSeriesPointEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PostRenderSeriesPointEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ChartSeries,DevComponents.DotNetBar.Charts.SeriesPoint,System.Drawing.Point,System.Drawing.Size,System.Drawing.Image)">
            <summary>
            PostRenderSeriesPointEventArgs
            </summary>
            <param name="graphics">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="series">Chart Series</param>
            <param name="pt">Marker Point (center)</param>
            <param name="sp">SeriesPoint</param>
            <param name="pointSize">Max marker point size</param>
            <param name="marker">Marker Image</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesPointEventArgs.Chart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesPointEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesPointEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesPointEventArgs.Point">
            <summary>
            Gets the center point for the marker
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesPointEventArgs.SeriesPoint">
            <summary>
            Gets the associated SeriesPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesPointEventArgs.PointSize">
            <summary>
            Gets the max size for the point marker
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PostRenderSeriesPointEventArgs.Marker">
            <summary>
            Gets the associated marker Image
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreLoadLegendDataEventArgs">
            <summary>
            PreLoadLegendDataEventArgs
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreLoadLegendDataEventArgs.Legend">
            <summary>
            Gets the associated Legend
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreLoadLegendDataEventArgs.ChartContainer">
            <summary>
            Gets the Legend's parent ChartContainer
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreRenderContentBackgroundEventArgs">
            <summary>
            PreRenderContentBackgroundEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PreRenderContentBackgroundEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,System.Drawing.Rectangle)">
            <summary>
            PreRenderContentBackgroundEventArgs
            </summary>
            <param name="g"></param>
            <param name="baseChart"></param>
            <param name="r"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderContentBackgroundEventArgs.BaseChart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderContentBackgroundEventArgs.ChartXy">
            <summary>
            Gets the associated ChartXy
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderContentBackgroundEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderContentBackgroundEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderContentBackgroundEventArgs.Bounds">
            <summary>
            Gets the bounds for the bar segment.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreRenderFrameBackgroundEventArgs">
            <summary>
            PreRenderFrameBackgroundEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PreRenderFrameBackgroundEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,System.Drawing.Rectangle)">
            <summary>
            PreRenderFrameBackgroundEventArgs
            </summary>
            <param name="g"></param>
            <param name="baseChart"></param>
            <param name="r"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderFrameBackgroundEventArgs.BaseChart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderFrameBackgroundEventArgs.ChartXy">
            <summary>
            Gets the associated ChartXy
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderFrameBackgroundEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderFrameBackgroundEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderFrameBackgroundEventArgs.Bounds">
            <summary>
            Gets the bounds for the bar segment.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreRenderPanelBackgroundEventArgs">
            <summary>
            PreRenderPanelBackgroundEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PreRenderPanelBackgroundEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.ChartPanel,System.Drawing.Rectangle)">
            <summary>
            PreRenderPanelBackgroundEventArgs
            </summary>
            <param name="g"></param>
            <param name="panel"></param>
            <param name="r"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPanelBackgroundEventArgs.ChartPanel">
            <summary>
            Gets the associated ChartPanel
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPanelBackgroundEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPanelBackgroundEventArgs.Bounds">
            <summary>
            Gets the bounds for the bar segment.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreRenderPieCenterBackgroundEventArgs">
            <summary>
            PreRenderPieCenterBackgroundEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PreRenderPieCenterBackgroundEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.PieChart,System.Drawing.Rectangle)">
            <summary>
            PreRenderPieCenterBackgroundEventArgs
            </summary>
            <param name="g"></param>
            <param name="pieChart"></param>
            <param name="rc"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPieCenterBackgroundEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPieCenterBackgroundEventArgs.CenterBounds">
            <summary>
            Gets the Pie Center Bounds.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPieCenterBackgroundEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreRenderPieCenterContentEventArgs">
            <summary>
            PreRenderPieCenterContentEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PreRenderPieCenterContentEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.PieChart,System.Drawing.Rectangle,System.String)">
            <summary>
            PreRenderPieCenterContentEventArgs
            </summary>
            <param name="g"></param>
            <param name="pieChart"></param>
            <param name="rt"></param>
            <param name="centerlabel"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPieCenterContentEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPieCenterContentEventArgs.TextBounds">
            <summary>
            Gets the Pie Center Text Bounds.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPieCenterContentEventArgs.CenterLabel">
            <summary>
            Gets the center text label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPieCenterContentEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreRenderPointConnectorEventArgs">
            <summary>
            PreRenderPointConnectorEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PreRenderPointConnectorEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ChartSeries,DevComponents.DotNetBar.Charts.PointLabel,System.Boolean,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            PreRenderPointConnectorEventArgs
            </summary>
            <param name="graphics">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="series">Chart Series</param>
            <param name="pointLabel">PointLabel</param>
            <param name="isCrosshairPoint">Is the point a crosshair point</param>
            <param name="dataPt">Data Point</param>
            <param name="labelPt">Label Point</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointConnectorEventArgs.Chart">
            <summary>
            Gets the associated BaseChart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointConnectorEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointConnectorEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointConnectorEventArgs.PointLabel">
            <summary>
            Gets the associated PointLabel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointConnectorEventArgs.IsCrosshairPoint">
            <summary>
            Gets the whether the point is a Crosshair Point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointConnectorEventArgs.DataPoint">
            <summary>
            Gets the data-side Connector Point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointConnectorEventArgs.LabelPoint">
            <summary>
            Gets the label-side Connector Point.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreRenderPointLabelEventArgs">
            <summary>
            PreRenderPointLabelEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PreRenderPointLabelEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ChartSeries,DevComponents.DotNetBar.Charts.PointLabel,System.Boolean,System.Drawing.Rectangle)">
            <summary>
            PreRenderPointLabelEventArgs
            </summary>
            <param name="graphics">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="series">Chart Series</param>
            <param name="pointLabel">PointLabel</param>
            <param name="isCrosshairPoint">Is the point a crosshair point</param>
            <param name="bounds">Display Bounds</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointLabelEventArgs.Chart">
            <summary>
            Gets the associated BaseChart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointLabelEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointLabelEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointLabelEventArgs.PointLabel">
            <summary>
            Gets the associated PointLabel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointLabelEventArgs.IsCrosshairPoint">
            <summary>
            Gets the whether the point is a Crosshair Point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderPointLabelEventArgs.Bounds">
            <summary>
            Gets the bounding display rectangle.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreRenderRadialGridEventArgs">
            <summary>
            PreRenderRadialGridEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PreRenderRadialGridEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.PieChart,System.Double,System.Double,System.Double)">
            <summary>
            PreRenderRadialGridEventArgs
            </summary>
            <param name="graphics"></param>
            <param name="pieChart"></param>
            <param name="outerRadius"></param>
            <param name="innerRadius"></param>
            <param name="exp"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderRadialGridEventArgs.PieChart">
            <summary>
            Gets the associated PieChart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderRadialGridEventArgs.InnerRadius">
            <summary>
            Gets the inner, bounding radius for the grid.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderRadialGridEventArgs.OuterRadius">
            <summary>
            Gets the outer, bounding radius for the grid.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderRadialGridEventArgs.ExpDelta">
            <summary>
            Gets the expanded/exploded delta for the grid.  This is
            the adjustment needed if the pie has been expanded. If you
            want to render an expanded grid, then this delta should be
            added to both the inner and outer radius values.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderRadialGridEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreRenderSeriesBarEventArgs">
            <summary>
            PreRenderSeriesBarEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PreRenderSeriesBarEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ChartSeries,DevComponents.DotNetBar.Charts.SeriesPoint,System.Drawing.Rectangle,System.Drawing.Rectangle,DevComponents.DotNetBar.Charts.BarSegment)">
            <summary>
            PreRenderSeriesBarEventArgs
            </summary>
            <param name="graphics"></param>
            <param name="chart"></param>
            <param name="series"></param>
            <param name="sp"></param>
            <param name="r"></param>
            <param name="r2"></param>
            <param name="segment"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesBarEventArgs.Chart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesBarEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesBarEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesBarEventArgs.Bounds">
            <summary>
            Gets the bounds for the bar segment.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesBarEventArgs.FillRangeBounds">
            <summary>
            Gets the 'FillRange' bounds for the bar (See ChartXy.FillRange).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesBarEventArgs.SeriesPoint">
            <summary>
            Gets the associated SeriesPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesBarEventArgs.BarSegment">
            <summary>
            Gets the associated 'segment' of the bar being rendered.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreRenderSeriesHiLoBarEventArgs">
            <summary>
            PreRenderSeriesHiLoBarEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PreRenderSeriesHiLoBarEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ChartSeries,DevComponents.DotNetBar.Charts.HiLoRenderData,System.Drawing.Point,System.Drawing.Point,DevComponents.DotNetBar.Charts.HiLoBarSegment)">
            <summary>
            PreRenderSeriesHiLoBarEventArgs
            </summary>
            <param name="g"></param>
            <param name="chartXy"></param>
            <param name="chartSeries"></param>
            <param name="rd"></param>
            <param name="pt1"></param>
            <param name="pt2"></param>
            <param name="segment"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesHiLoBarEventArgs.Chart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesHiLoBarEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesHiLoBarEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesHiLoBarEventArgs.RenderData">
            <summary>
            Gets the associated HiLo RenderData.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesHiLoBarEventArgs.BarSegment">
            <summary>
            Gets the associated HiLo BarSegment.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesHiLoBarEventArgs.Point1">
            <summary>
            Gets the initial segment Point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesHiLoBarEventArgs.Point2">
            <summary>
            Gets the terminal segment Point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesHiLoBarEventArgs.SeriesPoint">
            <summary>
            Gets the associated SeriesPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesHiLoBarEventArgs.SeriesPointIndex">
            <summary>
            Gets the associated SeriesPoint index
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreRenderSeriesPointEventArgs">
            <summary>
            PreRenderSeriesPointEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PreRenderSeriesPointEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.ChartSeries,DevComponents.DotNetBar.Charts.SeriesPoint,System.Drawing.Point,System.Drawing.Size,System.Drawing.Image)">
            <summary>
            PreRenderSeriesPointEventArgs
            </summary>
            <param name="graphics">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="series">Chart Series</param>
            <param name="pt">Marker Point (center)</param>
            <param name="sp">SeriesPoint</param>
            <param name="pointSize">Max marker point size</param>
            <param name="marker">Marker Image</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesPointEventArgs.Chart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesPointEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesPointEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesPointEventArgs.Point">
            <summary>
            Gets the center point for the marker
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesPointEventArgs.SeriesPoint">
            <summary>
            Gets the associated SeriesPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesPointEventArgs.PointSize">
            <summary>
            Gets the max size for the point marker
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSeriesPointEventArgs.Marker">
            <summary>
            Gets or sets the associated marker Image
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PreRenderSliceEventArgs">
            <summary>
            PreRenderSliceEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PreRenderSliceEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,DevComponents.DotNetBar.Charts.PieChart,DevComponents.DotNetBar.Charts.PieSeries,DevComponents.DotNetBar.Charts.PieSeriesPoint,DevComponents.DotNetBar.Charts.SliceRenderType)">
            <summary>
            PreRenderSliceEventArgs
            </summary>
            <param name="g"></param>
            <param name="path"></param>
            <param name="pieChart"></param>
            <param name="pieSeries"></param>
            <param name="psp"></param>
            <param name="rtype"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSliceEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSliceEventArgs.PieSeries">
            <summary>
            Gets the associated PieSeries
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSliceEventArgs.PieSeriesPoint">
            <summary>
            Gets the associated PieSeriesPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSliceEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSliceEventArgs.GraphicsPath">
            <summary>
            Gets the GraphicsPath for the slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PreRenderSliceEventArgs.SliceRenderType">
            <summary>
            Gets the SliceRenderType - they 'type' of slice element being rendered.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ReferenceLineMarkupLinkClickEventArgs">
            <summary>
            ReferenceLineMarkupLinkClickEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ReferenceLineMarkupLinkClickEventArgs.#ctor(DevComponents.DotNetBar.Charts.ReferenceLine,System.String,System.String)">
            <summary>
            ReferenceLineMarkupLinkClickEventArgs
            </summary>
            <param name="referenceLine"></param>
            <param name="name"></param>
            <param name="href"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLineMarkupLinkClickEventArgs.HRef">
            <summary>
            Gets the associated HyperLink HRef
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLineMarkupLinkClickEventArgs.Name">
            <summary>
            Gets the associated HyperLink Name
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLineMarkupLinkClickEventArgs.ReferenceLine">
            <summary>
            Gets the associated ReferenceLine
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.RenderCrosshairCalloutEventArgs">
            <summary>
            RenderCrosshairCalloutEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.RenderCrosshairCalloutEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,System.Drawing.Rectangle,System.Drawing.Point,DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle)">
            <summary>
            RenderCrosshairCalloutEventArgs
            </summary>
            <param name="graphics">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="bounds">Callout bounds</param>
            <param name="pt">Mouse point</param>
            <param name="style">Crosshair style</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairCalloutEventArgs.Chart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairCalloutEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairCalloutEventArgs.Style">
            <summary>
            Gets the Crosshair style
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairCalloutEventArgs.Bounds">
            <summary>
            Gets the bounding chart Rectangle
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairCalloutEventArgs.Point">
            <summary>
            Gets the associated mouse position
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.RenderCrosshairLabelEventArgs">
            <summary>
            RenderCrosshairLabelEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.RenderCrosshairLabelEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,System.Collections.Generic.List{DevComponents.DotNetBar.Charts.CrosshairPoint},System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            RenderCrosshairLabelEventArgs
            </summary>
            <param name="graphics">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="cps">CrosshairPoint list</param>
            <param name="bounds"></param>
            <param name="pt">Mouse Point</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairLabelEventArgs.Chart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairLabelEventArgs.CrosshairPoints">
            <summary>
            Gets the list of CrosshairPoints
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairLabelEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairLabelEventArgs.Bounds">
            <summary>
            Gets the bounding chart Rectangle
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairLabelEventArgs.Point">
            <summary>
            Gets the associated mouse position
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.RenderCrosshairLabelItemEventArgs">
            <summary>
            RenderCrosshairLabelItemEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.RenderCrosshairLabelItemEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.CrosshairPoint,System.Drawing.Rectangle,DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle)">
            <summary>
            RenderCrosshairLabelItemEventArgs
            </summary>
            <param name="graphics">Graphics</param>
            <param name="chart">BaseChart</param>
            <param name="cp">CrosshairPoint</param>
            <param name="bounds">Bounding rectangle</param>
            <param name="style">Style</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairLabelItemEventArgs.Chart">
            <summary>
            Gets the associated BaseChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairLabelItemEventArgs.CrosshairPoint">
            <summary>
            Gets the associated CrosshairPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairLabelItemEventArgs.Style">
            <summary>
            Gets the Crosshair style
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairLabelItemEventArgs.Bounds">
            <summary>
            Gets the bounding chart Rectangle
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderCrosshairLabelItemEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.RenderPieRingOutEventArgs">
            <summary>
            RenderSliceCenterLineEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.RenderPieRingOutEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.PieChart,System.Drawing.Rectangle)">
            <summary>
            RenderPieRingOutEventArgs
            </summary>
            <param name="g"></param>
            <param name="pieChart"></param>
            <param name="r"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderPieRingOutEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderPieRingOutEventArgs.RingOutBounds">
            <summary>
            Gets the associated Ring-Out indicator bounds.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderPieRingOutEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.RenderSliceCenterLineEventArgs">
            <summary>
            RenderSliceCenterLineEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.RenderSliceCenterLineEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.PieChart,DevComponents.DotNetBar.Charts.PieSeriesPoint,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            RenderSliceCenterLineEventArgs
            </summary>
            <param name="graphics"></param>
            <param name="pieChart"></param>
            <param name="psp"></param>
            <param name="ptInner"></param>
            <param name="ptOuter"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceCenterLineEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceCenterLineEventArgs.PieSeriesPoint">
            <summary>
            Gets the associated PieSeriesPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceCenterLineEventArgs.PtInner">
            <summary>
            Gets the inner Point for the CenterLine.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceCenterLineEventArgs.PtOuter">
            <summary>
            Gets the outer Point for the CenterLine.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceCenterLineEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.RenderSliceInnerLabelEventArgs">
            <summary>
            RenderSliceInnerLabelEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.RenderSliceInnerLabelEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.PieChart,DevComponents.DotNetBar.Charts.PieSeriesPoint,System.String,System.Boolean)">
            <summary>
            RenderSliceInnerLabelEventArgs
            </summary>
            <param name="graphics"></param>
            <param name="pieChart"></param>
            <param name="psp"></param>
            <param name="text"></param>
            <param name="displayed"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceInnerLabelEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceInnerLabelEventArgs.PieSeriesPoint">
            <summary>
            Gets the associated PieSeriesPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceInnerLabelEventArgs.Text">
            <summary>
            Gets the label text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceInnerLabelEventArgs.Displayed">
            <summary>
            Gets or sets whether the label text was displayed. This value
            will determine whether the lable will be displayed as an outer
            label when SliceLabelDisplayMode is set to InnerXorOuter.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceInnerLabelEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.RenderSliceOuterLabelEventArgs">
            <summary>
            RenderSliceOuterLabelEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.RenderSliceOuterLabelEventArgs.#ctor(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.PieChart,DevComponents.DotNetBar.Charts.PieSeriesPoint,DevComponents.DotNetBar.Charts.PieLabel)">
            <summary>
            RenderSliceOuterLabelEventArgs
            </summary>
            <param name="graphics"></param>
            <param name="pieChart"></param>
            <param name="psp"></param>
            <param name="pl"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceOuterLabelEventArgs.PieChart">
            <summary>
            Gets the associated PieChart
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceOuterLabelEventArgs.PieSeriesPoint">
            <summary>
            Gets the associated PieSeriesPoint
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceOuterLabelEventArgs.PieLabel">
            <summary>
            Gets the PieLabel defining the label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RenderSliceOuterLabelEventArgs.Graphics">
            <summary>
            Gets the associated Graphics object
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.SelectionChangedEventArgs">
            <summary>
            SelectionChangedEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SelectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.ChartVisualElement,System.Boolean,System.Boolean,System.Int32)">
            <summary>
             SelectionChangedEventArgs
            </summary>
            <param name="item">Associated items changing selected state</param>
            <param name="oldState">Old selected state</param>
            <param name="newState">New selected state</param>
            <param name="selectedCount">Resultant total selected item count</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SelectionChangedEventArgs.Item">
            <summary>
            Gets the associated item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SelectionChangedEventArgs.OldState">
            <summary>
            Gets the old / previous selected state.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SelectionChangedEventArgs.NewState">
            <summary>
            Gets the new / current selected state.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SelectionChangedEventArgs.SelectedCount">
            <summary>
            Gets the resultant selected item count.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.SeriesDataBindingCompleteEventArgs">
            <summary>
            SeriesDataBindingCompleteEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SeriesDataBindingCompleteEventArgs.#ctor(DevComponents.DotNetBar.Charts.BaseChart,DevComponents.DotNetBar.Charts.BaseSeries,System.Object)">
            <summary>
             SeriesDataBindingCompleteEventArgs
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesDataBindingCompleteEventArgs.BaseChart">
            <summary>
            Gets the associated BaseChart that was bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesDataBindingCompleteEventArgs.Chart">
            <summary>
            Gets the associated Chart that was bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesDataBindingCompleteEventArgs.ChartXy">
            <summary>
            Gets the associated ChartXy that was bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesDataBindingCompleteEventArgs.PieChart">
            <summary>
            Gets the associated PieChart that was bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesDataBindingCompleteEventArgs.BaseSeries">
            <summary>
            Gets the associated BaseSeries that was bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesDataBindingCompleteEventArgs.ChartSeries">
            <summary>
            Gets the associated ChartSeries that was bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesDataBindingCompleteEventArgs.PieSeries">
            <summary>
            Gets the associated PieSeries that was bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesDataBindingCompleteEventArgs.Source">
            <summary>
            Gets the data source that was bound to.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.IsVisibleToChartControl">
            <summary>
            Attribute to control the visibility of individual fields
            or properties in an IList data source to the ChartControl.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.IsVisibleToChartControl.#ctor(System.Boolean)">
            <summary>
            IsVisibleToChartControl
            </summary>
            <param name="visible"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.IsVisibleToChartControl.Visible">
            <summary>
            Visible
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartAnnotationCollection">
            <summary>
            Represents the collection of ChartAnnotations.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Annotation.AnnotationVisualStyles">
            <summary>
            Gets or sets the visual styles for the Annotation.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Annotation.ConnectorLength">
            <summary>
            Gets or Sets the length of the Annotation Connector.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Annotation.ConnectorRotation">
            <summary>
            Gets or Sets the rotation of the Annotation Connector.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Annotation.ShapeRotation">
            <summary>
            Gets or Sets the rotation of the Annotation Shape.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.BaseChart">
            <summary>
            Represents a base chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseChart.AutoGenSeriesCollection">
            <summary>
             Gets or sets whether series definitions are automatically generated.
             from the associated bound data.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseChart.CustomPalette">
            <summary>
             Gets or sets the custom palette for the chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseChart.DataMember">
            <summary>
             Gets or sets the name of the list or table
             in the data source that the Chart is bound to.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseChart.DataSource">
            <summary>
             Gets or sets the data source that the Chart is bound to
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseChart.DataPropertyNameSeries">
            <summary>
             Gets or sets the default name of the data field to which the Series Name is bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseChart.DataPropertyNameX">
            <summary>
             Gets or sets the default name of the data field to which the X-Axis data is bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseChart.DataPropertyNamesY">
            <summary>
             Gets or sets the default names of the data fields to which the Y-Axis data is bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseChart.EnableDiscreteBoundItems">
            <summary>
            Gets or sets whether discrete bound item suport is enabled.
            This property permits each List bound item to be a separate object type.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseChart.PaletteGroup">
            <summary>
            Gets or sets the palette color group to use (Light/Medium/Dark/Color1/MonoBlue/etc).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseChart.ReversePaletteColors">
            <summary>
             Gets or sets whether default palette colors are utilized in reverse order.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseChart.SeriesDisplayOrder">
            <summary>
            Gets or sets the order in which the charts series are displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseChart.SeriesRangeChanged">
            <summary>
            Signals to the chart that an underlying chart series data has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.BaseChart.GetPaletteColor(System.Int32)">
            <summary>
            Gets the series default Palette color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.BaseChart.GetPaletteColor(System.Int32,DevComponents.DotNetBar.Charts.PaletteGroup)">
            <summary>
            Gets the series default Palette color from the
            specified PaletteGroup.
            </summary>
            <param name="index"></param>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.NotSet">
            <summary>
            NotSet.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.Color1">
            <summary>
             Colorful 'Color1' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.Color2">
            <summary>
             Colorful 'Color2' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.Color3">
            <summary>
             Colorful 'Color3' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.Color4">
            <summary>
             Colorful 'Color4' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.MonoBlue">
            <summary>
             Monochromatic 'Blue' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.MonoRed">
            <summary>
             Monochromatic 'Red' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.MonoGreen">
            <summary>
             Monochromatic 'Green' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.MonoPurple">
            <summary>
             Monochromatic 'Purple' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.MonoTeal">
            <summary>
             Monochromatic 'Teal' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.MonoOrange">
            <summary>
             Monochromatic 'Orange' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.MonoGray">
            <summary>
             Monochromatic 'Gray' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.Light">
            <summary>
             Colorful 'Light' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.Medium">
            <summary>
             Colorful 'Medium' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.Dark">
            <summary>
             Colorful 'Dark' toned pallete
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PaletteGroup.Custom">
            <summary>
             Custom pallete (CustomPalette property)
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartBaseSeriesCollection">
            <summary>
            Represents the collection of BaseSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.ChartLegendItemVisualStyles">
            <summary>
            Gets or sets the visual styles for the Legend item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.DataMember">
            <summary>
             Gets or sets the name of the list or table
             in the data source that the Series is bound to.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.DataPropertyNameSeries">
            <summary>
             Gets or sets the name of the data field to which the Series Name is bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.DataPropertyNameX">
            <summary>
             Gets or sets the name of the data field to which the X-Axis data is bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.DataPropertyNamesY">
            <summary>
             Gets or sets the names of the data fields to which the Y-Axis data is bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.DataSource">
            <summary>
             Gets or sets the data source that the Series is bound to.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.DefaultPaletteColor">
            <summary>
            Gets the default palette color assigned to the series when it
            is added to the chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.IsDisplayed">
            <summary>
             Gets whether the series is displayed (based upon Visibility and Legend state).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.SeriesRangeChanged">
            <summary>
            Signals to the chart that the series data has changed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.SeriesType">
            <summary>
             Gets or sets the Series Type.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.BaseSeries.RefreshSeries">
            <summary>
             Causes the series to refresh its display, as the underlying
             series data (potentially) has changed in some way.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.BaseSeries.InvalidateStyle">
            <summary>
            Invalidate the cached Style definitions
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.CheckedInLegend">
            <summary>
            Gets or sets whether the series is checked in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.ShowCheckBoxInLegend">
            <summary>
            Gets or sets whether a checkbox for the series is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.ShowInLegend">
            <summary>
            Gets or sets whether the series is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.ShowInParentLegend">
            <summary>
            Gets or sets whether the series is shown in parent Legend(s).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.ShowMarkerInLegend">
            <summary>
            Gets or sets whether the series Marker is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.LegendItem">
            <summary>
             Gets the item's parent LegendItem.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.BaseSeries.LegendText">
            <summary>
             Gets or sets the text to display in the legend.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.SeriesType">
            <summary>
            Defines available Series types
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartContainerCollection">
            <summary>
            Represents the collection of ChartContainer objects.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartContainer">
            <summary>
            ChartContainer
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.AutoSizeMode">
            <summary>
             Gets or sets the mode used to size the container (by FillWeight, etc).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.ContainerVisualStyles">
            <summary>
            Gets or sets the visual styles for the container.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.ContentBounds">
            <summary>
            Gets the Content area bounding rectangle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.EffectiveContainerStyles">
            <summary>
            Gets a reference to the container's effective (cached, composite) styles.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.EmptyText">
            <summary>
            Gets or sets the Text to display when the container is empty.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.EnableEmptyTextMarkup">
            <summary>
            Gets or sets whether EmptyText markup support is enabled.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartContainer.EmptyTextMarkupLinkClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when a text markup link is clicked
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.EmptyTextPlainText">
            <summary>
            Gets plain text without text-markup (if text-markup is used in EmptyText)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.EnablePanning">
            <summary>
            Gets or sets whether the container can be panned with the mouse.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.EnableSelection">
            <summary>
            Gets or sets whether the CONTAINER can be "selected" with the mouse.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.FillWeight">
            <summary>
            Gets or sets a value which, when AutoSizeMode is Fill,
            represents the width of the container relative to the widths
            of other fill-mode containers (default value is 100).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.FrameBounds">
            <summary>
            Gets the Frame area bounding rectangle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.HScrollBar">
            <summary>
             Gets a reference to the containers’s horizontal scrollbar
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.HScrollBarHeight">
            <summary>
            Gets or sets the horizontal scrollBar height.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.HScrollOffset">
            <summary>
             Gets or sets the horizontal scrollbar offset.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.HScrollBarVisible">
            <summary>
            Gets or sets whether Horizontal Scrollbar is shown if needed (due to content of the control exceeding available width).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.IsSelected">
            <summary>
             Gets or sets whether the container is selected.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.Legend">
            <summary>
            Gets or Sets the element Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.MatrixAlignEndColumn">
            <summary>
             Gets or sets whether the container's content ending X-offset is aligned 
             with other containers ending in the same ChartMatrix column.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.MatrixAlignEndRow">
            <summary>
             Gets or sets whether the container's content ending Y-offset is aligned 
             with other containers ending in the same ChartMatrix row.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.MatrixAlignStartColumn">
            <summary>
             Gets or sets whether the container's content starting X-offset is aligned 
             with other containers starting in the same ChartMatrix column.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.MatrixAlignStartRow">
            <summary>
             Gets or sets whether the container's content starting Y-offset is aligned 
             with other containers starting in the same ChartMatrix row.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.MatrixDisplayBounds">
            <summary>
             Gets or sets the containers matrix display bounds (in relative units of the matrix).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.MatrixDisplayOrder">
            <summary>
             Gets or sets the containers display order in the parent matrix layout
             (higher values are placed on top of lower values).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.MinContentSize">
            <summary>
            Gets or sets the minimum size of the content area of the chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.ScrollBounds">
            <summary>
            Gets the Scrollable bounds.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.ScrollBoundsEx">
            <summary>
            Gets the extended Scrollable bounds.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.ScrollBoundsOffset">
            <summary>
             Gets the current scrollbar offset
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.Titles">
            <summary>
            Gets or Sets a reference to the collection of Titles
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.VScrollBar">
            <summary>
             Gets a reference to the container’s vertical scrollbar
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.VScrollBarWidth">
            <summary>
            Gets or sets the vertical scrollBar width.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.VScrollOffset">
            <summary>
             Gets the vertical scrollbar offset
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.VScrollBarVisible">
            <summary>
            Gets or sets whether Vertical Scrollbar is shown when needed (due to the content area exceeding available height).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.IsSubPanel">
            <summary>
            Gets whether the ChartPanel is a subordinate / nested panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.MatrixColumnAligned">
            <summary>
            Gets whether the ChartContainer column was MatrixAligned.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartContainer.MatrixRowAligned">
            <summary>
            Gets whether the ChartContainer row was MatrixAligned.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartContainer.EnsureVisible(System.Boolean)">
            <summary>
            Ensures the container is visible on screen, and optionally
            centered (if possible).
            </summary>
            <param name="center"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartContainer.EnsureVisible(DevComponents.DotNetBar.Charts.ChartContainer,System.Boolean)">
            <summary>
            Ensures that the given container "item" is visible
            on screen, and optionally centered (if possible).
            </summary>
            <param name="center"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartContainer.GetDisplayBounds(System.Drawing.Rectangle)">
            <summary>
            Gets the "displayBounds" of the given rectangle (scroll
            adjusted bounds).
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartContainer.GetElementAt(System.Drawing.Point)">
            <summary>
            Gets the element at the given Point.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartContainer.GetHitArea(System.Drawing.Point)">
            <summary>
            Gets the HitArea for the given Point.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartContainer.GetTitleByName(System.String)">
            <summary>
            Gets the defined Title with the given name.
            </summary>
            <param name="name"></param>
            <returns>ChartTitle or null</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartContainer.InvalidateStyle">
            <summary>
            Invalidate the cached Style
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.AutoSizeMode">
            <summary>
            Defines auto-sizing mode.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.AutoSizeMode.NotSet">
            <summary>
            NotSet (None is default)
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.AutoSizeMode.None">
            <summary>
            No Auto-sizing will take place.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.AutoSizeMode.Fill">
            <summary>
            Size will be determined by the fill weight.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartCrosshair">
            <summary>
            Represents a Crosshair element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.AxisOrientation">
            <summary>
            Gets or sets the axis orientation driving the crosshair display.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.CrosshairLabelMode">
            <summary>
            Gets or sets the mode used to display the Crosshair label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.PointIntersectMode">
            <summary>
            Gets or sets the the Crosshair point intersection mode.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.PointIntersectMargin">
            <summary>
            Gets or sets the the Crosshair point intersection margin.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.CrosshairLabelVisualStyle">
            <summary>
            Gets or sets the default visual style to be used for Crosshair 
            values rendered on the X and Y axes.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.CrosshairVisualStyle">
            <summary>
            Gets or sets the visual style for the Crosshair.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.EffectiveCrosshairLabelStyle">
            <summary>
            Gets a reference to the Crosshair label's Effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.EffectiveCrosshairStyle">
            <summary>
            Gets a reference to the Crosshair's Effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.HighlightPoints">
            <summary>
            Gets or sets whether series points are highlighted
            when the Crosshair cursor intersects with them.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.HighlightSinglePoint">
            <summary>
            Gets or sets whether only single series points are highlighted
            when the Crosshair cursor intersects with them.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.ShowValueXLabels">
            <summary>
            Gets or sets whether ValueX Labels are shown.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.ShowValueXLine">
            <summary>
            Gets or sets whether a ValueX line is shown.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.ShowCrosshairLabelMarkers">
            <summary>
            Gets or sets whether Crosshair label markers are shown.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.ShowCrosshairLabels">
            <summary>
            Gets or sets whether Crosshair labels are shown.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.ShowGroupHeaders">
            <summary>
            Gets or sets whether Group Headers are shown for each series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.ShowValueYLabels">
            <summary>
            Gets or sets whether a ValueY label is shown.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartCrosshair.ShowValueYLine">
            <summary>
            Gets or sets whether a ValueY line is shown.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartCrosshair.InvalidateStyle">
            <summary>
            Invalidate the cached Styles
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.CrosshairLabelMode.Common">
            <summary>
            A common Crosshair label is shown for all series
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.CrosshairLabelMode.NearestSeries">
            <summary>
            A crosshair label is shown for the nearest series
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.CrosshairLabelMode.EachSeries">
            <summary>
            A crosshair label is shown for each series
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.CrosshairLabelPosition.ChartRelative">
            <summary>
            Crosshair labels positioned relative to the Chart
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.CrosshairLabelPosition.MouseRelative">
            <summary>
            Crosshair labels positioned relative to the Mouse
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointIntersectMode.Center">
            <summary>
            From center.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointIntersectMode.Edge">
            <summary>
            From edge.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartElement.ParentChanged">
            <summary>
            Occurs when parent of the item has changed.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartElement.RenderInvalid">
            <summary>
            Occurs when display/rendering of the item is invalidated.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartElement.LayoutInvalid">
            <summary>
            Occurs when layout of the item is invalidated.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartElement.ChartControl">
            <summary>
            Gets the parent ChartControl
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartElement.ChartPanel">
            <summary>
            Gets the parent ChartPanel
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartElement.Name">
            <summary>
            Gets or sets the Name of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartElement.Parent">
            <summary>
            Gets or sets the parent of the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartElement.OnParentChanged(DevComponents.DotNetBar.Charts.ChartElement,DevComponents.DotNetBar.Charts.ChartElement)">
            <summary>
            Called after parent of the item has changed.
            </summary>
            <param name="oldParent">Reference to old parent.</param>
            <param name="newParent">Reference to new parent.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartElement.OnParentChanged(System.EventArgs)">
            <summary>
            Raises ParentChanged event.
            </summary>
            <param name="e">Provides event arguments.</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartElement.ParentChartContainer">
            <summary>
            Gets the parent ChartContainer
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartElement.Tag">
            <summary>
             Gets or sets user-defined data associated with the object
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartElement.OnLayoutInvalid(System.EventArgs)">
            <summary>
            Raises LayoutInvalid event.
            </summary>
            <param name="e">Provides event arguments.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartElement.OnRenderInvalid(System.EventArgs)">
            <summary>
            Raises RenderInvalid event.
            </summary>
            <param name="e">Provides event arguments.</param>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartElement.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartElement.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartElement.OnPropertyChanged(System.String)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.#ctor">
            <summary>
            ChartVisualElement
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.MeasureOverride(DevComponents.DotNetBar.Charts.ChartLayoutInfo)">
            <summary>
            Performs the layout of the item
            and sets the Size property to size that item will take.
            </summary>
            <param name="layoutInfo">Layout information.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.ArrangeOverride(DevComponents.DotNetBar.Charts.ChartLayoutInfo)">
            <summary>
            Performs the arrange pass layout of the item when
            the final position and size of the item has been set.
            </summary>
            <param name="layoutInfo">Layout information.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.RenderOverride(DevComponents.DotNetBar.Charts.ChartRenderInfo)">
            <summary>
            Performs drawing of the item and its children.
            </summary>
            <param name="renderInfo">Holds contextual rendering information.</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartVisualElement.Bounds">
            <summary>
            Gets or sets the absolute (scroll adjusted) bounds of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartVisualElement.BoundsRelative">
            <summary>
            Gets or sets the relative bounds of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartVisualElement.IsMouseOver">
            <summary>
            Gets whether mouse is over the element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartVisualElement.Size">
            <summary>
            Gets or sets the Size of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartVisualElement.Visible">
            <summary>
            Get or sets whether the item is visible
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartVisualElement.Displayed">
            <summary>
            Gets whether element is actually displayed on screen
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartVisualElement.IsMouseDown">
            <summary>
            Gets whether mouse is down
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartVisualElement.MouseDownPoint">
            <summary>
            Gets the mouse down Point
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.Measure(DevComponents.DotNetBar.Charts.ChartLayoutInfo)">
            <summary>
            This method is used by the items internally to invoke the measure pass to
            get item size. Override MeasureOverride method to perform actual measuring.
            </summary>
            <param name="layoutInfo">Holds contextual layout information.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.Arrange(DevComponents.DotNetBar.Charts.ChartLayoutInfo)">
            <summary>
            This method is used by the items internally to invoke the arrange pass after
            location and size of the item has been set. Override ArrangeOverride method
            to perform internal arranging.
            </summary>
            <param name="layoutInfo"></param>
            <param name="layoutBounds"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.Render(DevComponents.DotNetBar.Charts.ChartRenderInfo)">
            <summary>
            This method is used by the items internally to invoke the rendering
            for the item. Override RenderOverride method to perform actual rendering.
            </summary>
            <param name="renderInfo">Holds contextual rendering information.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.CancelCapture">
            <summary>
             Cancels any inprogress operations that may
             have the mouse captured (resize, reorder).
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InvalidateLayout">
            <summary>
            Invalidates the layout for the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InvalidateRender">
            <summary>
            Invalidates the display state of the item
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InvalidateRender(System.Drawing.Rectangle)">
            <summary>
            Invalidates the display state of the item
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InvalidateLayoutBounds(DevComponents.DotNetBar.Charts.ScrollBarLite)">
            <summary>
            Invalidates the layout bounds
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.GetElementAt(System.Drawing.Point)">
            <summary>
            Gets the visual chart element at the given Point.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.GetHitArea(System.Drawing.Point)">
            <summary>
            Gets the element Hit Area for the given Point.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InternalMouseEnter(System.EventArgs)">
            <summary>
            Called by top-level control to pass message into the grid
            element. To handle it override corresponding On - virtual method.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnMouseEnter(System.EventArgs)">
            <summary>
            Called when the mouse enters the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InternalMouseLeave(System.EventArgs)">
            <summary>
            Called by top-level control to pass message into the grid
            element. To handle it override corresponding On - virtual method.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnMouseLeave(System.EventArgs)">
            <summary>
            Called when mouse leaves the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InternalMouseHover(System.EventArgs)">
            <summary>
            Called by top-level control to pass message into the grid
            element. To handle it override corresponding On - virtual method.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnMouseHover(System.EventArgs)">
            <summary>
            Called when mouse hovers over the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InternalMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called by top-level control to pass message into the grid
            element. To handle it override corresponding On - virtual method.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse button is pressed over the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnMouseDownEx(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse button is pressed over the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InternalMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called by top-level control to pass message into the grid
            element. To handle it override corresponding On - virtual method.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse button is released over the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InternalMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called by top-level control to pass message into the chart
            element. To handle it override corresponding On - virtual method.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse is moved over the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnMouseMoveEx(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse is moved over the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InternalMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called by top-level control to pass message into the grid
            element. To handle it override corresponding On - virtual method.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse is clicked on the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InternalMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called by top-level control to pass message into the grid
            element. To handle it override corresponding On - virtual method.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse is double clicked on the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InternalMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called by top-level control to pass message into the grid
            element. To handle it override corresponding On - virtual method.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mousewheel is moved while over the element.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.InternalKeyDown(System.Windows.Forms.Keys)">
            <summary>
            Called by top-level control to pass message into the grid
            element. To handle it override corresponding On - virtual method.
            </summary>
            <param name="keyData"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnKeyDown(System.Windows.Forms.Keys)">
            <summary>
            Called when mouse button is pressed over the element.
            </summary>
            <param name="keyData"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnResize(System.EventArgs)">
            <summary>
            Called when control is resized.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.StyleChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Occurs when one of element visual styles has property changes.
            Default implementation invalidates visual appearance of element.
            </summary>
            <param name="sender">VisualStyle that changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.Export(System.String)">
            <summary>
            Exports the chart element to the specified file. The 
            specified file will be created and/or overwritten.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.Export(System.IO.Stream)">
            <summary>
            Exports the chart element to the specified stream.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.Import(System.String)">
            <summary>
            Imoprts the chart element from the given file path.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.Import(System.IO.Stream)">
            <summary>
            Imoprts the chart element from the given stream.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartVisualElement.OnPropertyChangedEx(System.String,DevComponents.DotNetBar.Charts.Style.VisualChangeType)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
            <param name="changeType">invalidate</param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ItemHitArea">
            <summary>
             Specifies the ItemHitArea hit areas
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.None">
            <summary>
             None
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.InAncillaryAxisX">
            <summary>
            Ancillary AxisX
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.InPrimaryAxisX">
            <summary>
            Primary AxisX
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.InAncillaryAxisY">
            <summary>
            Ancillary AxisY
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.InPrimaryAxisY">
            <summary>
            Primary AxisX
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.ArrowIncrease">
            <summary>
            ScrollBar ArrowIncrease
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.ArrowDecrease">
            <summary>
            ScrollBar ArrowDecrease
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.TrackIncrease">
            <summary>
            ScrollBar TrackIncrease
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.TrackDecrease">
            <summary>
            ScrollBar ArrowDecrease
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.Thumb">
            <summary>
            ScrollBar Thumb
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.InContent">
            <summary>
             Content area
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.InFrame">
            <summary>
             Frame area
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.InPieSeriesPoint">
            <summary>
            PieSeriesPoint
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.InPieCenter">
            <summary>
            Pie Center
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.InPieRingOut">
            <summary>
            Pie Ring Out (Out a ring level)
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemHitArea.InMarkup">
            <summary>
            In Markup area
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartIndicatorCollection">
            <summary>
            Represents the collection of ChartIndicators.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.RegressionLine">
            <summary>
            Represents a Regression Line (a least-squares calculated series line).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RegressionLine.EffectiveStyle">
            <summary>
            Gets a reference to the RegressionLine's effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RegressionLine.IndicatorType">
            <summary>
            Gets the RegressionLine's IndicatorType
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.RegressionLine.RegressionLineVisualStyle">
            <summary>
            Gets or sets the visual style for the RegressionLine Indicator.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.RegressionLine.InvalidateStyle">
            <summary>
            Invalidate the cached Style
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.TrendLine">
            <summary>
            Represents a Trend Line (a line connecting any 2 defined SeriesPoints).
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.TrendLine.#ctor">
            <summary>
            TrendLine
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.TrendLine.#ctor(System.String)">
            <summary>
            TrendLine
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.TrendLine.#ctor(System.String,System.Object,System.Object)">
            <summary>
            TrendLine
            </summary>
            <param name="name">Name</param>
            <param name="valuex1">Starting X-Axis value</param>
            <param name="valuex2">Ending X-Axis value</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.TrendLine.EffectiveStyle">
            <summary>
            Gets a reference to the TrendLine's effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.TrendLine.IndicatorType">
            <summary>
            Gets the TrendLine's IndicatorType
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.TrendLine.TrendLineVisualStyle">
            <summary>
            Gets or sets the visual style for the TrendLine Indicator.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.TrendLine.ValueX1">
            <summary>
            Trendline starting X value
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.TrendLine.ValueX2">
            <summary>
            Trendline ending X value
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.TrendLine.InvalidateStyle">
            <summary>
            Invalidate the cached Style
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.DisplayOnTop">
            <summary>
            Gets or sets whether Indicator is displayed on top of chart data.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.IndicatorType">
            <summary>
            Indicator type
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.Intercept">
            <summary>
            Gets the Indicator Line's Intercept (ie. the 'b' portion of 'y = mx + b').
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.IsDisplayed">
            <summary>
             Gets whether the Indicator is displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.Slope">
            <summary>
            Gets the Indicator Line's Slope (ie. the 'm' portion of 'y = mx + b').
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.ValueYIndex">
            <summary>
            Gets or sets the ValueY index to use for the slope/intercept.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.ChartLegendItemVisualStyles">
            <summary>
            Gets or sets the visual styles for the Legend item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.CheckedInLegend">
            <summary>
            Gets or sets whether the Line is checked in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.ShowCheckBoxInLegend">
            <summary>
            Gets or sets whether a checkbox for the Line is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.ShowInLegend">
            <summary>
            Gets or sets whether the Line is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.ShowInParentLegend">
            <summary>
            Gets or sets whether the Line is shown in parent Legend(s).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.ShowMarkerInLegend">
            <summary>
            Gets or sets whether the Line Marker is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.LegendItem">
            <summary>
             Gets the item's parent LegendItem.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartIndicator.LegendText">
            <summary>
             Gets or sets the text to display in the legend.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartAxisLable">
            <summary>
            ChartAxisLable
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxisLable.FixedHeight">
            <summary>
            Gets or sets the fixed Text height of the label (0 to auto-size)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxisLable.Text">
            <summary>
            Gets or sets the label Text.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartLayoutInfo">
            <summary>
            Provides the layout information for chart layout pass
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.Alignment">
            <summary>
            Gets or sets the Alignment of the legend with respect to the chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.AlignVerticalItems">
            <summary>
            Gets or sets whether vertical items are aligned in the legend
            (used when multiple columns are presented).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ChartLegendItemVisualStyles">
            <summary>
            Gets or sets the default visual styles for Legend items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ChartLegendVisualStyles">
            <summary>
            Gets or sets the visual styles for the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.CheckBoxSize">
            <summary>
            Gets or sets the default size of the item CheckBoxes.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.CombineLikeItems">
            <summary>
            Gets or sets whether 'like' subordinate items
            (items with same Names) are combined into a single item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.Direction">
            <summary>
            Gets or sets the display direction of the items within the legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.EffectiveItemStyles">
            <summary>
            Gets a reference to the legend's item Effective (cached, composite) styles.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.EffectiveStyles">
            <summary>
            Gets a reference to the legend's Effective (cached, composite) styles.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.EnablePanning">
            <summary>
            Gets or sets whether the legend can be panned with the mouse.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ItemCheckAction">
            <summary>
            Gets or sets the "action" taken when a LegendItem is checked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ItemSortDirection">
            <summary>
            Gets or sets the item sort direction (LegendItem Text)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ItemTextOffset">
            <summary>
            Gets or sets the offset between the marker (or Checkbox) and the item text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.LegendItems">
            <summary>
            Gets the collection of LegendItems.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.MarkerSize">
            <summary>
            Gets or sets the default size of the item marker.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.MaxHorizontalPct">
            <summary>
            Gets or sets the maximum horizontal size of the legend when autosizing. The value
            is specified as a percentage of the displayed chart size.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.MaxVerticalPct">
            <summary>
            Gets or sets the maximum vertical size of the legend when autosizing. The value
            is specified as a percentage of the displayed chart size.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.MinContentSize">
            <summary>
            Gets or sets the minimum size of the content area of the legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.Placement">
            <summary>
            Gets or sets the placement of the legend with respect to the chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ScrollBounds">
            <summary>
            Gets the Scrollable bounds of the legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ScrollBoundsEx">
            <summary>
            Gets the Extended Scrollable bounds of the legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ScrollBoundsOffset">
            <summary>
             Gets the current scrollbar offset
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ShowCheckBoxes">
            <summary>
            Gets or sets whether checkboxes are shown in the legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ShowItemText">
            <summary>
            Gets or sets whether item text values are shown in the legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ShowMarkers">
            <summary>
            Gets or sets whether markers are shown in the legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ShowPieRingCheckBoxes">
            <summary>
            Gets or sets whether PieRing checkboxes are shown in the legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ShowPieRingsInLegend">
            <summary>
            Gets or sets whether PieRings are shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ShowPieSeriesCheckBoxes">
            <summary>
            Gets or sets whether PieRing checkboxes are shown in the legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ShowPieSeriesInLegend">
            <summary>
            Gets or sets whether Pie Series are shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ShowPieSeriesPointCheckBoxes">
            <summary>
            Gets or sets whether PieSeriesPoint checkboxes are shown in the legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.ShowPieSeriesPointsInLegend">
            <summary>
            Gets or sets whether Pie Series are shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.TrackingMode">
            <summary>
            Gets or sets the tracking mode for highlighting either
            or both chart and legend items when the user mouses over them.
            LegendItems must have MouseOver style set accordingly.
            This property is only honored for PieSeries elements.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.Visible">
            <summary>
            Get or sets whether the item is visible
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartLegend.ShouldSerializeVisible">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartLegend.ResetVisible">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.VScrollBar">
            <summary>
             Gets a reference to the Legend’s vertical scrollbar
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.VScrollBarWidth">
            <summary>
            Gets or sets the width of a vertical scrollBar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.VScrollOffset">
            <summary>
             Gets or sets the vertical scrollbar offset
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegend.VScrollBarVisible">
            <summary>
            Gets or sets whether Vertical Scrollbar is shown (due to the content of the control exceeding available height).
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartLegend.GetElementAt(System.Drawing.Point)">
            <summary>
            Gets the legend element at the given Point.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartLegend.GetLegendItem(DevComponents.DotNetBar.Charts.ILegendItem)">
            <summary>
            Gets the LegendItem from the given chart item.
            </summary>
            <param name="chartItem"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartLegend.InvalidateStyle">
            <summary>
            Invalidate the cached Style
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Direction">
            <summary>
            Specifies how the legend items are presented.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemCheckAction.None">
            <summary>
            No action is taken.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ItemCheckAction.ShowItem">
            <summary>
            Item will be shown or hidden, depending
            upon the check state of the item.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Placement">
            <summary>
            Specifies the placement of the element with respect
            to the chart contents.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartLegendItem">
            <summary>
            Represents an item in the chart Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegendItem.ChartItems">
            <summary>
            Gets or sets the referenced Chart items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegendItem.ChartLegendItemVisualStyles">
            <summary>
            Gets or sets the visual styles for the Legend item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegendItem.CheckState">
            <summary>
            Gets or sets whether the item's checkbox is checked.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegendItem.EffectiveStyles">
            <summary>
            Gets a reference to the item's Effective (cached, composite) styles.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegendItem.ItemText">
            <summary>
            Gets or sets the item Text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegendItem.ItemTextBounds">
            <summary>
            Gets the Item's Text bounds
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegendItem.Legend">
            <summary>
            Gets the associated ChartLegend
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegendItem.MarkerBounds">
            <summary>
            Gets the Marker bounds
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegendItem.ShowCheckBox">
            <summary>
            Gets or sets whether the item CheckBox is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegendItem.ShowInParentLegend">
            <summary>
            Gets or sets whether the item is shown in parent Legend(s).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegendItem.ShowItemText">
            <summary>
            Gets or sets whether the item text is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartLegendItem.ShowMarker">
            <summary>
            Gets or sets whether the item Marker is shown in the Legend.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartLegendItem.InvalidateStyle">
            <summary>
            Invalidate the cached Styles
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMatrix.AutoSizeMode">
            <summary>
             Gets or sets the default mode used to size each matrix row/col (by FillWeight, etc).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMatrix.ColumnProperties">
            <summary>
            Get a reference to the matrix column properties.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMatrix.DefaultCellSize">
            <summary>
             Gets or sets the default minimum size for each matrix cell.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMatrix.DividerLines">
            <summary>
            Gets or sets which Divider lines (horizontal and/or vertical)
            are displayed between each Matrix cell.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMatrix.IsEmpty">
            <summary>
            Gets whether the matrix is empty.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMatrix.Height">
            <summary>
            Gets or sets the matrix height.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMatrix.RowProperties">
            <summary>
            Get a reference to the matrix row properties.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMatrix.Size">
            <summary>
            Gets or sets the matrix size.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartMatrix.Width">
            <summary>
            Gets or sets the matrix width.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ChartMatrix.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMatrix.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMatrix.OnPropertyChanged(System.String)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MatrixRowColProperties.AlignContentBounds">
            <summary>
             Gets or sets whether the matrix row/col has its content bounds aligned.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MatrixRowColProperties.AutoSizeMode">
            <summary>
             Gets or sets the mode used to size the matrix row/col.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MatrixRowColProperties.FillWeight">
            <summary>
            Gets or sets a value which, when AutoSizeMode is Fill,
            represents the width of the row/col relative to the widths
            of other fill-mode row/col items (default value is 100).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MatrixRowColProperties.Length">
            <summary>
            Gets or sets a value which represents the length (in pixels)
            that the row/col is to occupy.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MatrixRowColProperties.MinimumLength">
            <summary>
            Gets or sets a value which represents the minimum length (in pixels)
            that the row/col can occupy.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.MatrixRowColProperties.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.MatrixRowColProperties.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.MatrixRowColProperties.OnPropertyChanged(System.String)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartNote">
            <summary>
            ChartNote.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartNote.EnableTextMarkup">
            <summary>
            Gets or sets whether text-markup support is enabled
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartNote.TextMarkupLinkClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when a text markup link is clicked
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartNote.PlainText">
            <summary>
            Gets text without text-markup (if text-markup is used in Text)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartNote.FixedHeight">
            <summary>
            Gets or sets the fixed Text height (0 to auto-size)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartNote.Text">
            <summary>
            Gets or sets the item Text.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartPanel">
            <summary>
            ChartPanel is a container object which holds
            and defines ChartGraphs, which can be single or multiple. 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPanel.AutoFillChartMatrix">
            <summary>
            Gets or sets whether the ChartMatrix is auto filled
            from the ChartContainer collection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPanel.AutoGenSeriesCollection">
            <summary>
            Gets or sets whether series definitions are auto generated from the set DataSource.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPanel.AutoSizeChartMatrix">
            <summary>
            Gets or sets whether the ChartMatrix is auto sized
            from the ChartContainer collection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPanel.ChartContainers">
            <summary>
            Gets a reference to the collection of Chart Containers (ChartPanels and Chart graphs).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPanel.ChartMatrix">
            <summary>
            Gets the Matrix used to display the defined Panels and Charts in a Matrix format.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPanel.ChartPanelVisualStyle">
            <summary>
            Gets or sets the visual style for the Chart Panel.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPanel.ContainerLayout">
            <summary>
            Gets or sets the layout (horizontal, vertical, matrix) for the defined Chart Containers.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPanel.DefaultVisualStyles">
            <summary>
             Gets or sets the Default Visual Styles for each Chart element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPanel.EffectivePanelStyle">
            <summary>
            Gets a reference to the panel's effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPanel.LegendSource">
            <summary>
            Gets or sets the source for the items in the panel legend.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPanel.GetElementAt(System.Drawing.Point)">
            <summary>
            Gets the visua element at the given Point.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPanel.GetMatrixCoordAt(System.Drawing.Point,System.Int32@,System.Int32@)">
            <summary>
            Gets the matric coordinate (row/column) at the given Point.
            </summary>
            <param name="pt"></param>
            <param name="column"></param>
            <param name="row"></param>
            <returns>true if valid coordinate is returned</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPanel.GetMatrixCoordOf(DevComponents.DotNetBar.Charts.ChartContainer,System.Int32@,System.Int32@)">
            <summary>
            Gets the matric coordinate (row/column) of the given container.
            </summary>
            <param name="item"></param>
            <param name="row"></param>
            <param name="column"></param>
            <returns>true if valid coordinate returned.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPanel.GetContainerByName(System.String)">
            <summary>
            Gets the ChartContainer object from the given name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPanel.GetContainerByName(System.String,System.Boolean)">
            <summary>
            Gets the ChartContainer object from the given name, with
            optional searching of nested panels/charts.
            </summary>
            <param name="name"></param>
            <param name="searchNested"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPanel.GetChartByName(System.String)">
            <summary>
            Gets the BaseChart from the given name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPanel.GetChartByName(System.String,System.Boolean)">
            <summary>
            Gets the BaseChart from the given name, optionally searching
            nested panels and charts.
            </summary>
            <param name="name"></param>
            <param name="searchNested"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPanel.GetPanelByName(System.String)">
            <summary>
            Gets the ChartPanel from the given name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPanel.GetPanelByName(System.String,System.Boolean)">
            <summary>
            Gets the ChartPanel from the given name, optionally 
            searching through nested panels.
            </summary>
            <param name="name"></param>
            <param name="searchNested"></param>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.DividerLines">
            <summary>
             Specifies which divider lines are displayed
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.DividerLines.NotSet">
            <summary>
             Not set
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.DividerLines.None">
            <summary>
             No lines are displayed
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.DividerLines.Horizontal">
            <summary>
             Only horizontal divider lines are displayed
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.DividerLines.Vertical">
            <summary>
             Only vertical divider lines are displayed
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.DividerLines.BothXy">
            <summary>
             Both horizontal and vertical divider lines are displayed,
             horizontal first, then vertical.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.DividerLines.BothYx">
            <summary>
             Both horizontal and vertical divider lines are displayed
             vertical first, then horizontal.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.BlankExpandableObjectConverter">
            <summary>
             BlankExpandableObjectConverter
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.BlankExpandableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
             ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartRenderInfo">
            <summary>
            Provides the rendering information for chart render pass.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartTitleCollection">
            <summary>
            Represents the collection of ChartTitles.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartTitle">
            <summary>
            ChartTitle
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartTitle.#ctor">
            <summary>
            Creates a new ChartTitle
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartTitle.#ctor(System.String)">
            <summary>
            Creates a new ChartTitle
            </summary>
            <param name="name">Title name</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartTitle.#ctor(System.String,System.String)">
            <summary>
            Creates a new ChartTitle
            </summary>
            <param name="name">Title Name</param>
            <param name="text">Title Text</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartTitle.ChartTitleVisualStyle">
            <summary>
            Gets or sets the visual style for the Title.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartTitle.EffectiveTitleStyle">
            <summary>
            Gets a reference to the title's effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartTitle.RotateDegrees">
            <summary>
            Gets or sets the title's display rotation.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartTitle.XyAlignment">
            <summary>
            Gets or sets the X/Y Alignment for the title.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartTitle.InvalidateStyle">
            <summary>
            Invalidate the cached Styles
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.DataBinder">
            <summary>
             DataBinding helper class
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.DataBinder.#ctor(DevComponents.DotNetBar.Charts.BaseChart)">
            <summary>
             DataBinding
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.DataBinder.Dispose">
            <summary>
            Data Binder Dispose
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.DataLabel.#ctor(DevComponents.DotNetBar.Charts.SeriesPoint,System.String)">
            <summary>
            DataLabel
            </summary>
            <param name="sp">Associated SeriesPoint</param>
            <param name="text">Label text</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.DataLabel.#ctor(DevComponents.DotNetBar.Charts.SeriesPoint)">
            <summary>
            DataLabel
            </summary>
            <param name="sp">Associated SeriesPoint</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.DataLabel.#ctor">
            <summary>
            DataLabel
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.DataLabel.BarLabelPosition">
            <summary>
            Gets or sets the position of bar series labels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.DataLabel.DataLabelVisualStyle">
            <summary>
            Gets or sets the visual style for the data label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.DataLabel.EffectiveDataLabelStyle">
            <summary>
            Gets a reference to the DataLabel effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.DataLabel.ValueX">
            <summary>
            Gets or sets the X-Axis Value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.DataLabel.ValueY">
            <summary>
            Gets or sets the Y-Axis Value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.DataLabel.Text">
            <summary>
             Gets or sets the DataLabel text.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.DataLabel.InvalidateStyle">
            <summary>
            Invalidate the cached Style definition
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ActualInnerRadius">
            <summary>
            Gets the actual, calculated inner radius of the pie.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ActualOuterRadius">
            <summary>
            Gets the actual, calculated outer radius of the pie.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.CenterFirstSlice">
            <summary>
            Gets or sets whether the first pie slice is centered
            on the starting angle or starts on the starting angle. Default is false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.CenterLabel">
            <summary>
            Gets or sets the text to use for the center hole label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.CenterLabelVisibility">
            <summary>
            Gets or sets the mode used to determine if/when to display the center label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.CenterPoint">
            <summary>
            Gets the calculated center Point for the pie.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.CenterPos">
            <summary>
            Gets or sets the offset from the default center x,y location of the chart. If
            the values are between -1 and 1, then the offsets are taken as a percentage
            of the width/height, otherwise they are taken as absolute pixel offsets.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.ShouldSerializeCenterPos">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.ResetCenterPos">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ChartSeries">
            <summary>
            Gets a reference to the collection of PieSeries
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ChartVisualStyle">
            <summary>
            Gets or sets the visual style for the Chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.CustomPalette">
            <summary>
             Gets or sets the custom palette for the chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.DetachedOffset">
             <summary>
             Gets or sets the default offset distance of a slice from the pie center, as measured
             by a percentage of the pie radius (if less than 1), or absolute pixel amount (if greater than 1). Default is .1.
            
             A value of 0 will restore the slice to its original position in the pie (which
             may still be offset, if the pie is "exploded").
             </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.EffectiveChartStyle">
            <summary>
            Gets a reference to the Chart's Effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.EffectivePieCenterStyle">
            <summary>
            Gets a reference to the Chart's Effective (cached, composite) Pie Center styles.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.EnableCenterLabelMarkup">
            <summary>
            Gets or sets whether text-markup support is enabled for the Center Label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.EnableDragDetach">
            <summary>
             Gets or sets whether the user can, by default, detach
             slices of the pie by Click and drag.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.EnableShiftDragExplode">
            <summary>
             Gets or sets whether the user can explode the pie by
             ShiftClick and drag.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DevComponents.DotNetBar.Charts.PieChart.ExplodedMargin" -->
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ExplodedOffset">
             <summary>
             Gets or sets the offset of each slice from the pie center when the pie
             is Exploded.  The offset is is measured as a percentage of the pie radius (if less than 1)
             or the absolute pixel amount (if greater than 1). Default is .1.
            
             Clicking a Detached slice will restore it to its original position in the pie, which
             may still be offset by this amount, if the pie is 'exploded'.
             </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.GridInnerRadius">
            <summary>
            Gets or sets the Inner radius of the pie grid, relative to the pie area. Can be a
            percentage (if value is between 0 and 1) or pixel amount (if value > 1).
            Defaults to 0.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.GridOuterRadius">
            <summary>
            Gets or sets the outer radius of the pie grid, relative to the pie area. Can be a
            percentage (if value is between 0 and 1) or pixel amount (if value > 1).
            Defaults to 1 (ie 100 %).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.GridInterval">
            <summary>
            Gets or sets the radial grid interval (interval division between grid lines). 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.GridMaxValue">
            <summary>
            Gets or sets the radial grid maximum value. 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.GridMinValue">
            <summary>
            Gets or sets the radial grid minimum value. 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.InnerMargin">
            <summary>
            Gets or sets the inner pixel margin between the inner
            most ring and the pie center. Default is .02d.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.InnerRadius">
            <summary>
            Gets or sets the size of the inner radius for the pie, relative to the plot
            area. Can be a percentage (if value is between 0 and 1) or pixel amount (if value > 1).
            A value > 0 will create an inner "hole" or donut chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.IsExploded">
            <summary>
            Gets or sets whether all slices of the pie have been pulled out, or
            exploded, from the center of the pie. This attribute can be used to
            create added emphasis or to highlight the entire pie. Default is false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.MaxDetachedOffset">
            <summary>
            Gets or sets the maximum Detached Offset value (in pixels) that
            a pie slice can be detached. Default is 100.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.MaxExplodedOffset">
            <summary>
            Gets or sets the maximum ExplodedOffset value (in pixels) that
            the pie may be exploded. Default is 100.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.MaxRingOutRadius">
            <summary>
            Gets or sets the maximum radius of the Center
            RingOut image (in pixels). Default is 48.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.MinOuterRadius">
            <summary>
            Gets or sets the minimum outer radius of the chart, in pixels. Defaults to 80.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.MinRingOutRadius">
            <summary>
            Gets or sets the minimum radius of the Center
            RingOut image (in pixels). Default is 9.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.MouseClickSliceAction">
            <summary>
            Gets or sets the default action used when the user clicks on a pie slice. Default is 'None'.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.MouseDoubleClickSliceAction">
            <summary>
            Gets or sets the default action used when
            the user double-clicks on a pie slice. Default is 'None'.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.MultiSelect">
            <summary>
             Gets or sets whether multiple items can be selected by the user. Default is true.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.OuterMargin">
            <summary>
            Gets or sets the outer pixel margin for the chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.OuterRadius">
            <summary>
            Gets or sets the outer radius of the pie, relative to the plot area. Can be a
            percentage (if value is between 0 and 1) or pixel amount (if value > 1).
            Defaults to .8 (ie 80 %).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.PaletteGroup">
            <summary>
            Gets or sets the palette color group to use (Light/Medium/Dark/Color1/MonoBlue/etc).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.PieRadiusScale">
            <summary>
            Gets or sets how the PieRadius values (InnerRadius, OuterRadius,
            GridInnerRadius, and GridOuterRadius) are interpreted (as absolute
            pixel values or as relative percentages).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.PieRingOutDisplayMode">
            <summary>
            Gets or sets the display mode for the RingOut indicator (used
            to move out a ring level when ShowAllRings is false and the
            ActiveSeriesPointCollection has been set to an inner ring).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.PieSelectionMode">
            <summary>
            Gets or sets the default mode used to perform pie selections. Default is 'Slice'.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ReversePaletteColors">
            <summary>
             Gets or sets whether default palette colors are utilized in reverse order.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ReverseRingOrder">
            <summary>
            Gets or sets whether rings of the pie are presented in reverse order.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.SeriesMargin">
            <summary>
            Gets or sets the margin between multiple series in
            the chart, relative to the plot area. Can be a percentage (if 
            value is between 0 and 1) or pixel amount (if value > 1).
            Defaults to .02
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.SeriesOverlayEnabled">
            <summary>
            Gets or sets whether chart series are, by default,
            overlayed on top of each other. Default is false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ShowAllRings">
            <summary>
            Gets or sets whether all series rings are shown when rendering the chart.
            If false, only one ring at a time is shown, with the ability to 'drill' up
            or down, to display adjacent rings. Defaults to true'.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ShowFullGrid">
            <summary>
            Gets or sets whether the radial pie grid is displayed over the entire
            pie (0 - 360 degrees) or only over the sweep angle. Default is false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ShowGridOnTop">
            <summary>
            Gets or sets whether the radial grid is displayed
            on top of the pie (ShowPieGrid must also be true). Default is false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ShowOtherSlice">
            <summary>
            Gets or sets  whether to consolidate 'excluded' pie slices
            (due to MaxSlices or MinPercent settings) into a single slice
            that represents 'Other' data values. Default is false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ShowPieGrid">
            <summary>
            Gets or sets whether a radial grid is displayed for the chart. Defaults to false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ShowSliceLabelsOnEntry">
            <summary>
            Gets or sets whether all enabled slice labels will be shown
            when the mouse enters the chart area. Default is false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.ShowToolTips">
            <summary>
            Gets or sets whether tooltips are shown.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.SliceLabelOverlapMode">
            <summary>
            Gets or sets the mode for resolving overlapping outer slice labels.
            Outer slice labels are only displayed for the outer-most chart series ring.  
            This setting only applies to individual series (ie. Overlapped series are
            treated as distinct elements). Default is HideOverlapping.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.SubSliceVisualLayout">
            <summary>
            Gets or sets the default layout of chart SeriesPoints that are
            subordinate to the chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.UseAlternateGridBackground">
            <summary>
            Gets or sets whether the chart utilizes the alternate background color
            when ShowPieGrid is enabled.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.WhitespaceClickBehavior">
            <summary>
            Gets or sets the behavior when the user
            clicks the mouse in the chart whitespace.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieChart.PlainCenterlabelText">
            <summary>
            Gets plain CenterLabel text without text-markup (if text-markup is used in Text)
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.GetHitArea(System.Drawing.Point)">
            <summary>
            Gets the hit area in the chart from the given point.
            </summary>
            <param name="pt"></param>
            <returns>ItemHitArea</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.GetHitItem(System.Drawing.Point,DevComponents.DotNetBar.Charts.PieSeriesPoint@)">
            <summary>
            Gets the hit item in the chart from the given point.
            </summary>
            <param name="pt"></param>
            <param name="psp"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.GetPspFromPoint(System.Drawing.Point)">
            <summary>
            Gets the psp at the given Point.  Note that the order of
            displayed/overlapping series is taken into account.
            </summary>
            <param name="pt"></param>
            <returns>PieSeriesPoint or null.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.InvalidatePieCenter">
            <summary>
            Invalidates the Pie Center area (causing a repaint).
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.InvalidateRingOut">
            <summary>
            Invalidates the 'Ring Out' area (causing a repaint).
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.CancelCapture">
            <summary>
            Cancels any inprogress operations that may have the mouse captured.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.SetSelected(System.Boolean)">
            <summary>
            Set (or clears) all selected elements in the chart.
            </summary>
            <param name="select"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.SetSelected(DevComponents.DotNetBar.Charts.PieSeries,System.Boolean)">
            <summary>
            Set (or clears) all selected elements in the given series.
            </summary>
            <param name="series"></param>
            <param name="select"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.SetSelected(DevComponents.DotNetBar.Charts.PieSeriesPoint,System.Boolean)">
            <summary>
            Set (or clears) the given series point.
            </summary>
            <param name="psp"></param>
            <param name="select"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.GetVisibleSelectionCount">
            <summary>
            Gets a count of the visible, selected pie series points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.GetVisibleSelectedPoints">
            <summary>
            Gets a list of the currently Visible selected points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.GetSelectionCount">
            <summary>
            Gets a count of the selected pie series points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.GetSelectedPoints">
            <summary>
            Gets a list of the currently selected points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.GetLocalAdjustedPoint(System.Drawing.Point)">
            <summary>
            Gets the local, scroll adjusted point.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.GetRayEndPoint(System.Double)">
            <summary>
            Gets the end Point for a ray, of the given angle (in degrees),
            starting at the pie center and ending at the outer radius.
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.GetRayEndPoint(System.Double,System.Double)">
            <summary>
            Gets the end Point for a ray, of the given angle (in degrees),
            starting at the pie center and ending at the specified radius.
            </summary>
            <param name="angle"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieChart.GetSeriesByName(System.String)">
            <summary>
            Gets the chart series with the given Name.
            </summary>
            <param name="name"></param>
            <returns>PieSeries or null.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.LegendTrackingMode">
            <summary>
            Defines the mode used to track mouse over interaction
            between PieChart elements and associated Legend elements.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.LegendTrackingMode.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.LegendTrackingMode.None">
            <summary>
            No tracking.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.LegendTrackingMode.Chart">
            <summary>
            Hit Chart elements are tracked in the Legend.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.LegendTrackingMode.Legend">
            <summary>
            Hit Legend elements are tracked in the Chart.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.LegendTrackingMode.ChartAndLegend">
            <summary>
            Both hit Legend elements and Chart elements are tracked.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.MouseClickSliceAction">
            <summary>
            Defines the action taken when a user
            clicks with the mouse in a pie slice..
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MouseClickSliceAction.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MouseClickSliceAction.None">
            <summary>
            No action taken.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MouseClickSliceAction.Select">
            <summary>
            Element select.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MouseClickSliceAction.Detach">
            <summary>
            Element detach toggle.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MouseClickSliceAction.Explode">
            <summary>
            Pie Exploded.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.MouseDoubleClickSliceAction">
            <summary>
            Defines the action taken when a user
            double-clicks with the mouse in a pie slice.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MouseDoubleClickSliceAction.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MouseDoubleClickSliceAction.None">
            <summary>
            No action taken.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MouseDoubleClickSliceAction.ChangeActiveRing">
            <summary>
            Change Active Ring (used when ShowAllRings is set to false).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MouseDoubleClickSliceAction.Detach">
            <summary>
            Element detach toggle.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MouseDoubleClickSliceAction.Explode">
            <summary>
            Pie Exploded.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.OtherSliceMethod">
            <summary>
            Defines the method used when determining
            which slices are to be included in the 'Other' slice.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.OtherSliceMethod.MinPercent">
            <summary>
            Uses the percentage that is set by the OtherMinPercent property.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.OtherSliceMethod.MaxSlices">
            <summary>
            Uses the count that is set by the OtherMaxSlices property.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PieRadiusScale">
            <summary>
            Defines how the PieRadius values (InnerRadius,
            OuterRadius, GridInnerRadius, and GridOuterRadius) values are interpreted).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieRadiusScale.Percentage">
            <summary>
            Values are always taken as percentages of the content area.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieRadiusScale.Pixel">
            <summary>
            Values > 1 are taken as pixel values.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PieSelectionMode">
            <summary>
            Defines the selection mode used when the user
            clicks on a pie element.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieSelectionMode.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieSelectionMode.None">
            <summary>
            No selection.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieSelectionMode.Pie">
            <summary>
            Pie selection.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieSelectionMode.Series">
            <summary>
            Series selection.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieSelectionMode.Slice">
            <summary>
            Slice selection (includes nested PieSeriesPoints).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieSelectionMode.Ring">
            <summary>
            Ring level selection.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieSelectionMode.Point">
            <summary>
            Individual PieSeriesPoint selection.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PspDragType">
            <summary>
            Defines the drag type.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PieRingOutDisplayMode">
            <summary>
            Defines when the 'RingOut' indicator is displayed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieRingOutDisplayMode.Always">
            <summary>
            Always displayed (when appropriate).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieRingOutDisplayMode.Never">
            <summary>
            Never displayed (user can go up a level by shift dbl-click).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieRingOutDisplayMode.OnMouseOver">
            <summary>
            Indicator shown when mouse is over ring area in center of Pie. (default)
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.SliceLabelOverlapMode">
            <summary>
            Specifies how overlapping outer slice Labels are resolved
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SliceLabelOverlapMode.NotSet">
            <summary>
            Not set (default is None). 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SliceLabelOverlapMode.ShowOverlapping">
            <summary>
            Overlapping labels will be shown.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SliceLabelOverlapMode.HideOverlapping">
            <summary>
            Overlapping labels will be hidden.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.SweepDirection">
            <summary>
            Defines the sweep direction.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SweepDirection.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SweepDirection.Clockwise">
            <summary>
            Clockwise.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SweepDirection.CounterClockwise">
            <summary>
            CounterClockwise.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.WhitespaceClickBehavior">
            <summary>
             Specifies the resultant behavior
             of clicking in the chart whitespace area.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.WhitespaceClickBehavior.None">
            <summary>
             No effect
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.WhitespaceClickBehavior.ClearSelection">
            <summary>
             Current selection is cleared
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PieLabel">
            <summary>
            Represents a PieLabel (label associated with a pie data slice in the chart).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieLabel.Angle">
            <summary>
            Gets the angle used to display the point label 
            associated with the data point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieLabel.Bounds">
            <summary>
            Gets the label text bounds.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieLabel.IsLeftlabel">
            <summary>
            Gets whether the label is a left positioned
            label (with respect to the chart slice).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieLabel.IsRightlabel">
            <summary>
            Gets whether the label is a right positioned
            label (with respect to the chart slice).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieLabel.Label">
            <summary>
            Gets or sets the label text
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieLabel.LabelSize">
            <summary>
            Gets the label size.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieLabel.PieSeriesPoint">
            <summary>
            Gets the associated PieSeriesPoint.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieLabel.PtBoxBend">
            <summary>
            Gets the middle connector point located
            at the 'bend' of the connector.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieLabel.PtBoxEdge">
            <summary>
            Gets the connector point located and the
            'edge' of the label text bounding box.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieLabel.PtSliceEdge">
            <summary>
            Gets the initial connector point, located at
            the edge of the pie slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieLabel.LabelStyle">
            <summary>
            Gets the current slice label VisualStyle for the label.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PieReferenceLineCollection">
            <summary>
            Represents the collection of PieReferenceLines.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieReferenceLineCollection.GetUniqueName">
            <summary>
            Gets a unique (unused) reference line Name.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PieReferenceLine">
            <summary>
            Represents a reference line (a radial line on the chart
            that can be used to signify, or reference, a specific chart value).
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieReferenceLine.#ctor">
            <summary>
            PieReferenceLine
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieReferenceLine.#ctor(System.String)">
            <summary>
            PieReferenceLine
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieReferenceLine.#ctor(System.String,System.Double)">
            <summary>
            PieReferenceLine
            </summary>
            <param name="name"></param>
            <param name="radialValue"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieReferenceLine.EffectiveStyle">
            <summary>
            Gets a reference to the ReferenceLine's Effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieReferenceLine.ReferenceLineVisualStyle">
            <summary>
            Gets or sets the visual style for the Reference Line.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieReferenceLine.Value">
            <summary>
             Gets or sets the associated radial grid value of the reference line.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieReferenceLine.InvalidateStyle">
            <summary>
            Invalidate the cached Style definition
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.AllowDetach">
            <summary>
            Gets or sets whether the element can be 'detached' from
            the center of the pie by the user. Defaults to true.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.AllowSelect">
            <summary>
            Gets or sets whether the ring can be selected by clicking on it. Defaults to true.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.IsDisplayed">
            <summary>
             Gets whether the ring is displayed (based upon Visibility and Legend state).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.Name">
            <summary>
            Gets or sets the user assigned Name of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.RingWeight">
            <summary>
             Gets or sets the 'relative' thickness of the series ring, as
             compared to the relative thickness of other series
             rings.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.Visible">
            <summary>
            Get or sets whether the item is visible
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieRing.GetSelectionCount">
            <summary>
            Gets a count of the visible selected pie series points.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.ChartLegendItemVisualStyles">
            <summary>
            Gets or sets the visual styles for the Legend item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.CheckedInLegend">
            <summary>
            Gets or sets whether the item is checked in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.ShowCheckBoxInLegend">
            <summary>
            Gets or sets whether a checkbox for the item is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.ShowInLegend">
            <summary>
            Gets or sets whether the item is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.ShowInParentLegend">
            <summary>
            Gets or sets whether the item Line is shown in parent Legend(s).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.ShowMarkerInLegend">
            <summary>
            Gets or sets whether the item Marker is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.LegendItem">
            <summary>
             Gets the item's parent LegendItem.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.LegendText">
            <summary>
             Gets or sets the text to display in the legend.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieRing.GetLegendItem">
            <summary>
            Creates the LegendItem for the item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieRing.GetLegendItems">
            <summary>
            Creates a list of legend items associated with
            the item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieRing.GetLegendItemColor">
            <summary>
            Gets the default color associated with the legend item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieRing.RenderLegendItemMarker(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.ChartLegendItem,DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle)">
            <summary>
            Renders the Legend item Marker.
            </summary>
            <param name="g"></param>
            <param name="litem"></param>
            <param name="style"></param>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.PieRing.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieRing.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieRing.OnPropertyChanged(System.String)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieRing.OnPropertyChangedEx(System.String,DevComponents.DotNetBar.Charts.Style.VisualChangeType)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
            <param name="changeType">invalidate</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieRing.StyleChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Occurs when one of element visual styles has property changes.
            Default implementation invalidates visual appearance of element.
            </summary>
            <param name="sender">VisualStyle that changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieRing.TrackLegendItem">
            <summary>
            Gets whether legend item tracking is enabled.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieRing.FormatItemText(System.String)">
            <summary>
            Formats the provided item text.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartPieSeriesCollection">
            <summary>
            Represents the collection of PieSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.CenterFirstSlice">
            <summary>
            Gets or sets whether the first pie slice is centered
            on the starting angle or starts on the starting angle. Default is false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.CustomPalette">
            <summary>
             Gets or sets the custom palette for the series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.EnableDragDetach">
            <summary>
             Gets or sets whether the user can detach associated series elements by Click and drag.
             Note that MouseClickSelect must not be set to None or NotSet.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.ExplodedMargin">
            <summary>
            Gets or sets the exploded Margin for the series when the pie
            is Exploded. The Margin is is measured as a percentage of the pie
            radius (if less than 1) or the absolute pixel amount (if greater than 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.MouseClickSliceAction">
            <summary>
            Gets or sets the action used when the user clicks on a pie slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.MouseDoubleClickSliceAction">
            <summary>
            Gets or sets the action used when the user double-clicks on a pie slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.PaletteGroup">
            <summary>
            Gets or sets the palette color group to use (Light/Medium/Dark/Color1/MonoBlue/etc).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.PieSelectionMode">
            <summary>
            Gets or sets the mode used to perfoem pie selections.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.ReversePaletteColors">
            <summary>
             Gets or sets whether default palette colors are utilized in reverse order.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.RingWeight">
            <summary>
             Gets or sets the 'relative' total combined thickness of all series rings, as
             compared to the relative thickness of other series combined rings.
             rings.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.SeriesPoints">
            <summary>
             Gets or sets the series point data collection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.ShowAllRings">
            <summary>
            Gets or sets whether all series rings are shown when rendering the chart.
            If false, only one ring at a time is shown, with the ability to 'drill' up
            or down, to display adjacent rings.        
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.ShowOtherSlice">
            <summary>
            Gets or sets whether to consolidate smaller pie slices into a single slice that
            represents 'other' data values, or whether to display those smaller slices
            as separate pie slices.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.SubSliceVisualLayout">
            <summary>
            Gets or sets the default layout of the subordinate or nested series slices.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.Visible">
            <summary>
            Gets or sets whether the series is visible or not.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeries.GetImageSideFactor(DevComponents.DotNetBar.Charts.PieSeriesPoint,System.Double,System.Drawing.Size)">
            <summary>
            Calculates the max 'a' side of the image.
            </summary>
            <param name="psp"></param>
            <param name="radius"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeries.GetMaxImageRadius(DevComponents.DotNetBar.Charts.PieSeriesPoint,System.Double)">
            <summary>
            Gets the max radius of a circle image at the given ray radius.
            </summary>
            <param name="psp"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeries.GetActiveSeriesPointCollection">
            <summary>
            Gets the current 'active' SeriesPointCollection (useful when
            'ShowInnerRings' is set to false).
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeries.SetActiveSeriesPointCollection(DevComponents.DotNetBar.Charts.PieSeriesPointCollection)">
            <summary>
            Sets the current 'active' SeriesPointCollection (useful when
            'ShowInnerRings' is set to false).
            </summary>
            <param name="spc"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeries.GetPieSeriesPointCollection(DevComponents.DotNetBar.Charts.PieSeriesPoint)">
            <summary>
            Gets the SeriesPointCollection containing the given PieSeriesPoint
            </summary>
            <param name="psp"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeries.GetOtherPieSeriesPoint">
            <summary>
            Gets the 'Other' PieSeriesPoint
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeries.SetSelected(System.Boolean)">
            <summary>
            Selects or clears all series PieSeriesPoints.
            </summary>
            <param name="select"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeries.GetVisibleSelectionCount">
            <summary>
            Gets the count of the currently Visible selected pie series points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeries.GetVisibleSelectedPoints">
            <summary>
            Gets a list of the currently Visible selected pie series points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeries.GetSelectionCount">
            <summary>
            Gets a count of the selected pie series points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeries.GetSelectedPoints">
            <summary>
            Gets a list of the currently selected pie series points.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeries.TrackLegendItem">
            <summary>
            Gets whether legend item tracking is enabled.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeries.FormatItemText(System.String)">
            <summary>
            Formats the provided item text.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SliceRenderType.FullSlice">
            <summary>
            Full slice.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SliceRenderType.ExtentSlice">
            <summary>
            Extent slice (partial slice).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SliceRenderType.ExtentWhitespace">
            <summary>
            Extentwhitespace.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SliceRenderType.OtherWhitespace">
            <summary>
            'Other' slice whitespace.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ExtentFillRange.NotSet">
            <summary>
            Not set (default is ByPoint)
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ExtentFillRange.ByPoint">
            <summary>
            Extents are filled according to each individual
            PieSeriesPoint extent value.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ExtentFillRange.BySlice">
            <summary>
            Extents are filled according to the slice
            maximum extent value.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ExtentFillRange.ByRing">
            <summary>
            Extents are filled according to the associated
            PieRing maximum extent value.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.SliceImageRadiusAnchor">
            <summary>
            Defines the anchor for the slice image (ie. the image's bounding edge).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SliceImageRadiusAnchor.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SliceImageRadiusAnchor.InnerRadius">
            <summary>
            The pie InnerRadius will be the anchor. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SliceImageRadiusAnchor.ExtentRadius">
            <summary>
            The pie ExtentRadius will be the anchor. The 'ExtentRadius' denotes
            how far the slice extends out from the slice center - which may not
            be as far as the OuterRadius (specified by the ValuesY[1] value).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SliceImageRadiusAnchor.OuterRadius">
            <summary>
            The pie OuterRadius will be the anchor. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieRefLineDisplayMode.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieRefLineDisplayMode.None">
            <summary>
            No Reference lines
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieRefLineDisplayMode.ExtentAverage">
            <summary>
            Extent Average Line. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieRefLineDisplayMode.ExtentMaximum">
            <summary>
            Extent Minimum Line.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieRefLineDisplayMode.ExtentMinimum">
            <summary>
            Extent Minimum Line.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieRefLineDisplayMode.ExtentOuterRadius">
            <summary>
            Outer Extent Line.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PieRefLineDisplayMode.UserDefined">
            <summary>
            All User defined Lines.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPointCollection.IsOther">
            <summary>
            Gets whether the PieSeriesPoint is the 'Other' slice collection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPointCollection.OtherSlicePsp">
            <summary>
            Gets the 'Other' slice PieSeriesPoint.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPointCollection.OtherSlices">
            <summary>
            Gets the 'Other' slice collection of SeriesPoints.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPointCollection.Parent">
            <summary>
            Gets the parent of this item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPointCollection.PieAverage">
            <summary>
            Gets the average pie point 'value' (Y[0]) for the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPointCollection.PieAverageExtent">
            <summary>
            Gets the average extent for the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPointCollection.PieSlices">
            <summary>
            Gets the collection of displayed Pie slices.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPointCollection.PieTotal">
            <summary>
            Gets the sum total of the pie collection 'values' (Y[0]).
            </summary>
            <returns></returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPointCollection.PieTotalExtent">
            <summary>
            Gets the sum total of the collection 'extents' (Y[1]).
            </summary>
            <returns></returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPointCollection.VisibleCount">
            <summary>
             Gets count of visible points in the collection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.AngleMargin">
            <summary>
            Gets or sets the margin used to offset the angle at
            which the slice sides are rendered. This can be used to
            create a more 'wedge' shaped slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.InnerLabelOrientation">
            <summary>
            Gets or sets the inner label orientation with respect to the slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.InnerSliceLabel">
             <summary>
             Gets or sets the inner slice label for the pie slice. The label can be
             straight text, or be comprised of text and formatting specifiers. The label
             should be specified as (note that brackets denote optional elements):
             "[text]{keyword[:format]}[text][{...}]".
             
             Here are the formatting specifiers that can be used with both inner and
             outer labels:
             
             "AVG" "A" - Average (angular values).
             "PCT" "P" - Percent of pie (angular values) - (.025 yields "2.5 %").
             "TOT" "T" - Total of all values (angluar values).
             "VAL" "V" - Value percent of pie (angular value) -  (.025 yields ".025").
            
             "AVGX" "AX" - Average (extent/radial values).
             "PCTX" "PX" - Percent of pie (extent values) - (.025 yields "2.5 %").
             "TOTX" "TX" - Total of all values (extent values).
             "VALX" "VX" - Value percent of pie (extent value) -  (.025 yields ".025").
            
             "S" "SNAME" - Series name.
             "X" - ValueX.
             "Y", "Y0", "Yn" - ValueY values (where 'n' is index value).
            
             Example use:
             
             "{S}\\n{X:yyyy} ({Y:##,##0} - {P:Y1})"
             "Individual cost {Y:C} and average cost {AVG:C} of goods."
            
             </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.MaxSlices">
             <summary>
             Gets or sets the maximum number of slices to represent in the pie. Any remaining values
             are consolidated into the 'Other' slice, if shown, or are not displayed at all.
            
             The slices are counted in the order in which they are displayed. This order is
             affected by the ReverseSlices property.
             </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.MinExtent">
            <summary>
             Gets or sets the minimum extent for the collection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.MinPercent">
            <summary>
            Gets or sets the minimum percent-of-total represented in individual slices.
            Values less than the MinPercent are either accumulated into the 'Other' slice, if shown,
            or  left in the main pie display.
            Range is 0–1.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.OtherSliceVisualStyles">
            <summary>
            Gets or sets the default visual style for the series 'Other' slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.OuterSliceLabel">
            <summary>
            Gets or sets the outer slice label for the pie slice.  See InnerSliceLabel for
            further notes on Format Specifiers.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.ReferenceLineDisplayMode">
            <summary>
            Gets or sets the type of pie reference lines to display.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.ReferenceLineDisplayOnTop">
            <summary>
            Gets or sets whether references lines are displayed on top of chart data.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.ReferenceLines">
            <summary>
            Gets a reference to the collection of user defined Reference Lines.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.RingWeight">
            <summary>
             Gets or sets the 'relative' thickness of the associated pie ring, as
             compared to the relative thickness of other series rings
             rings.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.ShowSliceWhiteSpace">
            <summary>
            Gets or sets whether to display, by default, the full
            slice (includes potential area beyond slice extent). Default is false.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.SliceLabelCropMode">
            <summary>
            Gets or sets the label display mode (ie. the action taken
            when a label needs be clipped for full display). Default is Clip.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.SliceLabelVisibility">
            <summary>
            Gets or sets when the slice labels are visibly displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.SliceLabelDisplayMode">
            <summary>
            Gets or sets the label display mode, which determines
            which slice labels (inner/outer) are displayed. Default is InnerAndOuter.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.SliceVisualStyles">
            <summary>
            Gets or sets the visual styles for the slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.StartAngle">
            <summary>
            Gets or sets the start angle of the pie in degrees where 0 is right and 270 is top. 
            Defaults to 270.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.SweepAngle">
            <summary>
            Gets or sets the sweep angle (distance from StartAngle to the
            ending angle) of the pie in positive degrees (use SweepDirection
            to change rotational direction).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.SweepDirection">
            <summary>
            Gets or sets the direction to display the pie slices - in either a clockwise
            or counterclockwise direction.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SliceVisualLayout.ToolTipText">
            <summary>
            Gets or sets the text to use for the point ToolTip.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SliceVisualLayout.GetReferenceLineByName(System.String)">
            <summary>
            Gets the ReferenceLine from the given name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SliceVisualLayout.StyleChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Occurs when one of element visual styles has property changes.
            Default implementation invalidates visual appearance of element.
            </summary>
            <param name="sender">VisualStyle that changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.SliceVisualLayout.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SliceVisualLayout.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SliceVisualLayout.OnPropertyChanged(System.String)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SliceVisualLayout.OnPropertyChangedEx(System.String,DevComponents.DotNetBar.Charts.Style.VisualChangeType)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
            <param name="changeType">invalidate</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SliceVisualLayout.Copy">
            <summary>
            Creates a copy of the SeriesPointsLayout
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SliceVisualLayout.CopyTo(DevComponents.DotNetBar.Charts.SliceVisualLayout)">
            <summary>
            Copies the item data to the given SeriesPointsLayout.
            </summary>
            <param name="sp"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.#ctor(System.Object,System.Object)">
            <summary>
            PieSeriesPoint
            </summary>
            <param name="xValue"></param>
            <param name="yValue"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.#ctor(System.Object,System.Object[])">
            <summary>
            PieSeriesPoint
            </summary>
            <param name="xValue"></param>
            <param name="yValue"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.#ctor(System.Object,System.Object,System.Object)">
            <summary>
            PieSeriesPoint
            </summary>
            <param name="xValue"></param>
            <param name="yValue1">angular value</param>
            <param name="yValue2">yValue2=radial</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.ActualStartAngle">
            <summary>
            Gets the actual, calculated starting angle for the slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.ActualSweepAngle">
            <summary>
            Gets the actual, calculated sweep angle for the slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.AllowDetach">
            <summary>
            Gets or sets whether the element can be 'detached' from
            the center of the pie by the user. Defaults to true.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.AllowSelect">
            <summary>
            Gets or sets whether the element can be selected by clicking on it. Defaults to true.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.CenterAngle">
            <summary>
            Gets the Center Angle for the slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.ChartSeries">
            <summary>
            Gets the associated ChartSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.DefaultPaletteColor">
            <summary>
            Gets the default palette color assigned to the point when it
            is arranged in the pie.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.DetachedOffset">
            <summary>
            Gets or sets the offset distance of the slice from the pie center, as measured
            by a percentage of the pie radius (if between 0 and 1), or absolute pixel amount (if >= 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.EffectiveSliceStyles">
            <summary>
            Gets a reference to the Effective (cached, composite) Slice styles.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.ExtentRadius">
            <summary>
            Gets the actual, calculated extent radius of the slice (the
            radius between the inner and outer radius - ValuesY[1]).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.InnerRadius">
            <summary>
            Gets the actual, inner radius of the slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.InnerSliceLabel">
             <summary>
             Gets or sets the inner slice label for the pie slice. The label can be
             straight text, or be comprised of text and formatting specifiers. The label
             should be specified as "Some text {Keyword:Format} more text [{...:...}]".
             
             Here are the formatting specifiers that can be used with both inner and
             outer labels:
             
             "AVG" "A" - Average (angular values).
             "PCT" "P" - Percent of pie (angular values) - (.025 yields "2.5 %").
             "TOT" "T" - Total of all values (angluar values).
             "VAL" "V" - Value percent of pie (angular value) -  (.025 yields ".025").
            
             "AVGX" "AX" - Average (extent/radial values).
             "PCTX" "PX" - Percent of pie (extent values) - (.025 yields "2.5 %").
             "TOTX" "TX" - Total of all values (extent values).
             "VALX" "VX" - Value percent of pie (extent value) -  (.025 yields ".025").
            
             "S" "SNAME" - Series name.
             "X" - ValueX.
             "Y", "Y0", "Yn" - ValueY values (where 'n' is index value).
            
             Examples:
             
             "{S}\\n{X:yyyy} ({Y:##,##0} - {P:Y1})"
             "Individual cost {Y:C} and average cost {AVG:C} of goods."
             
             </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.IsDetached">
            <summary>
            Gets or sets whether the slice is 'detached' from the center of the pie. This can be
            used to create emphasis or to highlight a slice of the pie.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.IsDisplayed">
            <summary>
             Gets whether the series point is displayed
             based upon its Visibility and Legend state.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.IsEmptyPoint">
            <summary>
            Gets or sets whether the point is an 'Empty' (or missing) Point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.IsInOther">
            <summary>
            Gets whether the slice is in the 'Other' slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.IsOther">
            <summary>
            Gets whether the slice is the 'Other' slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.IsSelected">
            <summary>
            Gets or sets whether the slice is selected.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.Name">
            <summary>
            Gets or sets the Name of the item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.OrdinalValue">
            <summary>
            Gets the ordial value for the point (the ordinal value when added
            to the PieSeriesPoint Collection
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.OuterRadius">
            <summary>
            Gets the actual, outer radius of the slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.OuterSliceLabel">
            <summary>
            Gets or sets the outer slice label for the pie slice.  See InnerSliceLabel for
            further notes on Format Specifiers.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.PieRing">
            <summary>
            Gets the items associated PieRing (if applicable).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.SeriesPoints">
            <summary>
             Gets the nested series point data collection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.SliceCenter">
            <summary>
            Gets the slice center origin point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.SliceExtent">
            <summary>
            Gets the calculated slice extent value (the relative
            percent-of-total ValuesY[1] value for the slice).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.SliceValue">
            <summary>
            Gets the calculated slice value (the relative
            percent-of-total ValuesY[0] value for the slice).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.SliceVisualStyles">
            <summary>
            Gets or sets the visual styles for the slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.StartAngle">
            <summary>
             Gets or sets the starting angle of the slice. For subsequent slices,
             the default is the ending angle of the previous slice. Specify a value 
             for the StartAngle if you want the next slice to start at an angle that
             is different from the previous ending angle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.SubSliceVisualLayout">
            <summary>
            Gets or sets the layout of the subordinate (or nested) slices.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.SweepAngle">
            <summary>
             Gets or sets the sweep angle of the slice (angle size, in degrees).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.ToolTipText">
            <summary>
            Gets or sets the text to use for the point ToolTip.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.Visible">
            <summary>
            Gets or sets whether the point is Visible.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.ProcessSliceLabelFmt(System.String)">
             "AVG" "A" - Average (angular values).
             "PCT" "P" - Percent of pie (angular values) - (.025 yields "2.5 %").
             "TOT" "T" - Total of all values (angluar values).
             "VAL" "V" - Value percent of pie (angular value) -  (.025 yields ".025").
            
             "AVGX" "AX" - Average (extent/radial values).
             "PCTX" "PX" - Percent of pie (extent values) - (.025 yields "2.5 %").
             "TOTX" "TX" - Total of all values (extent values).
             "VALX" "VX" - Value percent of pie (extent value) -  (.025 yields ".025").
            
             "S" "SNAME" - Series name.
             "X" - ValueX.
             "Y", "Y0", "Yn" - ValueY values (where 'n' is index value).
            
             Use: {format[:specifier]}
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.StyleChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Occurs when one of element visual styles has property changes.
            Default implementation invalidates visual appearance of element.
            </summary>
            <param name="sender">VisualStyle that changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.ChartLegendItemVisualStyles">
            <summary>
            Gets or sets the visual styles for the Legend item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.CheckedInLegend">
            <summary>
            Gets or sets whether the item is checked in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.ShowCheckBoxInLegend">
            <summary>
            Gets or sets whether a checkbox for the item is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.ShowInLegend">
            <summary>
            Gets or sets whether the item is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.ShowInParentLegend">
            <summary>
            Gets or sets whether the item Line is shown in parent Legend(s).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.ShowMarkerInLegend">
            <summary>
            Gets or sets whether the item Marker is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.LegendItem">
            <summary>
             Gets the item's parent LegendItem.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.LegendText">
            <summary>
             Gets or sets the text to display in the legend.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.GetLegendItem">
            <summary>
            Creates the LegendItem for the item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.GetLegendItems">
            <summary>
            Creates a list of legend items associated with
            the item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.GetLegendItemColor">
            <summary>
            Gets the default color associated with the legend item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.RenderLegendItemMarker(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.ChartLegendItem,DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle)">
            <summary>
            Renders the Legend item Marker.
            </summary>
            <param name="g"></param>
            <param name="litem"></param>
            <param name="style"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PieSeriesPoint.TrackLegendItem">
            <summary>
            Gets whether legend item tracking is enabled.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.FormatItemText(System.String)">
            <summary>
            Formats the provided item text.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.Copy">
            <summary>
            Creates a copy of the PieSeriesPoint
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.CopyTo(DevComponents.DotNetBar.Charts.PieSeriesPoint)">
            <summary>
            Copies the item data to the given PieSeriesPoint.
            </summary>
            <param name="sp"></param>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.PieSeriesPoint.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.OnPropertyChanged(System.String)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.PieSeriesPoint.OnPropertyChangedEx(System.String,DevComponents.DotNetBar.Charts.Style.VisualChangeType)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
            <param name="changeType">invalidate</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesPoint.DataItem">
            <summary>
             Gets the object to which the Point is bound.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesPoint.IsEmptyPoint">
            <summary>
            Gets or sets whether the point is an 'Empty' (or missing) Point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesPoint.IsEmptyValue">
            <summary>
            Gets whether the point is an 'Empty' value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesPoint.IsQualitativeXValue">
            <summary>
            Gets whether the X Value is a Qualitative value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesPoint.IsQualitativeYValue">
            <summary>
            Gets whether the Y Values are a Qualitative values.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesPoint.IsQuantitativeXValue">
            <summary>
            Gets whether the X Value is a Quantitative value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesPoint.IsQuantitativeYValue">
            <summary>
            Gets whether the Y Values are Quantitative values.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesPoint.Tag">
            <summary>
             Gets or sets user-defined data associated with the point
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesPoint.ValueX">
            <summary>
            Gets or sets the X-Axis Value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesPoint.ValueY">
            <summary>
            Gets or sets the Y-Axis Values.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SeriesPoint.Visible">
            <summary>
            Gets or sets whether the point is Visible.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SeriesPoint.Copy">
            <summary>
            Creates a copy of the SeriesPoint
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SeriesPoint.CopyTo(DevComponents.DotNetBar.Charts.SeriesPoint)">
            <summary>
            Copies the item data to the given SeriesPoint.
            </summary>
            <param name="sp"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PointValueConvertor">
            <summary>
             PointValueConvertor
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.AxisStripeCollection">
            <summary>
            Represents the collection of Axis Stripes.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.AxisStripe">
            <summary>
            Element describing a color stripe on the chart.  Each AxisStripe
            is associated with a primary or Ancillary Axis.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.AxisStripe.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Create a new AxisStripe.
            </summary>
            <param name="name"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.AxisStripe.#ctor(System.String)">
            <summary>
            Create a new AxisStripe.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.AxisStripe.#ctor">
            <summary>
            Create a new AxisStripe.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.AxisStripe.AxisStripeVisualStyle">
            <summary>
            Gets or sets the visual style for the AxisStripe.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.AxisStripe.IsDisplayed">
            <summary>
             Gets whether the Stripe is displayed (must be Visible
             and appropriately 'checked' if presented in the Legend).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.AxisStripe.MaxValue">
            <summary>
             Gets or sets the maximum axis stripe value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.AxisStripe.MinValue">
            <summary>
             Gets or sets the minimum axis stripe value.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.AxisStripe.InvalidateStyle">
            <summary>
            Invalidate the cached Styles
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.AxisStripe.ChartLegendItemVisualStyles">
            <summary>
            Gets or sets the visual styles for the Legend item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.AxisStripe.CheckedInLegend">
            <summary>
            Gets or sets whether the ReferenceLine is checked in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.AxisStripe.ShowCheckBoxInLegend">
            <summary>
            Gets or sets whether a checkbox for the ReferenceLine is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.AxisStripe.ShowInLegend">
            <summary>
            Gets or sets whether the ReferenceLine is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.AxisStripe.ShowInParentLegend">
            <summary>
            Gets or sets whether the Reference Line is shown in parent Legend(s).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.AxisStripe.ShowMarkerInLegend">
            <summary>
            Gets or sets whether the ReferenceLine Marker is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.AxisStripe.LegendItem">
            <summary>
             Gets the item's parent LegendItem.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.AxisStripe.LegendText">
            <summary>
             Gets or sets the text to display in the legend.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.AxisStripe.GetLegendItem">
            <summary>
            Creates the LegendItem for the AxisStripe.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.AxisStripe.GetLegendItems">
            <summary>
            Creates a list of legend items associated with
            the AxisStripe.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.AxisStripe.GetLegendItemColor">
            <summary>
            Gets the default color associated with the
            AxisStripe legend item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.AxisStripe.RenderLegendItemMarker(System.Drawing.Graphics,DevComponents.DotNetBar.Charts.ChartLegendItem,DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle)">
            <summary>
            Renders the Legend item Marker.
            </summary>
            <param name="g"></param>
            <param name="litem"></param>
            <param name="style"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.AxisStripe.Copy">
            <summary>
            Creates a copy of the element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.AxisStripe.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the current element properties and styles 
            to the provided "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartAxesXCollection">
            <summary>
            Represents the collection of Chart AxesX.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartAxesYCollection">
            <summary>
            Represents the collection of Chart AxesY.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartAxesCollection">
            <summary>
            Represents the collection of Chart Axes.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartAxisX">
            <summary>
            Represents an X-Axis element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxisX.MajorGridLines">
            <summary>
             Gets the axis MajorGridLines element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxisX.MajorTickmarks">
            <summary>
             Gets the axis MajorTickmarks element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxisX.MinorGridLines">
            <summary>
             Gets the axis MinorGridLines element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxisX.MinorTickmarks">
            <summary>
             Gets the axis MinorTickmarks element.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxisX.GetPointFromValue(System.Object)">
            <summary>
            Gets the chart Point from the given axis data value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxisX.EnsureVisible(System.Object,System.Boolean)">
            <summary>
            Ensures the given data value is visible and
            optionally centered on screen.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxisX.Copy">
            <summary>
            Creates a copy of the axis.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxisX.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the current axis properties to the
            given "copy" axis.
            </summary>
            <param name="copy"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartAxisY">
            <summary>
            Represents a Y-Axis element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxisY.MajorGridLines">
            <summary>
             Gets the axis MajorGridLines element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxisY.MajorTickmarks">
            <summary>
             Gets the axis MajorTickmarks element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxisY.MinorGridLines">
            <summary>
             Gets the axis MinorGridLines element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxisY.MinorTickmarks">
            <summary>
             Gets the axis MinorTickmarks element.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxisY.GetPointFromValue(System.Object)">
            <summary>
            Gets the chart Point from the given axis data value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxisY.EnsureVisible(System.Object,System.Boolean)">
            <summary>
            Ensures the given data value is visible and
            optionally centered on screen.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxisY.Copy">
            <summary>
            Creates a copy of the axis.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxisY.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies each axis property to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.ActualDateTimeUnits">
            <summary>
            Gets the actual axis display units for DateTime data (as determined by
            either the DateTimeUnits property or actual inspection of the associated data).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.ActualMaxValue">
            <summary>
            Gets the actual, axis max data value (as determined by
            either the MaxValue property or actual inspection of the associated data).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.ActualMinValue">
            <summary>
            Gets the actual, axis min data value (as determined by
            either the MinValue property or actual inspection of the associated data).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.AutoCalcBarMargins">
            <summary>
            Gets or sets whether axis Bar Margins are calculated and used.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.AxisAlignment">
            <summary>
            Gets or sets the axis alignment.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.AxisFarMargin">
            <summary>
             Gets or sets the far/ending margin for the axis. When set ( >= 0 ), the
             value overrides the general AxisMargins setting.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DevComponents.DotNetBar.Charts.ChartAxis.AxisMargins" -->
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.AxisNearMargin">
            <summary>
             Gets or sets the near/beginning margin for the axis. When set ( >= 0 ), the
             value overrides the general AxisMargins setting.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.AxisOrientation">
            <summary>
             Gets the axis orientation (X/Y).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.AxisStripes">
            <summary>
            Gets a reference to the collection of AxisStripes associated with the axis.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.ChartAxisVisualStyle">
            <summary>
            Gets or sets the visual style for the Axis.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.CrosshairLabelVisualStyle">
            <summary>
            Gets or sets the visual style to be used for Crosshair elements associated with the axis.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.DateTimeUnits">
            <summary>
            Gets or sets the axis display units for DateTime data.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.DateTimeUnitsLimit">
            <summary>
            Gets or sets the limiting axis display units for DateTime data (the
            max DateTime units the chart will, if needed, promote the display to).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.EffectiveAxisStyle">
            <summary>
            Gets a reference to the Axis' Effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.EffectiveCrosshairLabelStyle">
            <summary>
            Gets a reference to the CrosshairLabel's Effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.GridInterval">
            <summary>
             Gets or sets the grid interval (the distance between MajorTickmarks, in pixels)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.GridSpacing">
            <summary>
             Gets or sets the numerical spacing between MajorTickmarks (such as 1, 10, 100, ...).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.IsPrimaryAxis">
            <summary>
            Gets whether the axis is the Primary axis.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.MajorGridLines">
            <summary>
             Gets the axis MajorGridLines element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.MajorTickmarks">
            <summary>
             Gets the axis MajorTickmarks element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.MaxValue">
            <summary>
             Gets or sets the maximum axis data value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.MinorGridLines">
            <summary>
             Gets the axis MinorGridLines element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.MinGridInterval">
            <summary>
             Gets or sets the minimum grid interval size. This is the distance (in pixels)
             between tickmark layout items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.MinorTickmarks">
            <summary>
             Gets the axis MinorTickmarks element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.MinValue">
            <summary>
             Gets or sets the minimum axis data value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.QualitativeSortDirection">
            <summary>
             Gets or sets the sort direction for Qualitative axis values.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.ReferenceLines">
            <summary>
            Gets a reference to the collection of axis Reference Lines
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.Title">
            <summary>
             Gets or sets the Axis Title.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.UseAlternateBackground">
            <summary>
            Gets or sets whether the axis utilizes the alternate background color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartAxis.UseAutoMinGridInterval">
            <summary>
            Gets or sets whether the auto-calculated minimum grid interval
            will be used in determining the axis major tickmark interval.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxis.GetPointFromValue(System.Object)">
            <summary>
            Gets the chart Point from the given data value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxis.GetValueFromPoint(System.Drawing.Point)">
            <summary>
            Gets the "Data" value from the given Chart Point.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxis.GetReferenceLineByName(System.String)">
            <summary>
            Gets the ReferenceLine from the given name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxis.GetStripeByName(System.String)">
            <summary>
            Gets the AxisStripe from the given name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxis.EnsureVisible(System.Object)">
            <summary>
            Ensures the given data value is visible on screen.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxis.EnsureVisible(System.Object,System.Boolean)">
            <summary>
            Ensures the given data value is visible and
            optionally centered on screen.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxis.InvalidateStyle">
            <summary>
            Invalidate the cached Styles
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxis.InvalidateRender">
            <summary>
            Invalidate the axis for rendering purposes.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxis.RefreshRangeValues">
            <summary>
            Causes an invalidation and refresh of the range values for the axis.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartAxis.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the axis elements to the given "copy"
            </summary>
            <param name="copy"></param>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.AxisAlignment.NotSet">
            <summary>
            Default is determined by the Axis (X/Y).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.AxisAlignment.Near">
            <summary>
            Axis is displayed at the right or bottom side of the chart.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.AxisAlignment.Far">
            <summary>
            Axis is displayed at the left or top side of the chart.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.AxisOrientation">
            <summary>
            AxisOrientation.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.AxisOrientation.X">
            <summary>
            X Axis
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.AxisOrientation.Y">
            <summary>
            Y Axis
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.DateTimeUnits">
            <summary>
            DateTimeUnits
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MarginLayout.None">
            <summary>
            No Margins will be displayed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MarginLayout.Near">
            <summary>
            Margin is displayed at the right or bottom side of the axis.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MarginLayout.Far">
            <summary>
            Margin is displayed at the left or top side of the axis.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.MarginLayout.Both">
            <summary>
            Both Near and Far margins are displayed.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.OriginOffsetMode">
            <summary>
            Mode for setting the axis origin, or offset from its
            normal position.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.OriginOffsetMode.None">
            <summary>
            No offset
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.OriginOffsetMode.Absolute">
            <summary>
            Origin is shifted by an absolute amount (OriginOffset)
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.OriginOffsetMode.Relative">
            <summary>
            Origin is shifted relative to the major scale amounts.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.OriginOffsetMode.Percent">
            <summary>
            Origin is shifted a percentage of the total axis length.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.OverlapLabelMode.NotSet">
            <summary>
            Default is to Hide overlapping labels.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.OverlapLabelMode.Stagger">
            <summary>
            Overlapping labels will be staggered.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.OverlapLabelMode.Hide">
            <summary>
            Overlapping labels may be hidden.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartMajorGridLinesX">
            <summary>
            Represents a chart's MajorGridLines for the X-Axis.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMajorGridLinesX.Copy">
            <summary>
            Create a copy of the MajorGridLine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMajorGridLinesX.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the MajorGridLine to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartMajorGridLinesY">
            <summary>
            Represents a chart's MajorGridLines for the Y-Axis.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMajorGridLinesY.Copy">
            <summary>
            Create a copy of the MajorGridLine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMajorGridLinesY.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the MajorGridLine to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartMajorGridLines">
            <summary>
            Represents a chart's MajorGridLines.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMinorGridLinesX.Copy">
            <summary>
            Create a copy of the MinorGridLine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMinorGridLinesX.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the MinorGridLine to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMinorGridLinesY.Copy">
            <summary>
            Create a copy of the MinorGridLine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartMinorGridLinesY.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the MinorGridLine to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartGridLines.DisplayOnTop">
            <summary>
            Gets or sets whether grid lines are displayed on top of chart data.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartGridLines.EffectiveStyle">
            <summary>
            Gets a reference to the GridLine's Effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartGridLines.GridLinesVisualStyle">
            <summary>
            Gets or sets the visual style for the GridLines.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartGridLines.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the chart element to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartSeriesCollection">
            <summary>
            Represents the collection of ChartSeries.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ActualScaleTypeX">
            <summary>
             Gets the Actual X axis Scale Type (may be
             different than XScaleType when XScaleType is 'Auto').
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ActualScaleTypeY">
            <summary>
             Gets the Actual Y axis Scale Type (may be
             different than YScaleType when YScaleType is 'Auto').
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.AreaBaseValue">
            <summary>
             Gets or sets the base, reference value for displaying Line/Spline/Step Areas.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.AxisX">
            <summary>
            Gets a reference to the X-Axis associated with the series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.AxisY">
            <summary>
            Gets a reference to the Y-Axis associated with the series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.BarFillRange">
            <summary>
            Gets or sets how series bars are filled (either according to
            each individual bar range, or the entire series range).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.BarLabelPosition">
            <summary>
            Gets or sets the position of bar series labels (default is Center).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.BarShadingEnabled">
            <summary>
             Gets or sets whether Bar shading is enabled for Horizontal and Vertical Bar series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.BarWidthRatio">
            <summary>
            Gets or sets the ratio of bar width to bar spacing within
            the same series (defaults to 2 - bar is twice as wide as spacing).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.BubbleIntensityMode">
            <summary>
            Gets or sets the mode used to determine bubble intensities.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.BubbleMaxPercentage">
            <summary>
            Gets or sets the max percentage of the display
            area used to calculate series bubble sizes (default is .25).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.BubbleMinSize">
            <summary>
            Gets or sets the minimum series bubble size (in pixels) Default is 4.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.BubbleScaleFactor">
            <summary>
            Gets or sets the Scale Factor used to calculate series bubble sizes.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.BubbleSizeMode">
            <summary>
            Gets or sets the mode used to calculate series bubble sizes.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ChartIndicators">
            <summary>
             Gets a reference to the Chart Indicators collection.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ChartLineAreaDisplayMode">
            <summary>
            Gets or sets the Line 'Area' display mode.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ChartLineDisplayMode">
            <summary>
            Gets or sets the Line ChartType display mode.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ChartSeriesVisualStyle">
            <summary>
            Gets or sets the visual style for the series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ConvexHullDisplayMode">
            <summary>
            Gets or sets the ConvexHull display mode.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.CrosshairEnabled">
            <summary>
             Gets or sets whether Crosshair support is enabled for the series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.CrosshairHighlightPoints">
            <summary>
             Gets or sets whether Crosshair Point highlighting is enabled for the series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.CrosshairHighlightSinglePoint">
            <summary>
             Gets or sets whether Crosshair Point highlighting will
             only highlight a single point for the series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.CrosshairShowLabels">
            <summary>
             Gets or sets whether Crosshair labels are shown for the series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.DataLabels">
            <summary>
             Gets or sets the list of instance Data Labels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.DataLabelVisualStyle">
            <summary>
            Gets or sets the visual style for the data labels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.DisplayLinePointsOnTop">
            <summary>
            Gets or sets whether series points are displayed on top of series line.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.DotPlotIndexValue">
            <summary>
            Gets or sets the value used to index between DotPlot points. Default is 1.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.EffectiveDataLabelStyle">
            <summary>
            Gets a reference to the DataLabel effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.EffectiveChartSeriesStyle">
            <summary>
            Gets a reference to the Series's effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.EmptyValues">
            <summary>
             Gets or sets the value(s) used to determine if
             a series point is empty or missing.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.EnableEmptyValues">
            <summary>
            Gets or sets whether EmptyValues are processed in the series
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.GroupId">
            <summary>
             Gets or sets the logical Id used to group qualitative series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.HiLoBarType">
            <summary>
             Gets or sets the Series HiLoBar Type.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.MaxValueX">
            <summary>
             Gets the series Maximum X value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.MaxValueY">
            <summary>
             Gets the series Maximum Y value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.MinValueX">
            <summary>
             Gets the series minimum X value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.MinValueY">
            <summary>
             Gets the series minimum Y value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.PointLabelDisplayMode">
            <summary>
            Gets or sets the display mode for the chart PointLabels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.PointLabelMinDistance">
            <summary>
             Gets or sets the minimum distance between label data points.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.PointLabelSkip">
            <summary>
             Gets or sets the number of inter-label points to skip.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ScaleTypeX">
            <summary>
             Gets or sets the X axis Scale Type.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ScaleTypeY">
            <summary>
             Gets or sets the Y axis Scale Type.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.SeriesPoints">
            <summary>
             Gets the series point data collection
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.SeriesType">
            <summary>
             Gets or sets the Series Type.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ShowHiLoBarMedianLines">
            <summary>
            Gets or sets whether defined HiLoBar Median lines are shown.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ShowEmptyLines">
            <summary>
            Gets or sets whether EmptyLines are shown in the series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ShowEmptyPoints">
            <summary>
            Gets or sets whether EmptyPoints are shown in the series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.ShowOriginValueLabels">
            <summary>
            Gets or sets whether labels are shown for 'Origin' data values.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.StackQualitativePoints">
            <summary>
            Gets or sets whether Qualitative points are
            stacked or spread across the associated grouped column.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.StepLines">
            <summary>
            Gets or sets which 'Step lines' are displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartSeries.StepLineMode">
            <summary>
            Gets or sets the mode used to render "Step Lines" in
            the defined Line series.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartSeries.GetLabelPoints(DevComponents.DotNetBar.Charts.PointLabelDisplayMode)">
            <summary>
            Gets the collection of series PointData for the given PointLabelDisplayType.
            </summary>
            <param name="plmode"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartSeries.IsConvexHullPoint(DevComponents.DotNetBar.Charts.SeriesPoint)">
            <summary>
            Determines whether the given SeriesPoint is a ConvexHull point.
            </summary>
            <param name="sp"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartSeries.IsHighLightPoint(DevComponents.DotNetBar.Charts.SeriesPoint)">
            <summary>
            Determines if the given SeriesPoint is a HighLight Point (a
            point highlighted by the Crosshair setup).
            </summary>
            <param name="sp"></param>
            <returns></returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.HiLoRenderData.AlternateStyle">
            <summary>
            Gets the alternate segment style used when Open/Close values are reversed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.HiLoRenderData.DefaultStyle">
            <summary>
            Gets the default segment style used when Open/Close values are not reversed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.HiLoRenderData.IsAlternate">
            <summary>
            Gets whether the segment is to be render as 'Alternate'.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.HiLoRenderData.SeriesStyle">
            <summary>
            Gets the associated series visual style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.HiLoRenderData.Value">
            <summary>
            Gets an array of specified HiLo coordinate data values (x or y,
            depending upon the bar orientation). The values are specified
            in [High=0, Low=1, Close=2, Open=3, Median=4] order, followed
            by any 'extra' user supplied bar values.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.BarLabelPosition">
            <summary>
            Specifies the position for Bar series labels.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarLabelPosition.NotSet">
            <summary>
            Not set (default is Center). 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarLabelPosition.Center">
            <summary>
            Labels will be positioned in the center of the bar. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarLabelPosition.Near">
            <summary>
            Labels will be positioned outside the bar, relative to its origin. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarLabelPosition.NearInside">
            <summary>
            Labels will be positioned inside the bar, relative to its origin. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarLabelPosition.Far">
            <summary>
            Labels will be positioned outside the bar, opposite to its origin. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarLabelPosition.FarInside">
            <summary>
            Labels will be positioned inside the bar, opposite to its origin. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarSegment.Top">
            <summary>
            Top portion of Vertical bar (full area).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarSegment.TopPartial">
            <summary>
            Partial Top area of Vertical bar.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarSegment.Bottom">
            <summary>
            Bottom portion of Vertical bar (full area).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarSegment.BottomPartial">
            <summary>
            Partial Bottom area of Vertical bar.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarSegment.Left">
            <summary>
            Left portion of Horizontal bar (full area).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarSegment.LeftPartial">
            <summary>
            Partial Left area of Horizontal bar.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarSegment.Right">
            <summary>
            Right portion of Horizontal bar (full area).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarSegment.RightPartial">
            <summary>
            Partial Right area of Horizontal bar.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ConvexHullDisplayMode">
            <summary>
            Specifies the ConvexHull display mode
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ConvexHullDisplayMode.NotSet">
            <summary>
            Not set (default is None). 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ConvexHullDisplayMode.None">
            <summary>
            No Convex Hull processing will take place. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ConvexHullDisplayMode.DisplayBorder">
            <summary>
            Convex Hull border will be displayed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ConvexHullDisplayMode.DisplayBackground">
            <summary>
            Convex Hull background area will be displayed.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PointLabelDisplayMode">
            <summary>
            Specifies which PointLabels are to be displayed
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointLabelDisplayMode.NotSet">
            <summary>
            Not set (default is None). 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointLabelDisplayMode.None">
            <summary>
            No labels will be displayed. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointLabelDisplayMode.AllSeriesPoints">
            <summary>
            All series points will display a label. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointLabelDisplayMode.DataLabels">
            <summary>
            User defined DataLabels will be displayed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointLabelDisplayMode.MinValueX">
            <summary>
            Minimum 'X' Value label will be displayed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointLabelDisplayMode.MinValueY">
            <summary>
            Minimum 'Y' Value label will be displayed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointLabelDisplayMode.MaxValueX">
            <summary>
            Maximum 'X' Value label will be displayed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointLabelDisplayMode.MaxValueY">
            <summary>
            Maximum 'Y' Value label will be displayed.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.StepLineMode">
            <summary>
            Specifies the mode used to render "Step Lines" in
            a given Line series.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.StepLineMode.NotSet">
            <summary>
            Not set (default is HorizontalThenVertical). 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.StepLineMode.None">
            <summary>
            No Step Lines will be rendered. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.StepLineMode.HorizontalThenVertical">
            <summary>
            Step lines will be displayed between consecutive
            series points, by first displaying the horizontal step
            line, followed by the connecting vertical step line. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.StepLineMode.VerticalThenHorizontal">
            <summary>
            Step lines will be displayed between consecutive
            series points, by first displaying the vertical step
            line, followed by the connecting horizontal step line. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.StepLineMode.MidPoint">
            <summary>
            Step lines will be displayed between consecutive
            series points, by first displaying the midPoint horizontal
            step line, followed by the connecting vertical step line. 
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.StepLines">
            <summary>
            Specifies the mode used to render "Stepped Lines" in
            a given Line series.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.StepLines.NotSet">
            <summary>
            Not set (default is StepHv). 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.StepLines.None">
            <summary>
            No step lines will be displayed. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.StepLines.Horizontal">
            <summary>
            Horizontal step lines will be displayed. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.StepLines.Vertical">
            <summary>
            Vertical step lines will be displayed. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.StepLines.Both">
            <summary>
            Both horizontal and vertical step lines will be displayed. 
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ScaleType">
            <summary>
            Specifies the scale type for the series points
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ScaleType.NotSet">
            <summary>
            ScaleType is NotSet (default is 'Auto').
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ScaleType.Auto">
            <summary>
            ScaleType is Automatic.  Scale type will be determined
            by the underlying, assigned data.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ScaleType.DateTime">
            <summary>
            DateTime data scale. Points will be treated as
            DateTime values and will be shown as such on the axis. 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ScaleType.Quantitative">
            <summary>
            Numerical data scale. Points will be treated as
            numerical values and will be shown on the axis as numbers.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ScaleType.Qualitative">
            <summary>
            Qualitative data scale. Points will be treated as 
            qualitative values and will be shown on the axis as text.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.HiLoBarType">
            <summary>
            Specifies the HiloBar series display type.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarType.Box">
            <summary>
            Box Plot display. Display is identical to 'Candle' except:
            1. Median separated segments are separately rendered using both
            default and alternate box backgrounds.
            2. UseAlternateSegmentStyle defaults to false.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarType.Candle">
            <summary>
            Candle Plot display. Display is identical to 'Box' except:
            1. Mmedian separated segments are both rendered using either
            the default or alternate box background.
            2. UseAlternateSegmentStyle defaults to true.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarType.Line">
            <summary>
            Line plot display.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarSegment.Box">
            <summary>
            Box (Box plot).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarSegment.HighWhisker">
            <summary>
            High whisker (Box, Candle, Line).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarSegment.HighWhiskerCap">
            <summary>
            High whisker cap (Box, Candle, Line).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarSegment.LowWhisker">
            <summary>
            Low whisker (Box, Candle, Line).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarSegment.LowWhiskerCap">
            <summary>
            Low whisker cap (Box, Candle, Line).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarSegment.OpenWhisker">
            <summary>
            Open whisker (Line plot).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarSegment.CloseWhisker">
            <summary>
            Close whisker (Line Plot).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarSegment.CenterLine">
            <summary>
            Center line (Line plot).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarSegment.FullRange">
            <summary>
            Full range (Line plot).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarSegment.MedianLine">
            <summary>
            Median line (Box, Candle, Line).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.HiLoBarSegment.BarShading">
            <summary>
            Bar shading (Box, Candle).
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.AxisTypeConverter">
            <summary>
             AxisTypeConverter
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.AxisTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
             ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.MajorTickmarksX">
            <summary>
            Represents a chart MajorTickmark on the X-Axis.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.MajorTickmarksX.Copy">
            <summary>
            Create a copy of the chart element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.MajorTickmarksX.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the chart element to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.MajorTickmarksY">
            <summary>
            Represents a chart MajorTickmark on the Y-Axis.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.MajorTickmarksY.Copy">
            <summary>
            Creates a copy of the chart element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.MajorTickmarksY.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the chart element to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.MajorTickmarks">
            <summary>
            Represents a chart MajorTickmark.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MajorTickmarks.AutoTickmarkLayout">
            <summary>
            Gets or sets whether Major Tickmark layout is automatic.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MajorTickmarks.EffectiveLabelStyle">
            <summary>
            Gets a reference to the Tickmark Label's Effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MajorTickmarks.LabelAngle">
            <summary>
             Gets or sets the angle at which the Tickmark labels are displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MajorTickmarks.LabelSkip">
            <summary>
            Gets or sets the number of inter-labels to skip.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MajorTickmarks.LabelVisualStyle">
            <summary>
            Gets or sets the visual style for the Tickmark Labels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MajorTickmarks.MinLabelGap">
            <summary>
            Gets or sets the minimum gap between tickmark labels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MajorTickmarks.ShowLabels">
            <summary>
            Gets or sets whether Tickmark labels are shown.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MajorTickmarks.StaggerLabels">
            <summary>
            Gets or sets whether overlapping labels are staggered.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.MajorTickmarks.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the chart element to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.MinorTickmarksX">
            <summary>
            Represents a Minor tickmark on the X-Axis.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.MinorTickmarksX.Copy">
            <summary>
            Creates a copy of the chart element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.MinorTickmarksX.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the chart element to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.MinorTickmarksY">
            <summary>
            Represents a Minor tickmark on the Y-Axis.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.MinorTickmarksY.Copy">
            <summary>
            Creates a copy of the chart element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.MinorTickmarksY.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the chart element to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.MinorTickmarks">
            <summary>
            Represents a Minor tickmark.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.MinorTickmarks.TickmarkCount">
            <summary>
             Gets or sets the number of Tickmarks presented between Majortickmarks.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.MinorTickmarks.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the chart element to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartTickmarks.AxisOrientation">
            <summary>
             Gets the axis orientation (X/Y).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartTickmarks.EffectiveStyle">
            <summary>
            Gets a reference to the Tickmark's Effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartTickmarks.ChartTickmarkVisualStyle">
            <summary>
            Gets or sets the visual styles for the Tickmarks.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartTickmarks.InvalidateStyle">
            <summary>
            Invalidate the cached Style definition
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartTickmarks.CopyTo(DevComponents.DotNetBar.Charts.ChartVisualElement)">
            <summary>
            Copies the chart element to the given "copy".
            </summary>
            <param name="copy"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ChartXy">
            <summary>
            Represents an X/Y oriented chart.
            </summary>pi
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.AncillaryAxesX">
            <summary>
            Gets a reference to the collection of Ancillary X Axes (Axes that
            can be presented in addition to the default X Axis)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.AncillaryAxesY">
            <summary>
            Gets a reference to the collection of Ancillary Y Axes (Axes that
            can be presented in addition to the default Y Axis)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.AutoGenSeriesType">
            <summary>
             Gets or sets the default SeriesType assigned to auto-generated Series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.AxisX">
            <summary>
            Gets a reference to the default, primary X Axis.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.AxisY">
            <summary>
            Gets a reference to the default, primary Y Axis.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.BarFillRange">
            <summary>
            Gets or sets how series bars are filled by default (either according to
            each individual bar range, or the entire series range).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.BarLabelPosition">
            <summary>
            Gets or sets the default position of bar series labels (default is Center).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.BarOrigin">
            <summary>
            Gets or sets the bar 'origin'.  This value is used as the base, or 
            starting Value, from which each bar originates.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.BarOverlayEnabled">
            <summary>
            Gets or sets whether the intra-bar (or bar grouping) overlay
            is enabled (bars within a group are positoned overlayed on top of each other).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.BarShadingEnabled">
            <summary>
             Gets or sets whether Bar shading is enabled by
             default for Horizontal and Vertical Bar series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.BarShowAsHistogram">
            <summary>
             Gets or sets whether the bars will be shown as a Histogram.
             Note that this will only be honored for single series bar displays.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.BarSpacing">
            <summary>
            Gets or sets the intra-bar spacing (or spacing between bars
            within the same group). Value is taken as a fixed pixel size.
            Setting BarSpacing to 0 (zero) will disable the use of this
            property, and will enable the use of the set BarSpacingRatio value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.BarSpacingRatio">
            <summary>
            Gets or sets the intra-bar spacing ratio (bar spacing between
            multiple series bars associated with the same value. Default is .2).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.BarWidthRatio">
            <summary>
            Gets or sets the default ratio of bar width to bar 
            group spacing (defaults to 1 - bar width matches spacing).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.BubbleIntensityMode">
            <summary>
            Gets or sets the default mode used to determine series bubble intensities.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.BubbleSizeMode">
            <summary>
            Gets or sets the default mode used to calculate series bubble sizes.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.ChartLineAreaDisplayMode">
            <summary>
            Gets or sets the default Line 'Area' display mode.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.ChartLineDisplayMode">
            <summary>
            Gets or sets the default display mode for SeriesType.Line series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.ChartSeries">
            <summary>
            Gets a reference to the collection of Chart Series
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.ChartSeriesVisualStyle">
            <summary>
            Gets or sets the default visual style for each chart series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.ChartVisualStyle">
            <summary>
            Gets or sets the visual style for the Chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.ChartCrosshair">
            <summary>
            Gets a reference to the Crosshair element for the chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.ConvexHullDisplayMode">
            <summary>
            Gets or sets the default ConvexHull display mode.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.DataLabelOverlapMode">
            <summary>
            Gets or sets the mode for resolving overlapping series data labels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.DataLabelVisualStyle">
            <summary>
            Gets or sets the default visual style for the chart DataLabel's.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.EffectiveChartSeriesStyle">
            <summary>
            Gets a reference to the ChartSeries effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.EffectiveChartStyle">
            <summary>
            Gets a reference to the Chart's Effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.EffectiveDataLabelStyle">
            <summary>
            Gets a reference to the DataLabel Effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.MaxValueX">
            <summary>
            Gets the calculated maximum X value (composite value of all associated series).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.MaxValueY">
            <summary>
            Gets the calculated maximum Y value (composite value of all associated series).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.MinValueX">
            <summary>
            Gets the calculated minimum X value (composite value of all associated series).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.MinValueY">
            <summary>
            Gets the calculated minimum Y value (composite value of all associated series).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.NearestCrosshairPoint">
            <summary>
            Gets the last calculated CrosshairPoint nearest to the mouse cursor.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.PointLabelDisplayMode">
            <summary>
            Gets or sets the default display mode for the chart PointLabels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.ScrollBounds">
            <summary>
            Gets the Scrollable bounds of the chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.ScrollBoundsEx">
            <summary>
            Gets the Scrollable, extended bounds of the chart.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.StepLines">
            <summary>
            Gets or sets which 'Step lines' are displayed by default.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartXy.StepLineMode">
            <summary>
            Gets or sets the default mode (or order of rendered Step Lines)
            used to display "Step Lines" in the defined Line series.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartXy.GetLocalAdjustedPoint(System.Drawing.Point)">
            <summary>
            Gets the local, scroll adjusted point.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartXy.IsCrosshairSeriesPoint(DevComponents.DotNetBar.Charts.ChartSeries,System.Drawing.Point)">
            <summary>
            Gets whether the given Point is a Crosshair displayed point.
            </summary>
            <param name="series"></param>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartXy.GetPointFromValue(DevComponents.DotNetBar.Charts.ChartSeries,DevComponents.DotNetBar.Charts.SeriesPoint)">
            <summary>
            Gets the chart Point, given the provided SeriesPoint.
            </summary>
            <param name="series"></param>
            <param name="sp"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartXy.GetPointFromValue(DevComponents.DotNetBar.Charts.ChartSeries,System.Object,System.Object)">
            <summary>
            Gets the chart Point, given the X and Y data point values.
            </summary>
            <param name="series"></param>
            <param name="pointValueX"></param>
            <param name="pointValueY"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartXy.GetSeriesByName(System.String)">
            <summary>
            Gets the chart series with the given Name.
            </summary>
            <param name="name"></param>
            <returns>ChartSeries or null.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartXy.InvalidatePointLabels">
            <summary>
            Invalidate the cached PointLabels
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartXy.GetLegendData">
            <summary>
            Gets the list of chart legend data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartXy.GetHitArea(System.Drawing.Point)">
            <summary>
            Gets the hit area for the chart.
            </summary>
            <param name="pt"></param>
            <returns>ItemHitArea</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.CrosshairPoint">
            <summary>
            Defines a Crosshair Point
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.CrosshairPoint.ChartSeries">
            <summary>
            Gets the associated chart series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.CrosshairPoint.SeriesPoint">
            <summary>
            Gets the associated SeriesPoint.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.CrosshairPoint.ValueX">
            <summary>
            Gets the X-Value
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.CrosshairPoint.ValueY">
            <summary>
            Gets the associated ValueY.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarFillRange.NotSet">
            <summary>
            Not set (default is ByBar)
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarFillRange.ByBar">
            <summary>
            Bars are filled according to each individual
            bar's defined range.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BarFillRange.BySeries">
            <summary>
            Bars are filled according to the associated series
            minimum and maximum values.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BubbleIntensityMode.NotSet">
            <summary>
            Not set (default is None)
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BubbleIntensityMode.None">
            <summary>
            Bubble intensity not used.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BubbleIntensityMode.Alpha">
            <summary>
            Bubble intensity is expressed as an alpha value (0 - 255).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BubbleIntensityMode.Value">
            <summary>
            Bubble intensity is expressed as a data value (as is the size of the bubble).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BubbleSizeMode.NotSet">
            <summary>
            Not set (default is Area)
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BubbleSizeMode.Area">
            <summary>
            Bubble size is proportional to the bubble area.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.BubbleSizeMode.Diameter">
            <summary>
            Bubble size is proportional to the bubble diameter.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineDisplayMode.NotSet">
            <summary>
            Not set
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineDisplayMode.DisplayPoints">
            <summary>
            Display defined points on line
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineDisplayMode.DisplayLine">
            <summary>
            Display a straight line through defined series points
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineDisplayMode.DisplaySpline">
            <summary>
            Display a spline through defined series points
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineDisplayMode.DisplayStepLine">
            <summary>
            Display a Step Line through defined series points
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineDisplayMode.DisplayUnsorted">
            <summary>
            Points are displayed unsorted
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineDisplayMode.DisplayClosed">
            <summary>
            Start and end Points are connected.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineAreaDisplayMode.NotSet">
            <summary>
            Not set
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineAreaDisplayMode.None">
            <summary>
            Not set
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineAreaDisplayMode.DisplayLine">
            <summary>
            Display background area under series Line.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineAreaDisplayMode.DisplaySpline">
            <summary>
            Display background area under series Spline.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineAreaDisplayMode.DisplayStepLine">
            <summary>
            Display background area under series StepLine.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.ChartLineAreaDisplayMode.DisplayEmptyLine">
            <summary>
            Display background area under series EmptyLines.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.DataLabelOverlapMode">
            <summary>
            Specifies how overlapping Series Data Labels are resolved
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.DataLabelOverlapMode.NotSet">
            <summary>
            Not set (default is None). 
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.DataLabelOverlapMode.ShowOverlapping">
            <summary>
            Overlapping labels will be shown.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.DataLabelOverlapMode.HideOverlapping">
            <summary>
            Overlapping labels will be hidden.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.DataLabelOverlapMode.RotateAroundPoint">
            <summary>
            Overlapping labels will be rotated around point (when applicable).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SeriesDisplayOrder.NotSet">
            <summary>
            Not set (default is Forward).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SeriesDisplayOrder.Forward">
            <summary>
            Series are displayed in the normal collection order.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.SeriesDisplayOrder.Reverse">
            <summary>
            Series are displayed in the reverse collection order.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PointLabelGroup">
            <summary>
            Represents a PointLabel group.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PointLabelGroup.ChartSeries">
            <summary>
            Gets or sets the associated chart series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PointLabelGroup.PointLabels">
            <summary>
            Gets or sets the associated list of PointLabels.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.PointLabel">
            <summary>
            Represents a PointLabel (label associated with a data point in the chart).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PointLabel.Angle">
            <summary>
            Gets the angle used to display the point label 
            associated with the data point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PointLabel.BarLabelPosition">
            <summary>
            Gets or sets the position of bar series labels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PointLabel.DataLabelVisualStyle">
            <summary>
            Gets or sets the visual style for the data label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PointLabel.IsFixedSize">
            <summary>
            Gets or set whether the LabelSize is a fixed size.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PointLabel.Label">
            <summary>
            Gets or sets the label text
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PointLabel.LabelSize">
            <summary>
            Gets or sets the label size.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PointLabel.SeriesPoint">
            <summary>
            Gets the associated SeriesPoint.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.PointLabel.Visible">
            <summary>
            Gets or sets whether the label is visible.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointMarkerType.NotSet">
            <summary>
            Type not set.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointMarkerType.None">
            <summary>
            No Marker
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointMarkerType.Cross">
            <summary>
            Cross
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointMarkerType.Diamond">
            <summary>
            Diamond
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointMarkerType.Ellipse">
            <summary>
            Ellipse
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointMarkerType.Polygon">
            <summary>
            Polygon (Pentagon, Hexagon, etc)
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointMarkerType.Rectangle">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointMarkerType.Star">
            <summary>
            Star
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.PointMarkerType.Triangle">
            <summary>
            Triangle
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ReferenceLineCollection">
            <summary>
            Represents the collection of ReferenceLines.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ReferenceLineCollection.GetUniqueName">
            <summary>
            Gets a unique (unused) reference line Name.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ReferenceLine">
            <summary>
            Represents a reference line (a vertical or horizontal line on the chart
            that can be used to signify, or reference, a specific axis/chart value).
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ReferenceLine.#ctor">
            <summary>
            ReferenceLine
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ReferenceLine.#ctor(System.String)">
            <summary>
            ReferenceLine
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ReferenceLine.#ctor(System.String,System.Object)">
            <summary>
            ReferenceLine
            </summary>
            <param name="name"></param>
            <param name="axisValue"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ReferenceLine.#ctor(System.String,System.Object,System.String)">
            <summary>
            ReferenceLine
            </summary>
            <param name="name"></param>
            <param name="axisValue"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.AxisValue">
            <summary>
             Gets or sets the associated axis value of the reference line.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.DisplayLineOnTop">
            <summary>
            Gets or sets whether the reference line is displayed on top of chart data.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.DisplayTextOnTop">
            <summary>
            Gets or sets whether the reference text is displayed on top of chart data.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.EffectiveStyle">
            <summary>
            Gets a reference to the ReferenceLine's Effective (cached, composite) style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.EnableTextMarkup">
            <summary>
            Gets or sets whether text-markup support is enabled for the reference line text
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ReferenceLine.TextMarkupLinkClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when a text markup link is clicked
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.InvertVerticalText">
            <summary>
            Gets or sets whether vertical reference text is inverted.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.MaxLineCount">
            <summary>
            Gets or sets the maximum number of Text lines.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.PlainText">
            <summary>
            Gets text without text-markup (if text-markup is used in Text)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.ReferenceLineVisualStyle">
            <summary>
            Gets or sets the visual style for the ReferenceLine.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.Text">
            <summary>
             Gets or sets the ReferenceLine Text.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ReferenceLine.EnsureVisible">
            <summary>
            Ensures that the reference line is visible on screen.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ReferenceLine.EnsureVisible(System.Boolean)">
            <summary>
            Ensures that the reference line is visible on screen, and
            optionally centered (if possible).
            </summary>
            <param name="center"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ReferenceLine.InvalidateStyle">
            <summary>
            Invalidate the cached Style definition
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.ChartLegendItemVisualStyles">
            <summary>
            Gets or sets the visual styles for the Legend item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.CheckedInLegend">
            <summary>
            Gets or sets whether the ReferenceLine is checked in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.ShowCheckBoxInLegend">
            <summary>
            Gets or sets whether a checkbox for the ReferenceLine is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.ShowInLegend">
            <summary>
            Gets or sets whether the ReferenceLine is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.ShowInParentLegend">
            <summary>
            Gets or sets whether the Reference Line is shown in parent Legend(s).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.ShowMarkerInLegend">
            <summary>
            Gets or sets whether the ReferenceLine Marker is shown in the Legend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.LegendItem">
            <summary>
             Gets the item's parent LegendItem.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ReferenceLine.LegendText">
            <summary>
             Gets or sets the text to display in the legend.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPrint.#ctor">
            <summary>
            ChartPrint
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPrint.#ctor(DevComponents.DotNetBar.Charts.ChartControl)">
            <summary>
            ChartPrint
            </summary>
            <param name="chartControl">ChartControl</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ChartPrint.#ctor(DevComponents.DotNetBar.Charts.ChartControl,DevComponents.DotNetBar.Charts.FitToPageScale)">
            <summary>
            ChartPrint
            </summary>
            <param name="chartControl">ChartControl</param>
            <param name="fitToPageScale">FitToPageScale</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ChartPrint.FitToPageScale">
            <summary>
            Gets or sets how the chart is scaled
            to fit the page when printing.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.TextHelper">
            <summary>
            Provides helpers when working with text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.TextHelper.TextMarkupCultureSpecificPadding">
            <summary>
            Get or sets the text-markup padding for text
            measurement when running on Japanese version of Windows.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.TextHelper.MeasureText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Size,DevComponents.DotNetBar.Charts.eTextFormat)">
            <summary>
            MeasureText always adds about 1/2 em width of white space on the right,
            even when NoPadding is specified. It returns zero for an empty string.
            To get the precise string width, measure the width of a string containing a
            single period and subtract that from the width of our original string plus a period.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SerialElementCollection.AddStartElement(System.String)">
            <summary>
            Adds a 'Start' element to the collection.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SerialElementCollection.AddEndElement(System.String)">
            <summary>
            Adds an 'End' element to the collection.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SerialElementCollection.AddValue(System.Object)">
            <summary>
            Adds the given object element to the collection.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SerialElementCollection.AddValue(System.String,System.Object)">
            <summary>
            Adds the given value to the collection (surrounded
            by a 'Start' and 'End' element pair).
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SerialElementCollection.AddValue(System.String,System.Object,System.Object)">
            <summary>
            Adds the given value to the collection (surrounded
            by a 'Start' and 'End' element pair) - but only if the
            value is not equal to the given defaultValue.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SerialElementCollection.AddValue(System.String,System.Drawing.Image)">
            <summary>
            Adds the given value Image to the collection (surrounded
            by a 'Start' and 'End' element pair).
            </summary>
            <param name="name"></param>
            <param name="image"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SerialElementCollection.AddDataValue(System.String,System.Object)">
            <summary>
            Adds the given 'Data' value to the collection (surrounded
            by a 'Start' and 'End' element pair).
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SerialElementCollection.AddDataValue(System.String,System.Object,System.Object)">
            <summary>
            Adds the given 'Data' value to the collection (surrounded
            by a 'Start' and 'End' element pair) - but only if the
            value is not equal to the given defaultValue.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SerialElementCollection.AddElement(DevComponents.DotNetBar.Charts.SerialElementCollection)">
            <summary>
            Adds the given SerialElementCollection to the
            collection, if the given collection is non-empty.
            </summary>
            <param name="sec"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SerialElementCollection.AddElement(DevComponents.DotNetBar.Charts.Style.BaseVisualStyle)">
            <summary>
            Adds the given style to the collection, if
            it is not Empty.
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SerialElement.Name">
            <summary>
            Element name
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SerialElement.SerType">
            <summary>
            Element type.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SerialElement.Value">
            <summary>
            Element value
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SerialElement.Sec">
            <summary>
            Element sub-collection.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Primitives.ColorFactory.GetColor(System.String)">
            <summary>
            Converts hex string to Color type.
            </summary>
            <param name="rgbHex">Hexadecimal color representation.</param>
            <returns>Reference to Color object.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Primitives.ColorFactory.GetColor(System.Int32)">
            <summary>
            Converts int value to Color type.
            </summary>
            <param name="rgb">Color representation as 32-bit RGB value.</param>
            <returns>Reference to Color object.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Primitives.ColorFactory.GetColor(System.Int32,System.Int32)">
            <summary>
            Converts int values to Color type.
            </summary>
            <param name="alpha"></param>
            <param name="rgb">Color representation as 32-bit RGB value.</param>
            <returns>Reference to Color object.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Primitives.ColorFactory.GetColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts int values to Color type.
            </summary>
            <returns>Reference to Color object.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Primitives.ColorFactory.GetColor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts int values to Color type.
            </summary>
            <returns>Reference to Color object.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Primitives.BlankExpandableObjectConverter">
            <summary>
             BlankExpandableObjectConverter
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Primitives.BlankExpandableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
             ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.CustomCollection`1">
            <summary>
            Represents custom collection with INotifyPropertyChanged and INotifyCollectionChanged interface support.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.CustomCollection`1.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.#ctor">
            <summary>
            Creates new instance of object.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.#ctor(System.Int32)">
            <summary>
            Creates new instance of object.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Creates new instance of object.
            </summary>
            <param name="list">List to initialize collection with.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.Add(`0)">
            <summary>
            Add item to collection.
            </summary>
            <param name="item">Item to add.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add range of items to collection.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.Clear">
            <summary>
            Remove all items from collection.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.ClearItems">
            <summary>
            Remove all items from collection.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.Contains(`0)">
            <summary>
            Checks whether collection contains item.
            </summary>
            <param name="item">Item to look for.</param>
            <returns>true if item is in collection.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copy collection to array.
            </summary>
            <param name="array">Array to copy to.</param>
            <param name="index">Index to copy from.</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.CustomCollection`1.Count">
            <summary>
            Returns number of items in collection.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.GetEnumerator">
            <summary>
            Gets enumerator for collection.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.CustomCollection`1.Item(System.Int32)">
            <summary>
            Returns item at index.
            </summary>
            <param name="index">Index of item.</param>
            <returns>Item at index.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.IndexOf(`0)">
            <summary>
            Returns index of an item.
            </summary>
            <param name="item">Reference to item.</param>
            <returns>Index of item.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.Insert(System.Int32,`0)">
            <summary>
            Insert item at specified location.
            </summary>
            <param name="index">Index to insert item in.</param>
            <param name="item">Item to insert.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts item.
            </summary>
            <param name="index">Index to insert item at.</param>
            <param name="item">Reference to item.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.Remove(`0)">
            <summary>
            Removes item from collection.
            </summary>
            <param name="item">Item to remove.</param>
            <returns>true if item was removed.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.RemoveAt(System.Int32)">
            <summary>
            Remove item at specified location.
            </summary>
            <param name="index">Index of item to remove.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.RemoveItem(System.Int32)">
            <summary>
            Remove item at specified location.
            </summary>
            <param name="index">Index of item to remove.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of items from the collection.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Set item on location.
            </summary>
            <param name="index">Index</param>
            <param name="item">Item to assign.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.GetItemsDirect">
            <summary>
            Returns items directly without checks.
            </summary>
            <returns>List of items.</returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.CustomCollection`1.Items">
            <summary>
            Returns the IList interface for items in collection.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.OnCollectionReadAccess">
            <summary>
            Occurs when collection is read.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Occurs when collection property has changed.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.OnPropertyChanged(System.String)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.StyleChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Occurs when one of element visual styles has property changes.
            Default implementation invalidates visual appearance of element.
            </summary>
            <param name="sender">VisualStyle that changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.BlockReentrancy">
            <summary>
            Blocks the collection reentrancy.
            </summary>
            <returns>IDisposable to end reentrancy</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.CheckReentrancy">
            <summary>
            Checks whether call creates reentrancy.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.CustomCollection`1.CollectionChanged">
            <summary>
            Occurs when collection has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.CustomCollection`1.OnCollectionChanged(DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when collection has changed.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.INotifyCollectionChanged">
            <summary>
            Represents collection changed notification interface.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.INotifyCollectionChanged.CollectionChanged">
            <summary>
            Occurs when collection changed.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction">
            <summary>
            Defines change actions.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction.Add">
            <summary>
            Items were added.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction.Remove">
            <summary>
            Items were removed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction.Replace">
            <summary>
            Items were replaced.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction.Move">
            <summary>
            Items were moved.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction.Reset">
            <summary>
            Collection was reset.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventHandler">
            <summary>
            Defines delegate for collection notification events.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs">
            <summary>
            Defines collection change notification event arguments.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction)">
            <summary>
            Create new instance of object.
            </summary>
            <param name="action">Action</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction,System.Collections.IList)">
            <summary>
            Creates new instance of object.
            </summary>
            <param name="action">Specifies action.</param>
            <param name="changedItems">List of changed items.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction,System.Object)">
            <summary>
            Creates new instance of object.
            </summary>
            <param name="action">Specifies action.</param>
            <param name="changedItem">Item that was changed.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
            <summary>
            Creates new instance of object.
            </summary>
            <param name="action">Action.</param>
            <param name="newItems">New items in collection.</param>
            <param name="oldItems">Old items in collection.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
            <summary>
            Creates new instance of object.
            </summary>
            <param name="action">Action.</param>
            <param name="changedItems">List of changed items.</param>
            <param name="startingIndex">Starting index of change.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>
            Creates new instance of object.
            </summary>
            <param name="action">Action</param>
            <param name="changedItem">Changed item</param>
            <param name="index">Index of change</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction,System.Object,System.Object)">
            <summary>
            Creates new instance of object.
            </summary>
            <param name="action">Action</param>
            <param name="newItem">New item</param>
            <param name="oldItem">Old item</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
            <summary>
            Creates new instance of object.
            </summary>
            <param name="action">Action</param>
            <param name="newItems">New items.</param>
            <param name="oldItems">Removed items.</param>
            <param name="startingIndex">Starting index of change.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
            <summary>
            Creates new instance of object.
            </summary>
            <param name="action">Action</param>
            <param name="changedItems">Changed items</param>
            <param name="index">New index</param>
            <param name="oldIndex">Old index</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
            <summary>
            Creates new instance of object.
            </summary>
            <param name="action">Action</param>
            <param name="changedItem">Changed item</param>
            <param name="index">New index</param>
            <param name="oldIndex">Old index</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.#ctor(DevComponents.DotNetBar.Charts.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
            <summary>
            Creates new instance of object.
            </summary>
            <param name="action">Action.</param>
            <param name="newItem">New item</param>
            <param name="oldItem">Old item</param>
            <param name="index">New index</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.Action">
            <summary>
            Gets the type of the collection change action.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.NewItems">
            <summary>
            Gets list of newly added items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.NewStartingIndex">
            <summary>
            Gets new starting index.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.OldItems">
            <summary>
            Gets list of removed items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.NotifyCollectionChangedEventArgs.OldStartingIndex">
            <summary>
            Old starting index.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.CustomNamedCollection`1.Item(System.String)">
            <summary>
            Returns item at index.
            </summary>
            <param name="name">Name of item.</param>
            <returns>Item or null.</returns>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SymbolDef.Symbol">
            <summary>
            Indicates the displayed Symbol. Symbol setting takes precedence over Image setting.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SymbolDef.SymbolColor">
            <summary>
            Gets or sets the color of the Symbol.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SymbolDef.ShouldSerializeSymbolColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SymbolDef.ResetSymbolColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SymbolDef.SymbolRealized">
            <summary>
            Gets the realized symbol string.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SymbolDef.SymbolSet">
            <summary>
            Gets or sets the symbol set used to represent the Symbol.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SymbolDef.SymbolSize">
            <summary>
            Indicates the size of the symbol in points.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.SymbolDef.IsEmpty">
            <summary>
            Gets whether SymbolDef is Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SymbolDef.Copy">
            <summary>
            Creates an exact copy of the SymbolDef.
            </summary>
            <returns>Copy of the SymbolDef.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SymbolDef.CopyTo(DevComponents.DotNetBar.Charts.SymbolDef)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.SymbolDef.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SymbolDef.OnPropertyChanged(DevComponents.DotNetBar.Charts.Style.VisualPropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SymbolDef.OnPropertyChangedEx(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="s">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SymbolDef.OnPropertyChangedEx(System.String,DevComponents.DotNetBar.Charts.Style.VisualChangeType)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="s">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SymbolDef.StyleChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            StyleChanged
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SymbolDef.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.SymbolDefConvertor">
            <summary>
             SymbolDefConvertor
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SymbolDefConvertor.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.SymbolDefEditor">
            <summary>
             SymbolDefEditor
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SymbolDefEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            GetPaintValueSupported
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.SymbolDefEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            PaintValue
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ScrollBarLite.Scroll">
            <summary>
            Occurs when the Horizontal or Vertical scrollbar has been scrolled
            </summary>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.ScrollBarLite.ValueChanged">
            <summary>
            Occurs when the Value property is changed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ScrollBarLite.ScrollBarVisualStyles">
            <summary>
            Gets or sets the visual styles for the ScrollBar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ScrollBarLite.Visible">
            <summary>
            Get or sets whether the item is visible
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ScrollBarLite.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            InternalMouseMove
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ScrollBarLite.GetEffectiveStyle(DevComponents.DotNetBar.Charts.Style.StyleState)">
            <summary>
             Gets the EffectiveStyle for the ScrollBar. The effective
             style is a composite, cached style definition.
            </summary>
             <param name="state"></param>
             <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ScrollBarLite.GetEffectiveStyle">
            <summary>
             Gets the EffectiveStyle for the ScrollBar. The effective
             style is a composite, cached style definition.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ScrollBarLite.InvalidateStyle">
            <summary>
            Invalidate the cached Styles
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ScrollBarLite.InvalidateLayoutBounds(DevComponents.DotNetBar.Charts.ScrollBarLite)">
            <summary>
            Invalidates the layout bounds for the item container
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.ValueChangedEventArgs">
            <summary>
            ValueChangedEventArgs
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.ValueChangedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
             ValueChangedEventArgs
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ValueChangedEventArgs.OldValue">
            <summary>
            Gets the old scroll Value
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.ValueChangedEventArgs.NewValue">
            <summary>
            Gets the new scroll Value
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.AnnotationVisualStyles">
            <summary>
             AnnotationVisualStyles
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.AnnotationVisualStyles.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.AnnotationVisualStyle">
            <summary>
            Represents the visual style of a Legend element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.AnnotationVisualStyle.AnnotationShape">
            <summary>
            Gets or sets the shape of the annotation container.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.AnnotationVisualStyle.ConnectorShape">
            <summary>
            Gets or sets the shape of the annotation connector.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.AnnotationVisualStyle.TextAlignment">
            <summary>
            Gets or sets the alignment of the content within the cell
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.AnnotationVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.AnnotationVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.AnnotationVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.AnnotationVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.AnnotationVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.AnnotationVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.AxisStripeVisualStyle">
            <summary>
            Represents a AxisStripeVisualStyle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.AxisStripeVisualStyle.Background">
            <summary>
            Gets or sets the style background.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.AxisStripeVisualStyle.ShouldSerializeBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.AxisStripeVisualStyle.ResetBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.AxisStripeVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.AxisStripeVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.AxisStripeVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.AxisStripeVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.AxisStripeVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.AxisStripeVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.AxisStripeVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.BackColorBlend">
            <summary>
             BackColorBlend
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BackColorBlend.Colors">
            <summary>
            Gets or sets the ColorBlend Color array
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BackColorBlend.Positions">
            <summary>
            Gets or sets the ColorBlend Color Positions
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BackColorBlend.IsEmpty">
            <summary>
            IsEmpty
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BackColorBlend.Copy">
            <summary>
            Creates an exact copy of the BackColorBlend.
            </summary>
            <returns>Copy of the BackColorBlend.</returns>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.Style.BackColorBlend.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BackColorBlend.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BackColorBlend.OnPropertyChangedEx(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="s">Event arguments</param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.BackColorBlendConvertor">
            <summary>
            BackColorBlendConvertor
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BackColorBlendConvertor.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.Background">
            <summary>
            Represents background of visual style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Background.Empty">
            <summary>
             Empty
            </summary>
             <summary>
             Returns Empty instance of Background.
             </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.#ctor">
            <summary>
            Creates new instance of the object.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.#ctor(System.Drawing.Color)">
            <summary>
            Creates new instance of the object.
            </summary>
            <param name="color1">Start color.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates new instance of the object.
            </summary>
            <param name="color1">Start color.</param>
            <param name="color2">End color.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of the object.
            </summary>
            <param name="color1">Start color in hexadecimal representation like FFFFFF.</param>
            <param name="color2">End color in hexadecimal representation like FFFFFF.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates new instance of the object.
            </summary>
            <param name="color1">Start color in 32-bit RGB representation.</param>
            <param name="color2">End color in 32-bit RGB representation.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new instance of the object.
            </summary>
            <param name="color1">Start color in 32-bit RGB representation.</param>
            <param name="color2">End color in 32-bit RGB representation.</param>
            <param name="gradientAngle">Gradient angle.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.#ctor(System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            Creates new instance of the object.
            </summary>
            <param name="color1">Start color.</param>
            <param name="color2">End color.</param>
            <param name="gradientAngle">Gradient angle.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.#ctor(System.Drawing.Color,System.Drawing.Color,DevComponents.DotNetBar.Charts.Style.BackFillType)">
            <summary>
            Creates new instance of the object.
            </summary>
            <param name="color1">Start color.</param>
            <param name="color2">End color.</param>
            <param name="fillType">Gradient angle.</param>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Background.BackColorBlend">
            <summary>
            Gets or sets the BackColorBlend.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Background.BackFillType">
            <summary>
            Gets or sets the Gradient BackFillType
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Background.Color1">
            <summary>
            Gets or sets the start color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Background.Color2">
            <summary>
            Gets or sets the Ending Gradient Color
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Background.GradientAngle">
            <summary>
            Gets or sets the gradient angle (default is 90)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Background.HatchFillType">
            <summary>
            Gets or sets the Gradient BackFillType
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Background.RadialCenter">
            <summary>
            Gets or sets the Radial Gradient Center expressed as a percentage of the radius (from 0 to 1)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Background.IsSolidBrush">
            <summary>
            Gets whether the backcolor brush is a SolidBrush
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Background.IsEmpty">
            <summary>
            Gets whether Background is empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.IsEqualTo(DevComponents.DotNetBar.Charts.Style.Background)">
            <summary>
            Determines if the Background is equal to the given one
            </summary>
            <param name="background">Background to compare</param>
            <returns>true if equal</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.GetBrush(System.Drawing.Rectangle)">
            <summary>
             GetBrush
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.GetBrush(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Get the background brush
            </summary>
            <param name="r">Brush rectangle</param>
            <param name="alph">0-255 to override default</param>
            <returns>Brush</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.GetBrush(System.Drawing.Rectangle,System.Int32,DevComponents.DotNetBar.Charts.Style.BackFillType)">
            <summary>
            Get the background brush
            </summary>
            <param name="r">Brush rectangle</param>
            <param name="alph">0-255 to override default</param>
            <param name="fillType">BackFillType</param>
            <returns>Brush</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.Copy">
            <summary>
            Creates an exact copy of the background.
            </summary>
            <returns>Copy of the background.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.CopyTo(DevComponents.DotNetBar.Charts.Style.Background)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.Style.Background.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.OnPropertyChanged(DevComponents.DotNetBar.Charts.Style.VisualPropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.OnPropertyChangedEx(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="s">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.StyleChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            StyleChanged
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Background.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.BackFillType">
            <summary>
             BackFillType
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.BackFillType.None">
            <summary>
            No fill
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.BackFillType.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.BackFillType.Angle">
            <summary>
             Angle
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.BackFillType.Center">
            <summary>
             Center
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.BackFillType.HorizontalCenter">
            <summary>
             HorizontalCenter
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.BackFillType.VerticalCenter">
            <summary>
             VerticalCenter
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.BackFillType.ForwardDiagonal">
            <summary>
             ForwardDiagonal
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.BackFillType.BackwardDiagonal">
            <summary>
             BackwardDiagonal
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.BackFillType.ForwardDiagonalCenter">
            <summary>
             ForwardDiagonalCenter
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.BackFillType.BackwardDiagonalCenter">
            <summary>
             BackwardDiagonalCenter
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.BackFillType.Radial">
            <summary>
             Radial
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Horizontal">
            <summary>
             A pattern of horizontal lines.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Vertical">
            <summary>
            A pattern of vertical lines.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.ForwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper left to lower right..
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.BackwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper right to lower left.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Cross">
            <summary>
            Specifies horizontal and vertical lines that cross.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.DiagonalCross">
            <summary>
            A pattern of crisscross diagonal lines.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Percent05">
            <summary>
            Specifies a 5-percent hatch. The ratio of foreground color to background
            color is 5:100.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Percent10">
            <summary>
            Specifies a 10-percent hatch. The ratio of foreground color to background
            color is 10:100.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Percent20">
            <summary>
            Specifies a 20-percent hatch. The ratio of foreground color to background
            color is 20:100.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Percent25">
            <summary>
            Specifies a 25-percent hatch. The ratio of foreground color to background
            color is 25:100.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Percent30">
            <summary>
            Specifies a 30-percent hatch. The ratio of foreground color to background
            color is 30:100.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Percent40" -->
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Percent50">
            <summary>
            Specifies a 50-percent hatch. The ratio of foreground color to background
            color is 50:100.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Percent60">
            <summary>
            Specifies a 60-percent hatch. The ratio of foreground color to background
            color is 60:100.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Percent70" -->
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Percent75">
            <summary>
            Specifies a 75-percent hatch. The ratio of foreground color to background
            color is 75:100.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Percent80">
            <summary>
            Specifies a 80-percent hatch. The ratio of foreground color to background
            color is 80:100.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Percent90">
            <summary>
            Specifies a 90-percent hatch. The ratio of foreground color to background
            color is 90:100.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.LightDownwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the right from top points to bottom
            points and are spaced 50 percent closer together than System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal,
            but are not antialiased.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.LightUpwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the left from top points to bottom
            points and are spaced 50 percent closer together than System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal,
            but they are not antialiased.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.DarkDownwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the right from top points to bottom
            points, are spaced 50 percent closer together than, and are twice the width
            of System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal. This hatch pattern
            is not antialiased.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.DarkUpwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the left from top points to bottom
            points, are spaced 50 percent closer together than System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal,
            and are twice its width, but the lines are not antialiased.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.WideDownwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the right from top points to bottom
            points, have the same spacing as hatch style System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal,
            and are triple its width, but are not antialiased.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.WideUpwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the left from top points to bottom
            points, have the same spacing as hatch style System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal,
            and are triple its width, but are not antialiased.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.LightVertical">
            <summary>
            Specifies vertical lines that are spaced 50 percent closer together than
            System.Drawing.Drawing2D.HatchStyle.Vertical.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.LightHorizontal">
            <summary>
            Specifies horizontal lines that are spaced 50 percent closer together than
            System.Drawing.Drawing2D.HatchStyle.Horizontal.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.NarrowVertical">
            <summary>
            Specifies vertical lines that are spaced 75 percent closer together than
            hatch style System.Drawing.Drawing2D.HatchStyle.Vertical (or 25 percent closer
            together than System.Drawing.Drawing2D.HatchStyle.LightVertical).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.NarrowHorizontal">
            <summary>
            Specifies horizontal lines that are spaced 75 percent closer together than
            hatch style System.Drawing.Drawing2D.HatchStyle.Horizontal (or 25 percent
            closer together than System.Drawing.Drawing2D.HatchStyle.LightHorizontal).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.DarkVertical">
            <summary>
            Specifies vertical lines that are spaced 50 percent closer together than
            System.Drawing.Drawing2D.HatchStyle.Vertical and are twice its width.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.DarkHorizontal">
            <summary>
            Specifies horizontal lines that are spaced 50 percent closer together than
            System.Drawing.Drawing2D.HatchStyle.Horizontal and are twice the width of
            System.Drawing.Drawing2D.HatchStyle.Horizontal.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.DashedDownwardDiagonal">
            <summary>
            Specifies dashed diagonal lines, that slant to the right from top points
            to bottom points.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.DashedUpwardDiagonal">
            <summary>
            Specifies dashed diagonal lines, that slant to the left from top points to
            bottom points.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.DashedHorizontal">
            <summary>
            Specifies dashed horizontal lines.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.DashedVertical">
            <summary>
            Specifies dashed vertical lines.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.SmallConfetti">
            <summary>
            Specifies a hatch that has the appearance of confetti.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.LargeConfetti">
            <summary>
            Specifies a hatch that has the appearance of confetti, and is composed of
            larger pieces than System.Drawing.Drawing2D.HatchStyle.SmallConfetti.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.ZigZag">
            <summary>
            Specifies horizontal lines that are composed of zigzags.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Wave">
            <summary>
            Specifies horizontal lines that are composed of tildes.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.DiagonalBrick">
            <summary>
            Specifies a hatch that has the appearance of layered bricks that slant to
            the left from top points to bottom points.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.HorizontalBrick">
            <summary>
            Specifies a hatch that has the appearance of horizontally layered bricks.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Weave">
            <summary>
            Specifies a hatch that has the appearance of a woven material.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Plaid">
            <summary>
            Specifies a hatch that has the appearance of a plaid material.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Divot">
            <summary>
            Specifies a hatch that has the appearance of divots.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.DottedGrid">
            <summary>
            Specifies horizontal and vertical lines, each of which is composed of dots,
            that cross.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.DottedDiamond">
            <summary>
            Specifies forward diagonal and backward diagonal lines, each of which is
            composed of dots, that cross.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Shingle">
            <summary>
            Specifies a hatch that has the appearance of diagonally layered shingles
            that slant to the right from top points to bottom points.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Trellis">
            <summary>
            Specifies a hatch that has the appearance of a trellis.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.Sphere">
            <summary>
            Specifies a hatch that has the appearance of spheres laid adjacent to one
            another.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.SmallGrid">
            <summary>
            Specifies horizontal and vertical lines that cross and are spaced 50 percent
            closer together than hatch style System.Drawing.Drawing2D.HatchStyle.Cross.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.SmallCheckerBoard">
            <summary>
            Specifies a hatch that has the appearance of a checkerboard.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.LargeCheckerBoard">
            <summary>
            Specifies a hatch that has the appearance of a checkerboard with squares
            that are twice the size of System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.OutlinedDiamond">
            <summary>
            Specifies forward diagonal and backward diagonal lines that cross but are
            not antialiased.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.HatchFillType.SolidDiamond">
            <summary>
            Specifies a hatch that has the appearance of a checkerboard placed diagonally.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.BackgroundConvertor">
            <summary>
             BackgroundConvertor
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BackgroundConvertor.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.BackgroundEditor">
            <summary>
             BackgroundEditor
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BackgroundEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            GetPaintValueSupported
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BackgroundEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            PaintValue
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle">
            <summary>
            Represents the base visual style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle.Class">
            <summary>
            Gets or sets the class style belongs to. 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle.Tag">
            <summary>
            Gets or sets the user defined reference Tag.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.BaseVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.BaseVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle.OnPropertyChanged(System.String)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle.OnPropertyChangedEx(System.String,DevComponents.DotNetBar.Charts.Style.VisualChangeType)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
            <param name="changeType">invalidate</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle.UpdateChangeHandler(System.ComponentModel.INotifyPropertyChanged,System.ComponentModel.INotifyPropertyChanged)">
            <summary>
            UpdateChangeHandler
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BaseVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.StyleState">
            <summary>
             StyleState
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.StyleState.Default">
            <summary>
             Default
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.StyleState.MouseOver">
            <summary>
             MouseOver
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.StyleState.Selected">
            <summary>
             Selected
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.StyleType">
            <summary>
             StyleType
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.StyleType.NotSet">
            <summary>
             CellStyle is Not Set
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.StyleType.Default">
            <summary>
             Default
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.StyleType.MouseOver">
            <summary>
             MouseOver
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.StyleType.Selected">
            <summary>
             Selected
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.StyleType.SelectedMouseOver">
            <summary>
             SelectedMouseOver
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.Tbool">
            <summary>
             TBool - Three state boolean
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Tbool.NotSet">
            <summary>
             NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Tbool.True">
            <summary>
             True
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Tbool.False">
            <summary>
             False
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.VisualChangeType">
            <summary>
            Defines visual property change type.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.VisualChangeType.Recalc">
            <summary>
            Visual style has changed so Recalc is needed
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.VisualChangeType.Layout">
            <summary>
            Visual style has changed so layout is impacted, but not recalc
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.VisualChangeType.Render">
            <summary>
            Visual style has changed so visuals are impacted, but not layout
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.VisualPropertyChangedEventArgs">
            <summary>
            Represents visual property changed event arguments.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.VisualPropertyChangedEventArgs.ChangeType">
            <summary>
            Gets the change type.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualPropertyChangedEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the VisualPropertyChangedEventArgs class.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualPropertyChangedEventArgs.#ctor(System.String,DevComponents.DotNetBar.Charts.Style.VisualChangeType)">
            <summary>
            Initializes a new instance of the VisualPropertyChangedEventArgs class.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.VisualStylesConverter">
            <summary>
             VisualStylesConverter
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStylesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.BorderColor">
            <summary>
            Represents style border color.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderColor.Empty">
            <summary>
             Empty
            </summary>
             <summary>
             Returns Empty instance of BorderColor.
             </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the BorderColor object.
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the BorderColor object.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.#ctor">
            <summary>
            Initializes a new instance of the BorderColor object.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderColor.All">
            <summary>
            Gets or sets the color of all borders.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderColor.Bottom">
            <summary>
            Gets or sets the color of the bottom border
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.ShouldSerializeBottom">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.ResetBottom">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderColor.Left">
            <summary>
            Gets or sets the color of the left border
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.ShouldSerializeLeft">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.ResetLeft">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderColor.Right">
            <summary>
            Gets or sets the color of the right border
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.ShouldSerializeRight">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.ResetRight">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderColor.Top">
            <summary>
            Gets or sets the color of the top border
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.ShouldSerializeTop">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.ResetTop">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.op_Equality(DevComponents.DotNetBar.Charts.Style.BorderColor,DevComponents.DotNetBar.Charts.Style.BorderColor)">
            <summary>
            Compares two instances.
            </summary>
            <param name="t1">Instance 1</param>
            <param name="t2">Instance 2</param>
            <returns>true if same</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.op_Inequality(DevComponents.DotNetBar.Charts.Style.BorderColor,DevComponents.DotNetBar.Charts.Style.BorderColor)">
            <summary>
            Compares two instances.
            </summary>
            <param name="t1">Instance 1</param>
            <param name="t2">Instance 2</param>
            <returns>true if different.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.GetHashCode">
            <summary>
            Returns hash-code for object.
            </summary>
            <returns>Hash-code value.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.Equals(System.Object)">
            <summary>
            Compares object to this instance.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>true if same.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.Equals(DevComponents.DotNetBar.Charts.Style.BorderColor)">
            <summary>
            Compares object to this instance.
            </summary>
            <param name="borderColor">Border color</param>
            <returns>true if same</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.Copy">
            <summary>
            Creates an exact copy of the BorderColor.
            </summary>
            <returns>Copy of the BorderColor.</returns>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.Style.BorderColor.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.OnPropertyChanged(System.String)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColor.OnVisualPropertyChanged(System.String)">
            <summary>
            Default PropertyChanged processing
            </summary>
            <param name="s"></param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.BorderColorConverter">
            <summary>
             BorderColorConverter
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            CanConvertTo
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            CanConvertFrom
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            ConvertFrom
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColorConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            GetCreateInstanceSupported
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderColorConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            CreateInstance
            </summary>
            <param name="context"></param>
            <param name="propertyValues"></param>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.BorderPattern">
            <summary>
            Defines Thickness class.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderPattern.Empty">
            <summary>
            Returns Empty instance of BorderPattern.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderPattern.#ctor(DevComponents.DotNetBar.Charts.Style.LinePattern,DevComponents.DotNetBar.Charts.Style.LinePattern,DevComponents.DotNetBar.Charts.Style.LinePattern,DevComponents.DotNetBar.Charts.Style.LinePattern)">
            <summary>
            Creates new instance of the object.
            </summary>
            <param name="left">Left BorderPatternStyle.</param>
            <param name="top">Top BorderPatternStyle.</param>
            <param name="right">Right BorderPatternStyle.</param>
            <param name="bottom">Bottom BorderPatternStyle.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderPattern.#ctor(DevComponents.DotNetBar.Charts.Style.LinePattern)">
            <summary>
            Creates new instance of the object.
            </summary>
            <param name="all">Specifies uniform Thickness.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderPattern.#ctor">
            <summary>
             Creates new instance of the object.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderPattern.All">
            <summary>
            Gets or sets the thickness of all sides.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderPattern.Bottom">
            <summary>
            Gets or sets the bottom Border Pattern
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderPattern.Left">
            <summary>
            Gets or sets the left Border Pattern
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderPattern.Right">
            <summary>
            Gets or sets the Right Border Pattern
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderPattern.Top">
            <summary>
            Gets or sets the Top Border Pattern
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.BorderPattern.IsEmpty">
            <summary>
            Gets whether the item is empty
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderPattern.Equals(System.Object)">
            <summary>
            Gets whether two instances are equal.
            </summary>
            <param name="obj">Instance to compare to.</param>
            <returns>true if equal otherwise false.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderPattern.Equals(DevComponents.DotNetBar.Charts.Style.BorderPattern)">
            <summary>
            Gets whether two instances are equal.
            </summary>
            <param name="borderPattern">Instance to compare to</param>
            <returns>true if equal otherwise false</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderPattern.GetHashCode">
            <summary>
            Returns hash-code.
            </summary>
            <returns>hash-code</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderPattern.op_Equality(DevComponents.DotNetBar.Charts.Style.BorderPattern,DevComponents.DotNetBar.Charts.Style.BorderPattern)">
            <summary>
            Implements == operator.
            </summary>
            <param name="t1">Object 1</param>
            <param name="t2">Object 2</param>
            <returns>true if equals</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderPattern.op_Inequality(DevComponents.DotNetBar.Charts.Style.BorderPattern,DevComponents.DotNetBar.Charts.Style.BorderPattern)">
            <summary>
            Implements != operator
            </summary>
            <param name="t1">Object 1</param>
            <param name="t2">Object 2</param>
            <returns>true if different</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderPattern.ApplyPattern(DevComponents.DotNetBar.Charts.Style.BorderPattern)">
            <summary>
            Applies the pattern to instance of this pattern.
            </summary>
            <param name="pattern">Pattern to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderPattern.Copy">
            <summary>
            Creates an exact copy of the BorderPattern.
            </summary>
            <returns>Copy of the BorderPattern.</returns>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.Style.BorderPattern.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.BorderPattern.OnPropertyChanged(DevComponents.DotNetBar.Charts.Style.VisualPropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.LinePattern">
            <summary>
             LinePattern
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.LinePattern.None">
            <summary>
             None
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.LinePattern.NotSet">
            <summary>
             NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.LinePattern.Solid">
            <summary>
             Solid
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.LinePattern.Dash">
            <summary>
             Dash
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.LinePattern.Dot">
            <summary>
             Dot
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.LinePattern.DashDot">
            <summary>
             DashDot
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.LinePattern.DashDotDot">
            <summary>
             DashDotDot
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartLineCap">
            <summary>
             ChartLineCap
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ChartLineCap.NotSet">
            <summary>
             NotSet
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyles">
            <summary>
             ChartAxisVisualStyles
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyles.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle">
            <summary>
            Represents the visual style of a ChartAxis element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle.AlternateBackground">
            <summary>
            Gets or sets the alternate, or interlaced, background.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle.ShouldSerializeAlternateBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle.ResetAlternateBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle.AxisColor">
            <summary>
             Gets or sets the Axis line Color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle.ShouldSerializeAxisColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle.ResetAxisColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartAxisVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle">
            <summary>
            Represents the visual style of a Bar Series
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.AlternateBackground">
            <summary>
            Gets or sets the background for the bar, when it
            extends to the alternate side of the bar origin.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.ShouldSerializeAlternateBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.ResetAlternateBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.AlternateBorder">
            <summary>
            Gets or sets the border style for the bar, when it
            extends to the alternate side of the bar origin.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.Background">
            <summary>
            Gets or sets the background for the bar.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.ShouldSerializeBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.ResetBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.Border">
            <summary>
            Gets or sets the border style for the bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartBarVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartHiLoBarVisualStyle">
            <summary>
            Represents the visual style of an Hilo Bar Series (OHLC)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartHiLoBarVisualStyle.AlternateSegmentStyle">
            <summary>
            Gets or sets the Alternate Style for the Ohlc bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartHiLoBarVisualStyle.DefaultSegmentStyle">
            <summary>
            Gets or sets the Default Style for the Ohlc bar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartHiLoBarVisualStyle.ShowWhiskerCaps">
            <summary>
            Gets or sets whether Box/Candle whisker caps are displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartHiLoBarVisualStyle.UseAlternateSegmentStyle">
            <summary>
            Gets or sets whether Box/Candle whisker caps are displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartHiLoBarVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartHiLoBarVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartHiLoBarVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartHiLoBarVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartHiLoBarVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartHiLoBarVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartHiLoBarVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyles">
            <summary>
             ChartLegendVisualStyles
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyles.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle">
            <summary>
            Represents the visual style of a Legend item element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.Alignment">
            <summary>
            Gets or sets the alignment of the text
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.AllowWrap">
            <summary>
            Gets or sets whether text wrapping is permitted
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.Background">
            <summary>
            Gets or sets the style background.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ShouldSerializeBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ResetBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.CheckBoxBackground">
            <summary>
            Gets or sets the CheckBox background.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ShouldSerializeCheckBoxBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ResetCheckBoxBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.CheckBoxBorderColor">
            <summary>
            Gets or sets the CheckBox border color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ShouldSerializeCheckBoxBorderColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ResetCheckBoxBorderColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.CheckBoxCheckColor">
            <summary>
            Gets or sets the CheckBox check color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ShouldSerializeCheckBoxCheckColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ResetCheckBoxCheckColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.DisabledMarkerBackground">
            <summary>
            Gets or sets the Disabled Marker Background style.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ShouldSerializeDisabledMarkerBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ResetDisabledMarkerBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.DisabledTextColor">
            <summary>
            Gets or sets the Disabled TextColor
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ShouldSerializeDisabledTextColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ResetDisabledTextColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.Font">
            <summary>
            Gets or sets the style Font
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.MarkerVisualStyle">
            <summary>
            Gets or sets the visual styles for the Legend Marker.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.MaxLineCount">
            <summary>
            Gets or sets the maximum number of lines for the item text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.TextColor">
            <summary>
            Gets or sets the Text color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ShouldSerializeTextColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ResetTextColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartLegendItemVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyles">
            <summary>
             ChartLegendVisualStyles
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyles.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle">
            <summary>
            Represents the visual style of a Legend element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle.EquallySpacedItems">
            <summary>
            Gets or sets whether the items in the Legend are equally spaced.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle.HorizontalSpacing">
            <summary>
            Gets or sets the horizontal spacing of the legend items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle.VerticalSpacing">
            <summary>
            Gets or sets the vertical spacing of the legend items.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle.Alignment">
            <summary>
            Gets or sets the alignment of the text
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle.AllowWrap">
            <summary>
            Gets or sets whether text wrapping is permitted
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle.Font">
            <summary>
            Gets or sets the style Font
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle.TextColor">
            <summary>
            Gets or sets the Text color
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartLegendVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle">
            <summary>
            Represents the visual style of a Chart Line
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle.LineColor">
            <summary>
            Gets or sets the Line color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle.ShouldSerializeLineColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle.ResetLineColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle.LinePattern">
            <summary>
            Gets or sets the LinePattern.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle.LineWidth">
            <summary>
            Gets or sets the line width.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartLineVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartCapLineVisualStyle">
            <summary>
            Represents the visual style of a Chart CapLine
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartCapLineVisualStyle.EndCap">
            <summary>
            Gets or sets the line EndCap.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartCapLineVisualStyle.StartCap">
            <summary>
            Gets or sets the line StartCap.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartCapLineVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartCapLineVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartCapLineVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartCapLineVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartCapLineVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartCapLineVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartCapLineVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartPanelVisualStyle">
            <summary>
            Represents the visual style of a ChartPanel
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartPanelVisualStyle.DividerLineX">
            <summary>
            Gets or sets the visual style of the horizontal DividerLine (when ChartMatrix.DividerLines is enabled).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartPanelVisualStyle.DividerLineY">
            <summary>
            Gets or sets the visual style of the vertical DividerLine (when ChartMatrix.DividerLines is enabled).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartPanelVisualStyle.HScrollBarVisualStyles">
            <summary>
            Gets or sets the visual styles to be used for Horizontal ScrollBar elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartPanelVisualStyle.VScrollBarVisualStyles">
            <summary>
            Gets or sets the visual styles to be used for Vertical ScrollBar elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartPanelVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartPanelVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartPanelVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartPanelVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartPanelVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartPanelVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle">
            <summary>
            Represents the visual style of a ChartSeries
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.BarVisualStyle">
            <summary>
            Gets or sets the visual style for series Bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ConvexHullBackground">
            <summary>
            Gets or sets the ConvexHull background.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ShouldSerializeConvexHullBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ResetConvexHullBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ConvexHullLineStyle">
            <summary>
            Gets or sets the visual style for the ConvexHull Lines.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.EmptyAreaBackground">
            <summary>
            Gets or sets the Empty Area Background.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ShouldSerializeEmptyAreaBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ResetEmptyAreaBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.EmptyStyle">
            <summary>
            Gets or sets the visual styles for series EmptyValue Lines.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.HiLoBarVisualStyle">
            <summary>
            Gets or sets the visual style for series Hilo Bars.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ItemColor">
            <summary>
            Gets or sets the default color to use for the item.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ShouldSerializeItemColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ResetItemColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.LineAreaBackground">
            <summary>
            Gets or sets the Line Area Background (area under the series 'Line').
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ShouldSerializeLineAreaBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ResetLineAreaBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.LineStyle">
            <summary>
            Gets or sets the visual styles for series Lines.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.MarkerEmptyVisualStyle">
            <summary>
            Gets or sets the visual styles for the Empty PointMarker.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.MarkerHighlightVisualStyle">
            <summary>
            Gets or sets the visual styles for the PointMarker Highlight.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.MarkerVisualStyle">
            <summary>
            Gets or sets the visual styles for the PointMarker.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.SliceVisualStyle">
            <summary>
            Gets or sets the default visual style for series Pie Slices.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.SplineAreaBackground">
            <summary>
            Gets or sets the Spline Area Background (area under the series 'Spline').
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ShouldSerializeSplineAreaBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ResetSplineAreaBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.SplineStyle">
            <summary>
            Gets or sets the visual styles for series Splines.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.StepLineAreaBackground">
            <summary>
            Gets or sets the StepLine Area Background (area under the series 'StepLines').
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ShouldSerializeStepLineAreaBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ResetStepLineAreaBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.StepLineStyle">
            <summary>
            Gets or sets the visual styles for series Step Lines.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.StepLineAltStyle">
            <summary>
            Gets or sets the visual styles for 'Alternate' series Step Lines.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSeriesVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyles">
            <summary>
             ChartSliceVisualStyles
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyles.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle">
            <summary>
            Represents the visual style of a series Slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.Background">
            <summary>
            Gets or sets the background style for the slice.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ShouldSerializeBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ResetBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ExtentFillRange">
            <summary>
             Gets or sets the range area used to fill the slice extent 
             background.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.Border">
            <summary>
            Gets or sets the visual style for the slice border.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.EnableShading">
            <summary>
             Gets or sets whether shading is applie to the pie slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.Image">
            <summary>
            Gets or sets the slice Image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ImageAngleOffset">
            <summary>
            Gets or sets the display angle offset for the slice image. By default, the image is
            centered in the pie slice (mid sweepAngle), but can be offset either
            toward the end angle (positive offset) or toward the start angle
            (negative offset). The offset can either be a percentage (if value is
            between 0 and 1) or pixel amount (if value > 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ImageAutoRotate">
            <summary>
            Gets or sets whether the Image (or Symbol) is auto 
            rotated to match the angle of the slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ImageCropMode">
            <summary>
            Gets or sets how the slice image will be displayed when
            the image needs to be cropped due to 'angular' size constraints 
            (ie. will not fully fit within the slice angular bounds).
            Default is ClipImage.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ImageIndex">
            <summary>
            Gets or sets the slice image index (used with the ImageList property).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ImageInnerRadiusAnchor">
            <summary>
            Gets or sets the inner radius anchor for the slice image (ie.
            the inner limiting radius - used with the ImageRadiusOffset property).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ImageList">
            <summary>
            Gets or sets the slice ImageList.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ImageOuterRadiusAnchor">
            <summary>
            Gets or sets the Outer radius anchor for the slice image (ie.
            the Outer limiting radius - used with the ImageRadiusOffset percentage).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ImageOverlay">
            <summary>
            Gets or sets how to overlay the image with respect to the slice text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ImagePadding">
            <summary>
            Gets or sets the spacing between content and edges of the Image
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ShouldSerializeImagePadding">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ResetImagePadding">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ImageRadiusOffset">
            <summary>
            Gets or sets the display radius for the slice image. The image can be offset
            toward the outer radius (positive offset) or toward the inner radius
            (negative offset). The offset can either be a percentage (if value is
            between 0 and 1) or pixel amount (if value > 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ImageRotation">
            <summary>
            Gets or sets the amount to rotate the image, specified in degrees. 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ImageScale">
            <summary>
            Gets or sets the 'scale' factor for the image/symbol. This property informs the
            chart to scale the image (or symbol) based upon the available space at its offset
            position in the slice - the image is moved in or out of the slice, the image will
            grow of shrink accordingly.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ExtentAverageRefLineStyle">
            <summary>
            Gets or sets the visual style for the slice Extent Average
            ReferenceLine style (see SliceVisualLayout.ReferenceLineDisplayMode).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ExtentMaxRefLineStyle">
            <summary>
            Gets or sets the visual style for the slice Extent Maximum
            ReferenceLine style (see SliceVisualLayout.ReferenceLineDisplayMode).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ExtentMinRefLineStyle">
            <summary>
            Gets or sets the visual style for the slice Extent Minimum
            ReferenceLine style (see SliceVisualLayout.ReferenceLineDisplayMode).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ExtentOuterRefLineStyle">
            <summary>
            Gets or sets the visual style for the slice Extent Outer
            ReferenceLine style (see SliceVisualLayout.ReferenceLineDisplayMode).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.SliceInnerLabelStyle">
            <summary>
            Gets or sets the visual style for the inner slice Label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.SliceOuterLabelStyle">
            <summary>
            Gets or sets the visual style for the outer slice Label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.SymbolDef">
            <summary>
            Gets or sets the element Symbol Definition. Note that Symbol definition
            takes precedence over Image definition. Also note that the supporting Image
            properties (such as ImageCrpoMode, ImageRadiusOffset, etc) apply to a set
            Symbol as well as to a set Image.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ShouldSerializeSymbolDef">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ResetSymbolDef">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.WhiteSpaceBackground">
            <summary>
            Gets or sets the WhiteSpace Background (area beyond the slice extent area).
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ShouldSerializeWhiteSpaceBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ResetWhiteSpaceBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.WhiteSpaceBorder">
            <summary>
            Gets or sets the visual style for the slice WhiteSpace Border.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartSliceVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.CenterLabelVisibility">
            <summary>
            Defines the visibility of the CenterLabel
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.CenterLabelVisibility.Always">
            <summary>
            Always shown.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.CenterLabelVisibility.Never">
            <summary>
            Never showm.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.CenterLabelVisibility.MouseOver">
            <summary>
            Only shown on MouseOver.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.SliceLabelCropMode">
            <summary>
            Defines the label crop/clip mode.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelCropMode.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelCropMode.NoAction">
            <summary>
            No clipping or hiding performed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelCropMode.Clip">
            <summary>
            Labels that do not fully fit will be clipped.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelCropMode.Hide">
            <summary>
            Labels that do not fully fit will be hidden.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.SliceLabelDisplayMode">
            <summary>
            Defines the slice label display mode.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelDisplayMode.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelDisplayMode.None">
            <summary>
            No labels displayed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelDisplayMode.Inner">
            <summary>
            Inner labels only displayed (those inside the pie slice).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelDisplayMode.Outer">
            <summary>
            Outer labels only displayed (those outside the pie slice).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelDisplayMode.InnerAndOuter">
            <summary>
            Both inner and outer labels displayed.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelDisplayMode.InnerXorOuter">
            <summary>
            Either the inner or the outer label will be displayed, but not
            both (outer label will be displayed only when the inner label
            cannot be displayed).
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.SliceLabelOrientation">
            <summary>
            Defines the slice inner label orientation.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelOrientation.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelOrientation.Adaptive">
            <summary>
            The text is perpendicular to the center line of the
            slice, and is 'adapted' to fit the outer arc of the slice.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelOrientation.Custom">
            <summary>
            The label layout is gotten from the set 'Custom' layout
            properties for the slice (include location, size, orientation, etc).
            This option give the most control over the presentation of the label.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelOrientation.Horizontal">
            <summary>
            Labels are presented horizontally, within the bounds of the slice.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelOrientation.Parallel">
            <summary>
            Labels are presented parallel to the slice center line, within
            the bounds of the slice.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelOrientation.Perpendicular">
            <summary>
            Labels are presented perpendicular to the slice center line, within
            the bounds of the slice.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.SliceLabelVisibility">
            <summary>
            Defines the visibility of the slice labels.  These values
            can be combined to define a more targeted visibility.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelVisibility.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelVisibility.Always">
            <summary>
            Labels are always visible.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelVisibility.Never">
            <summary>
            Labels are never visible.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelVisibility.SelectionModeMouseOver">
            <summary>
            Labels will be shown according to the SelectionMode
            setting in effect (ie. Ring, Slice, Pie, etc).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelVisibility.SliceDetach">
            <summary>
            Labels are shown for Detached slices.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelVisibility.SliceMouseOver">
            <summary>
            Labels are shown on MouseOver.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelVisibility.SliceSelect">
            <summary>
            Labels are shown for selected slices.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle">
            <summary>
            Represents the visual style of a Chart Ticmark element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle.TickmarkAlignment">
            <summary>
            Gets or sets the Tickmark alignment.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle.TickmarkColor">
            <summary>
             Gets or sets the Tickmark Color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle.ShouldSerializeTickmarkColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle.ResetTickmarkColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle.TickmarkLength">
            <summary>
            Gets or sets the Tickmark length.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle.TickmarkThickness">
            <summary>
            Gets or sets the Tickmark Thickness.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartTickmarkVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartTitleVisualStyle">
            <summary>
            Represents the visual style of an element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartTitleVisualStyle.MaxLineCount">
            <summary>
            Gets or sets the maximum number of Text lines.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartTitleVisualStyle.Stretch">
            <summary>
            Gets or sets whether text is 'stretched' to consume entire XyAlignment area.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartTitleVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartTitleVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartTitleVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartTitleVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartTitleVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartTitleVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartTitleVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.RotateDegrees">
            <summary>
             Specifies the degrees to rotate the element.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.RotateDegrees.NotSet">
            <summary>
             Not set
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.RotateDegrees.None">
            <summary>
             None
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.RotateDegrees.Auto">
            <summary>
             Rotate as needed
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.RotateDegrees.Rotate90">
            <summary>
             Rotate 90 degrees
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.RotateDegrees.Rotate180">
            <summary>
             Rotate 180 degrees
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.RotateDegrees.Rotate270">
            <summary>
             Rotate 270 degrees
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartXyVisualStyle">
            <summary>
            Represents the visual style of an XY Chart element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartXyVisualStyle.AutoExpandIntraSeriesGap">
            <summary>
            Gets or sets whether to auto adjust the IntraSeriesGap when space permits.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartXyVisualStyle.HScrollBarVisualStyles">
            <summary>
            Gets or sets the visual styles to be used for Horizontal ScrollBar elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartXyVisualStyle.InterSeriesGap">
            <summary>
            Gets or sets the pixel gap between grouped, qualitative series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartXyVisualStyle.IntraSeriesGap">
            <summary>
            Gets or sets the pixel gap between each series in a set of grouped, qualitative series.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartXyVisualStyle.VScrollBarVisualStyles">
            <summary>
            Gets or sets the visual styles to be used for Vertical ScrollBar elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ChartXyVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartXyVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ChartXyVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartXyVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ChartXyVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ChartXyVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle">
            <summary>
            Represents the visual style of a Chart Line
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle.AngleStep">
            <summary>
             Gets or sets the angle step value when rotating conflicting labels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle.DefaultAngle">
            <summary>
             Gets or sets the default line angle (-1 denotes 'auto').
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle.LengthStep">
            <summary>
             Gets or sets the angle step value when rotating conflicting labels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle.MaxLength">
            <summary>
             Gets or sets the maximum connector line length.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle.MinLength">
            <summary>
             Gets or sets the minimum connector line length.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle.Origin">
            <summary>
            Gets or sets the line connector origin.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ConnectorLineVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyles">
            <summary>
             ContainerVisualStyles
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyles.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle">
            <summary>
            Represents the visual style of a container item.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.Alignment">
            <summary>
            Gets or sets the alignment of the text
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.AllowWrap">
            <summary>
            Gets or sets whether text wrapping is permitted
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.DropShadow">
            <summary>
            Gets or sets the visual style for the DropShadow.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.EnableImageScroll">
            <summary>
            Gets or sets whether the image scrolls or is fixed with the container content.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.Image">
            <summary>
            Gets or sets the element Image
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.ImageAlignment">
            <summary>
            Gets or sets the alignment of the Image
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.ImageIndex">
            <summary>
            Gets or sets the image index
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.ImageList">
            <summary>
            Gets or sets the ImageList.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.ImageOverlay">
            <summary>
            Gets or sets how to overlay the cell image with respect to cell content
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.ImagePadding">
            <summary>
            Gets or sets the spacing between content and edges of the Image
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.ShouldSerializeImagePadding">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.ResetImagePadding">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.ImageSizeMode">
            <summary>
            Gets or sets the 'mode' used to display the image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.SymbolDef">
            <summary>
            Gets or sets the element Symbol Definition. Note that Symbol definition
            takes precedence over Image definition. Also note that the supporting Image
            properties (such as ImageAlignment, ImageOverlay, etc) apply to a set
            Symbol as well as to a set Image.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.ShouldSerializeSymbolDef">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.ResetSymbolDef">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ContainerVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ImageOverlay">
            <summary>
             How to Overlay the Image with
             respect to the content
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ImageOverlay.NotSet">
            <summary>
             Not set
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ImageOverlay.None">
            <summary>
             None - Overlaying of the image will be avioded (when possible)
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ImageOverlay.Top">
            <summary>
             Top
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ImageOverlay.Middle">
            <summary>
             Middle
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ImageOverlay.Bottom">
            <summary>
             Bottom
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ImageSizeMode">
            <summary>
             ImageSizeMode
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ImageSizeMode.NotSet">
            <summary>
             Not set
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ImageSizeMode.Normal">
            <summary>
             The image is placed according to the specified 
             Alignment, and is clipped if needed to fit.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ImageSizeMode.Stretch">
            <summary>
             The image is stretched or shrunk to fit.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ImageSizeMode.Tile">
            <summary>
             The image is tiled to fill the area.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ImageSizeMode.Zoom">
            <summary>
             The size of the image is increased or decreased to fit the
             area, maintaining the image size ratio.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.CrosshairValueVisualStyle">
            <summary>
            Represents the visual style of an element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairValueVisualStyle.DropShadow">
            <summary>
            Gets or sets the visual style for the DropShadow.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairValueVisualStyle.TextFormat">
            <summary>
            Gets or sets the Text Format specifier
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairValueVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairValueVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.CrosshairValueVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairValueVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairValueVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.CrosshairValueVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairValueVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle">
            <summary>
            Represents the visual style of an element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.Background">
            <summary>
            Gets or sets the style background.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ShouldSerializeBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ResetBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.BorderColor">
            <summary>
            Gets or sets the style border color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ShouldSerializeBorderColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ResetBorderColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.BorderPattern">
            <summary>
            Gets or sets the style border pattern (Solid, Dash, ...)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.BorderThickness">
            <summary>
            Gets or sets the style border thickness.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.GroupHeaderFont">
            <summary>
            Gets or sets the GroupHeader Font
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.GroupHeaderTextColor">
            <summary>
            Gets or sets the Color of the GroupHeaderText.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ShouldSerializeGroupHeaderTextColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ResetGroupHeaderTextColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.Font">
            <summary>
            Gets or sets the Font
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.Margin">
            <summary>
            Gets or sets the spacing between the border and outside content.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ShouldSerializeMargin">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ResetMargin">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.Padding">
            <summary>
            Gets or sets spacing between the content and edges of the element.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ShouldSerializePadding">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ResetPadding">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.TextColor">
            <summary>
            Gets or sets the Text color
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ShouldSerializeTextColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ResetTextColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ValueXLineStyle">
            <summary>
            Gets or sets the visual style for the X Value Line.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ValueYLineStyle">
            <summary>
            Gets or sets the visual style for the Y Value Line.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.CrosshairVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle">
            <summary>
            Represents a SeriesLabelVisualStyle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.Background">
            <summary>
            Gets or sets the style background.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ShouldSerializeBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ResetBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.BorderColor">
            <summary>
            Gets or sets the style border color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ShouldSerializeBorderColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ResetBorderColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.BorderPattern">
            <summary>
            Gets or sets the style border pattern (Solid, Dash, ...)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.BorderThickness">
            <summary>
            Gets or sets the style border thickness.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.DropShadow">
            <summary>
            Gets or sets the visual style for the DropShadow.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.Font">
            <summary>
            Gets or sets the style Font
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.TextColor">
            <summary>
            Gets or sets the Text color
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ShouldSerializeTextColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ResetTextColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.CenterLabel">
            <summary>
             Gets or sets whether the label is centered on top of the data point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ConnectorLineStyle">
            <summary>
            Gets or sets the visual style for the line Connector.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.DrawConnector">
            <summary>
             Gets or sets whether a connecting line is drawn to the data point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.DrawPointMarker">
            <summary>
             Gets or sets whether the associated Point Marker is drawn for the data point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.HighlightBackground">
            <summary>
            Gets or sets the Highlight style background.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ShouldSerializeHighlightBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ResetHighlightBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.HighlightBorderColor">
            <summary>
            Gets or sets the Highlight style border color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ShouldSerializeHighlightBorderColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ResetHighlightBorderColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.HighlightBorderPattern">
            <summary>
            Gets or sets the Highlight style border pattern (Solid, Dash, ...)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.HighlightTextColor">
            <summary>
            Gets or sets the Highlight Text color
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ShouldSerializeHighlightTextColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ResetHighlightTextColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.MaxTextLineCount">
            <summary>
            Gets or sets the maximum number of Label Text lines.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.MaxTextWidth">
            <summary>
            Gets or sets the maximum width of the label text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.Padding">
            <summary>
            Gets or sets spacing between the content and edges of the element.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ShouldSerializePadding">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ResetPadding">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.RotateDegrees">
            <summary>
            Gets or sets the label display rotation.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.TextAlignment">
            <summary>
            Gets or sets the alignment of the text
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.TextFormat">
            <summary>
            Gets or sets the Text Format specifier
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DataLabelVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles">
            <summary>
            Defines set of default visual styles that are defined on the container control.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.ChartLegendItemVisualStyles">
            <summary>
            Gets or sets the visual styles to be used for ChartLegendItem elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.ChartLegendVisualStyles">
            <summary>
            Gets or sets the visual styles to be used for ChartLegend elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.ChartPanelVisualStyle">
            <summary>
            Gets or sets the visual style to be used for ChartPanel elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.ChartSeriesVisualStyle">
            <summary>
            Gets or sets the visual style to be used for ChartSeries elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.ChartTickmarkVisualStyle">
            <summary>
            Gets or sets the visual style to be used for chart Tickmark elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.ChartTitleVisualStyle">
            <summary>
            Gets or sets the visual style to be used for ChartTitle elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.ChartXAxisVisualStyle">
            <summary>
            Gets or sets the visual style to be used for X Axis elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.ChartXyVisualStyle">
            <summary>
            Gets or sets the visual style to be used for XyChart elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.ChartYAxisVisualStyle">
            <summary>
            Gets or sets the visual style to be used for Y Axis elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.ContainerVisualStyles">
            <summary>
            Gets or sets the visual stylse to be used for Chart Container elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.CrosshairLabelVisualStyle">
            <summary>
            Gets or sets the visual style to be used for Crosshair label elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.CrosshairVisualStyle">
            <summary>
            Gets or sets the visual style to be used for Crosshair elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.DataLabelVisualStyle">
            <summary>
            Gets or sets the visual style to be used for DataLabel elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.DividerLineVisualStyle">
            <summary>
            Gets or sets the visual style to be used for DividerLine elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.GridLineVisualStyle">
            <summary>
            Gets or sets the visual style to be used for GridLine elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.HScrollBarVisualStyles">
            <summary>
            Gets or sets the visual styles to be used for Horizontal ScrollBar elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.OtherSliceVisualStyles">
            <summary>
            Gets or sets the default visual style for the series 'Other' slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.PieChartVisualStyle">
            <summary>
            Gets or sets the visual style to be used for PieChart elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.ReferenceLineVisualStyle">
            <summary>
            Gets or sets the visual style to be used for ReferenceLine elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.RegressionLineVisualStyle">
            <summary>
            Gets or sets the visual style to be used for RegressionIndicator elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.SliceVisualStyles">
            <summary>
            Gets or sets the visual style to be used for Pie Slice elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.TickmarkLabelVisualStyle">
            <summary>
            Gets or sets the visual styles to be used for Axis Lable 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.TrendLineVisualStyle">
            <summary>
            Gets or sets the visual style to be used for TrendLine elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.VScrollBarVisualStyles">
            <summary>
            Gets or sets the visual styles to be used for Vertical ScrollBar elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.IsEmpty">
            <summary>
            Gets whether the style collection is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.StyleChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Occurs when one of element visual styles has property changes.
            Default implementation invalidates visual appearance of element.
            </summary>
            <param name="sender">VisualStyle that changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.DividerLineVisualStyle">
            <summary>
            Represents the visual style of a Legend element.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DividerLineVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.DividerLineVisualStyle)">
            <summary>
            Applies the style to the instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DividerLineVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DividerLineVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.DividerLineVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.DropShadowVisualStyle">
            <summary>
            Represents the visual style of a DropShadow
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DropShadowVisualStyle.ShadowColor">
            <summary>
            Gets or sets the DropShadow color
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DropShadowVisualStyle.ShouldSerializeShadowColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DropShadowVisualStyle.ResetShadowColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DropShadowVisualStyle.Enabled">
            <summary>
            Gets or sets whether drop shadow is displayed.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.DropShadowVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DropShadowVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.DropShadowVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DropShadowVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DropShadowVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.DropShadowVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.DropShadowVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.GridLineVisualStyle">
            <summary>
            Represents a GridLineVisualStyle.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.GridLineVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.GridLineVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.GridLineVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle">
            <summary>
            Represents HiLoBarSegment visual style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.Empty">
            <summary>
            Returns Empty instance of HiLoBarSegmentStyle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.BoxBackground">
            <summary>
            Gets or sets the visual style for the Box Background (Box, Candle only).
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.ShouldSerializeBoxBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.ResetBoxBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.BoxBorder">
            <summary>
            Gets or sets the visual style for the Box Border (Box, Candle only).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.CenterLine">
            <summary>
            Gets or sets the visual style for the Center Line segment. This is the 
            style used for the center Hilo segment and the Box/Candle segment when
            no Open or Close values are specified.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.CloseWhisker">
            <summary>
            Gets or sets the visual style for the Close Whisker (Hilo only).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.Default">
            <summary>
            Gets or sets the visual style used as the Default when
            a segment style is not specified (ie BoxBorder, HighWhisker, etc).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.HighWhisker">
            <summary>
            Gets or sets the visual style for the High Whisker.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.HighWhiskerCap">
            <summary>
            Gets or sets the visual style for the High Whisker Cap.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.LowWhisker">
            <summary>
            Gets or sets the visual style for the Low Whisker.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.LowWhiskerCap">
            <summary>
            Gets or sets the visual style for the Low Whisker Cap.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.MedianLine">
            <summary>
            Gets or sets the visual style for the Median Line.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.OpenWhisker">
            <summary>
            Gets or sets the visual style for the Open Whisker (Hilo only).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.IsEmpty">
            <summary>
            Gets whether both colors assigned are empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.Copy">
            <summary>
            Creates an exact copy of the OhlcBarSegmentStyle.
            </summary>
            <returns>Copy of the OhlcBarSegmentStyle.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.HiLoBarSegmentStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.Padding">
            <summary>
             Padding
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Padding.Empty">
            <summary>
            Returns Empty instance of Thickness.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Padding.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new instance of the class and initializes it.
            </summary>
            <param name="left">Left padding</param>
            <param name="right">Right padding</param>
            <param name="top">Top padding</param>
            <param name="bottom">Bottom padding</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Padding.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Padding class.
            </summary>
            <param name="all">Uniform padding.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Padding.#ctor">
            <summary>
            Initializes a new instance of the Padding class.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Padding.Copy">
            <summary>
            Creates an exact copy of the Padding.
            </summary>
            <returns>Copy of the Padding.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.PaddingTypeConverter">
            <summary>
             PaddingTypeConverter
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PaddingTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            CanConvertTo
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PaddingTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PaddingTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            CanConvertFrom
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PaddingTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            ConvertFrom
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PaddingTypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            GetCreateInstanceSupported
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PaddingTypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            CreateInstance
            </summary>
            <param name="context"></param>
            <param name="propertyValues"></param>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyles">
            <summary>
             PieCenterVisualStyles
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyles.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle">
            <summary>
            Represents the visual style of a Pie Center.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.Alignment">
            <summary>
            Gets or sets the alignment of the text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.AllowWrap">
            <summary>
            Gets or sets whether text wrapping is permitted.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.Background">
            <summary>
            Gets or sets the background style.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ShouldSerializeBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ResetBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.Border">
            <summary>
            Gets or sets the pie center border.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.Font">
            <summary>
            Gets or sets the style Font.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.Image">
            <summary>
            Gets or sets the element Image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ImageAlignment">
            <summary>
            Gets or sets the alignment of the Image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ImageIndex">
            <summary>
            Gets or sets the image index.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ImageInscribed">
            <summary>
            Gets or sets whether the image is inscribed in the
            PieCenter area (true = inscribed, false = circumscribed).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ImageList">
            <summary>
            Gets or sets the ImageList.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ImageOverlay">
            <summary>
            Gets or sets how to overlay the image with respect to the center content.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ImagePadding">
            <summary>
            Gets or sets the spacing between content and edges of the Image.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ShouldSerializeImagePadding">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ResetImagePadding">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ImageScale">
            <summary>
            Gets or sets the 'scale' factor for the image/symbol. This property informs the
            chart to scale the image (or symbol) based upon the available space at its offset
            position in the slice - the image is moved in or out of the slice, the image will
            grow of shrink accordingly.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ImageSizeMode">
            <summary>
            Gets or sets the 'mode' used to display the image.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.Padding">
            <summary>
            Gets or sets the spacing between content and edges of the Image.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ShouldSerializePadding">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ResetPadding">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.SymbolDef">
            <summary>
            Gets or sets the element Symbol Definition. Note that Symbol definition
            takes precedence over Image definition. Also note that the supporting Image
            properties (such as ImageAlignment, ImageOverlay, etc) apply to a set
            Symbol as well as to a set Image.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ShouldSerializeSymbolDef">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ResetSymbolDef">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.TextColor">
            <summary>
            Gets or sets the Text color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ShouldSerializeTextColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ResetTextColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.TextInscribed">
            <summary>
            Gets or sets whether the Text is inscribed in the
            PieCenter area (true = inscribed, false = circumscribed).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieCenterVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyles">
            <summary>
             PieChartVisualStyles
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyles.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle">
            <summary>
            Represents the visual style of a Pie Chart element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle.AlternateGridBackground">
            <summary>
            Gets or sets the alternate, or interlaced, pie background (used
            when ShowPieGrid is enabled).
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle.ShouldSerializeAlternateGridBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle.ResetAlternateGridBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle.GridLineVisualStyle">
            <summary>
            Gets or sets the visual style to be used for GridLine elements.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle.PieCenterVisualStyles">
            <summary>
            Gets or sets the visual styles to be used for Pie Center elements.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle.ReferenceLineVisualStyle">
            <summary>
            Gets or sets the visual style to be used for ReferenceLine elements 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieChartVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.PieGridLineVisualStyle">
            <summary>
            Represents a PieGridLineVisualStyle.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieGridLineVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieGridLineVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.PieGridLineVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.PieReferenceLineVisualStyle">
            <summary>
            Represents a PieReferenceLineVisualStyle.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieReferenceLineVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PieReferenceLineVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.PieReferenceLineVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle">
            <summary>
            Represents the visual style of a PointMarker
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.Background">
            <summary>
            Gets or sets the Marker background for series points.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.ShouldSerializeBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.ResetBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.BorderColor">
            <summary>
            Gets or sets the Marker border color for series points.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.ShouldSerializeBorderColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.ResetBorderColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.BorderWidth">
            <summary>
            Gets or sets the Marker border width for series points.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.Image">
            <summary>
            Gets or sets the PointMarker Image
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.ImageIndex">
            <summary>
            Gets or sets the PointMarker image index
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.ImageList">
            <summary>
            Gets or sets the ImageList.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.PointCount">
            <summary>
            Gets or sets the number of points for series markers (3 = triangle, 4 square, etc).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.Rotation">
            <summary>
            Gets or sets the Marker rotation angle for series points.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.Size">
            <summary>
            Gets or sets the Marker size for series points
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.ShouldSerializeSize">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.ResetSize">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.Type">
            <summary>
            Gets or sets the Marker type.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.PointMarkerVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle">
            <summary>
            Represents a ReferenceLineVisualStyle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.AllowWrap">
            <summary>
            Gets or sets whether text wrapping is permitted
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.Font">
            <summary>
            Gets or sets the style Font
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.TextAlignment">
            <summary>
             Gets or sets the Text alignment.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.TextColor">
            <summary>
             Gets or sets the Reference Line Text Color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.ShouldSerializeTextColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.ResetTextColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.TextPadding">
            <summary>
            Gets or sets spacing between the content and edges of the Text.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.ShouldSerializeTextPadding">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.ResetTextPadding">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ReferenceLineVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.RegressionLineVisualStyle">
            <summary>
            Represents the visual style of a Legend element.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.RegressionLineVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.RegressionLineVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.RegressionLineVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyles">
            <summary>
             ScrollBarVisualStyle
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyles.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle">
            <summary>
            Represents the visual style of a ScrollBar element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ArrowBackground">
            <summary>
            Gets or sets the Background of the Increase/Decrease Arrow elements of the ScrollBar.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ShouldSerializeArrowBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ResetArrowBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ArrowBorderColor">
            <summary>
            Gets or sets the Arrow Increase/Decrease border color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ShouldSerializeArrowBorderColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ResetArrowBorderColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ArrowColor">
            <summary>
            Gets or sets the Color of the Increase/Decrease Arrow elements of the scrollBar.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ShouldSerializeArrowColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ResetArrowColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.BorderColor">
            <summary>
            Gets or sets the border color of the scrollBar.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ShouldSerializeBorderColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ResetBorderColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.NoAlphaOnMouseOver">
            <summary>
            Gets or sets whether color alpha values are ignored when the mouse is over the scrollbar.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ThumbBackground">
            <summary>
            Gets or sets the Background of the Thumb element of the ScrollBar.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ShouldSerializeThumbBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ResetThumbBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ThumbBorderColor">
            <summary>
            Gets or sets the Thumb border color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ShouldSerializeThumbBorderColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ResetThumbBorderColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ThumbColor">
            <summary>
            Gets or sets the Color of the Thumb content element (hash marks) of the scrollBar.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ShouldSerializeThumbColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ResetThumbColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.TrackBackground">
            <summary>
            Gets or sets the Background of the Increase/Decrease Track elements of the ScrollBar.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ShouldSerializeTrackBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ResetTrackBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.ScrollBarVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle">
            <summary>
            Represents a SeriesLabelVisualStyle.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ConnectorColor">
            <summary>
            Gets or sets the style border color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ShouldSerializeConnectorColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ResetConnectorColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ConnectorLength">
            <summary>
            Gets or sets the length of the line connecting the slice
            and the slice label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ConnectorPattern">
            <summary>
            Gets or sets the style border pattern (Solid, Dash, ...)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ConnectorThickness">
            <summary>
            Gets or sets the style border thickness.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.DrawConnector">
            <summary>
             Gets or sets whether a connecting line is drawn to the data point.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.MaximumSize">
            <summary>
            Gets or sets the maximum size of the label.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ShouldSerializeCMaximumSize">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ResetMaximumSize">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.MinimumSize">
            <summary>
            Gets or sets the minimum size of the label.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ShouldSerializeMinimumSize">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ResetMinimumSize">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.Offset">
            <summary>
             Gets or sets the offset of the label relative to the data point.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ShouldSerializeOffset">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ResetOffset">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.Rotation">
            <summary>
             Gets or sets the amount to rotate the label body.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ShowBaseValueLabels">
            <summary>
             Gets or sets whether Labels are shown for Base Values.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.TextFormat">
            <summary>
             Gets or sets the format specifier for the label text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.SeriesLabelVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.SliceCenterLineVisualStyle">
            <summary>
            Represents the visual style of a Legend element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceCenterLineVisualStyle.InnerExtent">
            <summary>
            Gets or sets the distance (in pixels) to which the center line
            is extended prior to the slice inner radius.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceCenterLineVisualStyle.OuterExtent">
            <summary>
            Gets or sets the distance (in pixels) to which the center line
            is extended past to the slice Outer radius.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceCenterLineVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceCenterLineVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.SliceCenterLineVisualStyle)">
            <summary>
            Applies the style to the instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceCenterLineVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceCenterLineVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.SliceCenterLineVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle">
            <summary>
            Represents the visual style of a series Slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.Alignment">
            <summary>
            Gets or sets the alignment of the label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.AllowWrap">
            <summary>
            Gets or sets whether text wrapping is permitted
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.Background">
            <summary>
            Gets or sets the style background.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.ShouldSerializeBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.ResetBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.Font">
            <summary>
            Gets or sets the style Font
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.MaxLineCount">
            <summary>
            Gets or sets the maximum number of lines for label text.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.TextColor">
            <summary>
            Gets or sets the Text color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.ShouldSerializeTextColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.ResetTextColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceLabelVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle">
            <summary>
            Represents the visual style of a series Slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.AngleMargin">
            <summary>
            Gets or sets the margin (in degrees) to inset the label from 
            both the start and ending slice angles.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.AutoOrientLabel">
            <summary>
            Gets or sets whether the label will be auto oriented away from being upside down.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.AutoRotate">
            <summary>
            Gets or sets whether the label is auto rotated to match
            the angle of the slice (only valid for 'Custom' orientation mode).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.CustomAngleOffset">
            <summary>
            Gets or sets the display angle offset for the label when
            the label orientation is set to 'Custom'. The label can be
            offset toward the end angle (positive offset) or toward
            the start angle (negative offset). The offset is either a
            percentage (if value is between 0 and 1) or pixel amount (if value > 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.CustomFontAngle">
            <summary>
            Gets or sets the custom font angle when the label orientation
            is set to 'Custom'. The FontAngle is the additional number of
            degrees the label will be rotated.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.CustomHeight">
            <summary>
            Gets or sets the height of the bounding rectangle for the label when
            the label orientation is set to 'Custom'. The height can be a percentage
            of the slice height (if the value is between 0 and 1), or an absolute
            pixel amount (if the value is > 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.CustomRadiusOffset">
            <summary>
            Gets or sets the display radius offset for the label when the label orientation
            is set to 'Custom. The label can be offset toward the outer radius
            (positive offset) or toward the inner radius (negative offset). The
            offset can either be a percentage (if value is between 0 and 1) or pixel
            amount (if value > 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.CustomWidth">
            <summary>
            Gets or sets the custom width for the bounding rectangle of the
            label when the label orientation is set to 'Custom'. The width can
            be a percentage of the slice width at the set RadiusOffset
            (if the value is between 0 and 1), or an absolute pixel amount (if the
            value is > 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.InnerRadiusOffset">
            <summary>
            Gets or sets the offset of the inner edge of the rectangular label area from the
            outer slice radius, as measured by a percentage of the slice radius 
            (if less than 1), or absolute pixel amount (if greater than 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.OuterRadiusOffset">
            <summary>
            Gets or sets the offset of the outer edge of the rectangular label area from the
            outer slice radius, as measured by a percentage of the slice radius 
            (if less than 1), or absolute pixel amount (if greater than 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.OuterRadiusOffsetBase">
            <summary>
            Gets or sets whether the label's OuterRadiusOffset is relative
            to the slice OuterRadius or the slice ExtentRadius. 
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceInnerLabelVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle">
            <summary>
            Represents the visual style of a series Slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.Border">
            <summary>
            Gets or sets the visual style for the label border.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.ConnectorColor">
            <summary>
            Gets or sets the style connector color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.ShouldSerializeConnectorColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.ResetConnectorColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.ConnectorLength">
            <summary>
            Gets or sets the length of the line connecting the slice
            and the slice label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.ConnectorPattern">
            <summary>
            Gets or sets the style border pattern (Solid, Dash, ...)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.ConnectorThickness">
            <summary>
            Gets or sets the style connector thickness.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.ConnectorTickLength">
            <summary>
            Gets or sets the length of the 'tick' line connecting the
            label text with the main connector line associated with the pie slice.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.DrawConnector">
            <summary>
             Gets or sets whether a connecting line is drawn from the slice
             to the outer slice label.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.LabelMargin">
            <summary>
            Gets or sets the pixel margin between the outer label
            and the chart outer radius, as well as between the label and
            any adjacent slice labels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.MaxLabelHeight">
            <summary>
            Gets or sets the maximum vertical size of the label, as
            measured by a percentage of the chart height (if less than 1),
            or absolute pixel amount (if greater than 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.MaxLabelWidth">
            <summary>
            Gets or sets the maximum horizontal size of the label, as
            measured by a percentage of the chart width (if less than 1),
            or absolute pixel amount (if greater than 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.MinLabelHeight">
            <summary>
            Gets or sets the Minimum vertical size of the label, as
            measured by a percentage of the chart height (if less than 1),
            or absolute pixel amount (if greater than 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.MinLabelWidth">
            <summary>
            Gets or sets the minimum horizontal size of the label, as
            measured by a percentage of the chart width (if less than 1),
            or absolute pixel amount (if greater than 1).
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.Padding">
            <summary>
            Gets or sets spacing between the content and edges of the element.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.ShouldSerializePadding">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.ResetPadding">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.SliceOuterLabelVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.OuterRadiusOffsetBase">
            <summary>
            Defines what the label's OuterRadiusOffset is relative
            to (slice OuterRadius or slice ExtentRadius).
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.OuterRadiusOffsetBase.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.OuterRadiusOffsetBase.OuterRadius">
            <summary>
            OuterRadius
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.OuterRadiusOffsetBase.ExtentRadius">
            <summary>
            ExtentRadius (default)
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.SliceLabelAlignment">
            <summary>
            SliceLabelAlignment
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelAlignment.NotSet">
            <summary>
             NotSet
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelAlignment.OuterLeft">
            <summary>
             OuterLeft
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelAlignment.OuterCenter">
            <summary>
             OuterCenter
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelAlignment.OuterRight">
            <summary>
             OuterRight
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelAlignment.MiddleLeft">
            <summary>
             MiddleLeft
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelAlignment.MiddleCenter">
            <summary>
             MiddleCenter
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelAlignment.MiddleRight">
            <summary>
            MiddleRight
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelAlignment.InnerLeft">
            <summary>
            InnerLeft
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelAlignment.InnerCenter">
            <summary>
            InnerCenter
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.SliceLabelAlignment.InnerRight">
            <summary>
            InnerRight
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.Thickness">
            <summary>
            Defines Thickness class.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Thickness.Empty">
            <summary>
            Returns Empty instance of Thickness.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Thickness.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new instance of the object.
            </summary>
            <param name="left">Left thickness in pixels.</param>
            <param name="top">Top thickness in pixels.</param>
            <param name="right">Right thickness in pixels.</param>
            <param name="bottom">Bottom thickness in pixels.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Thickness.#ctor(System.Int32)">
            <summary>
            Creates new instance of the object.
            </summary>
            <param name="all">Specifies uniform Thickness.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Thickness.#ctor">
            <summary>
            Creates new instance of the object.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Thickness.All">
            <summary>
            Gets or sets the thickness of all sides
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Thickness.Bottom">
            <summary>
            Gets or sets the Bottom thickness in pixels.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Thickness.Horizontal">
            <summary>
            Gets horizontal thickness (Left + Right)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Thickness.Left">
            <summary>
            Gets or sets the left thickness in pixels
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Thickness.Right">
            <summary>
            Gets or sets the Right thickness in pixels
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Thickness.Top">
            <summary>
            Gets or sets the Top thickness in pixels
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Thickness.Vertical">
            <summary>
            Gets vertical thickness (Top + Bottom)
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.Thickness.IsEmpty">
            <summary>
            Gets whether the item is empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Thickness.Equals(System.Object)">
            <summary>
            Gets whether two instances are equal.
            </summary>
            <param name="obj">Instance to compare to.</param>
            <returns>true if equal otherwise false.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Thickness.Equals(DevComponents.DotNetBar.Charts.Style.Thickness)">
            <summary>
            Gets whether two instances are equal.
            </summary>
            <param name="thickness">Instance to compare to</param>
            <returns>true if equal otherwise false</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Thickness.GetHashCode">
            <summary>
            Returns hash-code.
            </summary>
            <returns>hash-code</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Thickness.op_Equality(DevComponents.DotNetBar.Charts.Style.Thickness,DevComponents.DotNetBar.Charts.Style.Thickness)">
            <summary>
            Implements == operator.
            </summary>
            <param name="t1">Object 1</param>
            <param name="t2">Object 2</param>
            <returns>true if equals</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Thickness.op_Inequality(DevComponents.DotNetBar.Charts.Style.Thickness,DevComponents.DotNetBar.Charts.Style.Thickness)">
            <summary>
            Implements != operator
            </summary>
            <param name="t1">Object 1</param>
            <param name="t2">Object 2</param>
            <returns>true if different</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Thickness.Copy">
            <summary>
            Creates an exact copy of the Thickness.
            </summary>
            <returns>Copy of the Thickness.</returns>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.Style.Thickness.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Thickness.OnPropertyChanged(DevComponents.DotNetBar.Charts.Style.VisualPropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ThicknessTypeConverter">
            <summary>
             ThicknessTypeConverter
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ThicknessTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            CanConvertTo
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ThicknessTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            ConvertTo
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ThicknessTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            CanConvertFrom
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ThicknessTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            ConvertFrom
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ThicknessTypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            GetCreateInstanceSupported
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.ThicknessTypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            CreateInstance
            </summary>
            <param name="context"></param>
            <param name="propertyValues"></param>
            <returns></returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle">
            <summary>
            Represents the visual style of a Tickmark Label element.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.AllowWrap">
            <summary>
            Gets or sets whether text wrapping is permitted
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.Font">
            <summary>
            Gets or sets the style Font
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.MaxLineCount">
            <summary>
            Gets or sets the maximum number of Label Text lines.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.MaxWidth">
            <summary>
            Gets or sets the maximum width of the lable.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.TextAlignment">
            <summary>
            Gets or sets the alignment of the axis Text
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.TextColor">
            <summary>
            Gets or sets the Text color
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.ShouldSerializeTextColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.ResetTextColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.TextFormat">
            <summary>
            Gets or sets the Text Format specifier
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.TickmarkLabelVisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.TrendLineVisualStyle">
            <summary>
            Represents the visual style of a TrendLine Indicator element.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.TrendLineVisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.TrendLineVisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.TrendLineVisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.VisualStyle">
            <summary>
            Represents the visual style.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyle.Background">
            <summary>
            Gets or sets the style background.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ShouldSerializeBackground">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ResetBackground">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyle.BorderColor">
            <summary>
            Gets or sets the style border color.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ShouldSerializeBorderColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ResetBorderColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyle.BorderPattern">
            <summary>
            Gets or sets the style border pattern (Solid, Dash, ...)
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ShouldSerializeBorderPattern">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ResetBorderPattern">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyle.BorderThickness">
            <summary>
            Gets or sets the style border thickness.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ShouldSerializeBorderThickness">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ResetBorderThickness">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyle.Font">
            <summary>
            Gets or sets the style Font
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyle.Margin">
            <summary>
            Gets or sets the spacing between the border and outside content.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ShouldSerializeMargin">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ResetMargin">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyle.Padding">
            <summary>
            Gets or sets spacing between the content and edges of the element.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ShouldSerializePadding">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ResetPadding">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyle.TextColor">
            <summary>
            Gets or sets the Text color
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ShouldSerializeTextColor">
            <summary>
            Gets whether property should be serialized.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ResetTextColor">
            <summary>
            Resets property to its default value.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyle.IsEmpty">
            <summary>
            Gets whether the style is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.ApplyStyle(DevComponents.DotNetBar.Charts.Style.VisualStyle)">
            <summary>
            Applies the style to instance of this style.
            </summary>
            <param name="style">Style to apply.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.Copy">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.CopyTo(DevComponents.DotNetBar.Charts.Style.VisualStyle)">
            <summary>
            Returns the copy of the style.
            </summary>
            <returns>Copy of the style.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyle.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.Alignment">
            <summary>
             Alignment of the content
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Alignment.NotSet">
            <summary>
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Alignment.TopLeft">
            <summary>
             TopLeft
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Alignment.TopCenter">
            <summary>
             TopCenter
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Alignment.TopRight">
            <summary>
             TopRight
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Alignment.MiddleLeft">
            <summary>
             MiddleLeft
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Alignment.MiddleCenter">
            <summary>
             MiddleCenter
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Alignment.MiddleRight">
            <summary>
            MiddleRight
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Alignment.BottomLeft">
            <summary>
            BottomLeft
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Alignment.BottomCenter">
            <summary>
            BottomCenter
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.Alignment.BottomRight">
            <summary>
            BottomRight
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.LineAlignment">
            <summary>
             LineAlignment of the content
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.LineAlignment.NotSet">
            <summary>
             Not Set
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.LineAlignment.Near">
            <summary>
             Near
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.LineAlignment.Center">
            <summary>
             Center
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.LineAlignment.Far">
            <summary>
             Far
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.VisualStyles`1">
            <summary>
             VisualStyles
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyles`1.#ctor">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyles`1.Item(DevComponents.DotNetBar.Charts.Style.StyleType)">
            <summary>
            Gets or sets the visual style
            assigned to the element. Default value is null.
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyles`1.Default">
            <summary>
             The normal, default style
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyles`1.MouseOver">
            <summary>
             MouseOver
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyles`1.Selected">
            <summary>
             Selected
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyles`1.SelectedMouseOver">
            <summary>
             MouseOver
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyles`1.Styles">
            <summary>
             Styles array
            </summary>
        </member>
        <member name="P:DevComponents.DotNetBar.Charts.Style.VisualStyles`1.IsEmpty">
            <summary>
            Gets whether the style collection is logically Empty.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyles`1.StyleChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Occurs when one of element visual styles has property changes.
            Default implementation invalidates visual appearance of element.
            </summary>
            <param name="sender">VisualStyle that changed.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="E:DevComponents.DotNetBar.Charts.Style.VisualStyles`1.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyles`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyles`1.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.MetroStyleFactory">
            <summary>
            Create the Metro Visual Style for ChartControl.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.MetroStyleFactory.#ctor">
            <summary>
            Initializes a new instance of the MetroStyleFactory class.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.MetroStyleFactory.#ctor(DevComponents.DotNetBar.Metro.ColorTables.MetroPartColors)">
            <summary>
            Initializes a new instance of the MetroStyleFactory class.
            </summary>
            <param name="metroPartColors">Metro Part Colors to Initialize Style with.</param>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.MetroStyleFactory.CreateStyle(DevComponents.DotNetBar.Rendering.ColorFactory)">
            <summary>
            Create the DefaultVisualStyle for ChartControl.
            </summary>
            <param name="factory">Color-Factory used to generate colors.</param>
            <returns>New instance of DefaultVisualStyles class.</returns>s
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.Office2010BlackStyleFactory">
            <summary>
             Office2010BlackStyleFactory
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Office2010BlackStyleFactory.CreateStyle(DevComponents.DotNetBar.Rendering.ColorFactory)">
            <summary>
            Create the DefaultVisualStyle for the ChartControl.
            </summary>
            <param name="factory">Color-Factory used to generate colors.</param>
            <returns>New instance of DefaultVisualStyles class.</returns>s
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.Office2010BlueStyleFactory">
            <summary>
            Create the Office 2010 Blue Visual Style for the ChartControl.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Office2010BlueStyleFactory.CreateStyle(DevComponents.DotNetBar.Rendering.ColorFactory)">
            <summary>
            Create the DefaultVisualStyle for the ChartControl.
            </summary>
            <param name="factory">Color-Factory used to generate colors.</param>
            <returns>New instance of DefaultVisualStyles class.</returns>s
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.Office2010SilverStyleFactory">
            <summary>
            Create the Office 2010 Silver Visual Style for the ChartControl.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.Office2010SilverStyleFactory.CreateStyle(DevComponents.DotNetBar.Rendering.ColorFactory)">
            <summary>
            Create the DefaultVisualStyle for the ChartControl.
            </summary>
            <param name="factory">Color-Factory used to generate colors.</param>
            <returns>New instance of DefaultVisualStyles class.</returns>s
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.VisualStyleFactory">
            <summary>
            Represents base class that each visual style factory for the ChartControl inherits from.
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyleFactory.CreateStyle(DevComponents.DotNetBar.Rendering.ColorFactory)">
            <summary>
            Create the DefaultVisualStyle for the ChartControl.
            </summary>
            <param name="factory">Color-Factory used to generate colors.</param>
            <returns>New instance of DefaultVisualStyles class.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyleFactory.CreateStyle">
            <summary>
            Create the DefaultVisualStyle for the ChartControl with empty color factory.
            </summary>
            <returns>New instance of DefaultVisualStyles class.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStyleFactory.GetStyleFactory(DevComponents.DotNetBar.Charts.Style.ChartControlStyle)">
            <summary>
            Returns the style factory for specified visual style.
            </summary>
            <param name="style">Style to create factory for.</param>
            <returns>An instance of VisualStyleFactory.</returns>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.VisualStylesTable">
            <summary>
             VisualStylesTable
            </summary>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStylesTable.GetStyle(DevComponents.DotNetBar.Charts.Style.ChartControlStyle)">
            <summary>
            Gets the DefaultVisualStyles for specified Chart style.
            </summary>
            <param name="style">ChartControl Style to return.</param>
            <returns>An instance of DefaultVisualStyle.</returns>
        </member>
        <member name="M:DevComponents.DotNetBar.Charts.Style.VisualStylesTable.SetStyleFactory(DevComponents.DotNetBar.Charts.Style.ChartControlStyle,DevComponents.DotNetBar.Charts.Style.DefaultVisualStyles)">
            <summary>
            Replaces an system style with the specified visual style.
            </summary>
            <param name="style">ChartControlStyle to replace.</param>
            <param name="visualStyle">DefaultVisualStyles to replace the system style with.</param>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.Style.ChartControlStyle">
            <summary>
            Defines available pre-defined ChartControl visual styles.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ChartControlStyle.Office2010Blue">
            <summary>
            Office 2010 Blue style.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ChartControlStyle.Office2010Silver">
            <summary>
            Office 2010 Silver style.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ChartControlStyle.Office2010Black">
            <summary>
            Office 2010 Black style.
            </summary>
        </member>
        <member name="F:DevComponents.DotNetBar.Charts.Style.ChartControlStyle.Metro">
            <summary>
            Metro Style.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.EffectiveStyles`1">
            <summary>
            Provides helpers when working with EffectiveStyles.
            </summary>
        </member>
        <member name="T:DevComponents.DotNetBar.Charts.EffectiveStyle`1">
            <summary>
            Provides helpers when working with EffectiveStyle.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.BlockLayoutManager">
            <summary>
            Represents block layout manager responsible for sizing the content blocks.
            </summary>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.BlockLayoutManager.Layout(DevComponents.Charts.TextMarkup.IBlock,System.Drawing.Size)">
            <summary>
            Resizes the content block and sets it's Bounds property to reflect new size.
            </summary>
            <param name="block">Content block to resize.</param>
            <param name="availableSize">Content size available for the block in the given line.</param>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.BlockLayoutManager.FinalizeLayout(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Collections.ArrayList)">
            <summary>
            Performs layout finalization
            </summary>
            <param name="containerBounds"></param>
            <param name="blocksBounds"></param>
            <param name="lines"></param>
            <returns></returns>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.BlockLayoutManager.Graphics">
            <summary>
            Gets or sets the graphics object used by layout manager.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.eContentOrientation">
            <summary>
            Specifies orientation of content.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.eContentOrientation.Horizontal">
            <summary>
            Indicates Horizontal orientation of the content.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.eContentOrientation.Vertical">
            <summary>
            Indicates Vertical orientation of the content.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.eContentAlignment">
            <summary>
            Specifies content horizontal alignment.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.eContentAlignment.Left">
            <summary>
            Content is left aligned.UI
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.eContentAlignment.Right">
            <summary>
            Content is right aligned.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.eContentAlignment.Center">
            <summary>
            Content is centered.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.eContentVerticalAlignment">
            <summary>
            Specifies content vertical alignment.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.eContentVerticalAlignment.Top">
            <summary>
            Content is top aligned.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.eContentVerticalAlignment.Bottom">
            <summary>
            Content is bottom aligned.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.eContentVerticalAlignment.Middle">
            <summary>
            Content is in the middle.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.IBlock">
            <summary>
            Represents a content block interface.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.IBlock.Bounds">
            <summary>
            Gets or sets the bounds of the content block.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.IBlock.Visible">
            <summary>
            Gets or sets whether content block is visible.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.IBlockExtended">
            <summary>
            Represents a extended content block interface for advanced layout information.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.IBlockExtended.IsBlockElement">
            <summary>
            Gets whether element is block level element.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.IBlockExtended.IsNewLineAfterElement">
            <summary>
            Gets whether new line is required after the element.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.IBlockExtended.CanStartNewLine">
            <summary>
            Gets whether element can be on new line.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.IContentLayout">
            <summary>
            Represents interface for block layout.
            </summary>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.IContentLayout.Layout(System.Drawing.Rectangle,DevComponents.Charts.TextMarkup.IBlock[],DevComponents.Charts.TextMarkup.BlockLayoutManager)">
            <summary>
            Performs layout of the content block.
            </summary>
            <param name="containerBounds">Container bounds to layout content blocks in.</param>
            <param name="contentBlocks">Content blocks to layout.</param>
            <param name="blockLayout">Block layout manager that resizes the content blocks.</param>
            <returns>The bounds of the content blocks within the container bounds.</returns>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.SerialContentLayoutManager">
            <summary>
            Represents the serial content layout manager that arranges content blocks in series next to each other.
            </summary>
        </member>
        <member name="E:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.NextPosition">
            <summary>
            Occurs when X, Y position of next block is calcualted.
            </summary>
        </member>
        <member name="E:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.BeforeNewBlockLayout">
            <summary>
            Occurs before new block is layed out.
            </summary>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.Layout(System.Drawing.Rectangle,DevComponents.Charts.TextMarkup.IBlock[],DevComponents.Charts.TextMarkup.BlockLayoutManager)">
            <summary>
            Performs layout of the content block.
            </summary>
            <param name="containerBounds">Container bounds to layout content blocks in.</param>
            <param name="contentBlocks">Content blocks to layout.</param>
            <param name="blockLayout">Block layout manager that resizes the content blocks.</param>
            <returns>The bounds of the content blocks within the container bounds.</returns>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.BlockSpacing">
            <summary>
            Gets or sets the spacing in pixels between content blocks. Default value is 0.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.FitContainerOversize">
            <summary>
            Gets or sets whether content blocks are forced to fit the container bounds if they 
            occupy more space than it is available by container. Default value is false.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.FitContainer">
            <summary>
            Gets or sets whether content blocks are resized to fit the container bound if they
            occupy less space than it is available by container. Default value is false.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.VerticalFitContainerWidth">
            <summary>
            Gets or sets whether content blocks are resized (Width) to fit container bounds if they
            occupy less space than the actual container width. Applies to the Vertical orientation only. Default value is false.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.HorizontalFitContainerHeight">
            <summary>
            Gets or sets whether content blocks are resized (Height) to fit container bounds if they
            occupy less space than the actual container height. Applies to the Horizontal orientation only. Default value is false.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.ContentOrientation">
            <summary>
            Gets or sets the content orientation. Default value is Horizontal.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.ContentVerticalAlignment">
            <summary>
            Gets or sets the content vertical alignment. Default value is Middle.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.BlockLineAlignment">
            <summary>
            Gets or sets the block line vertical alignment. Default value is Middle.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.ContentAlignment">
            <summary>
            Gets or sets the content horizontal alignment. Default value is Left.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.EvenHeight">
            <summary>
            Gets or sets whether all content blocks are resized so they have same height which is height of the tallest content block. Default value is false.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.OversizeDistribute">
            <summary>
            Gets or sets whether oversized blocks are resized based on the percentage reduction instead of based on equal pixel distribution. Default value is false.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.MultiLine">
            <summary>
            Gets or sets whether content is wrapped into new line if it exceeds the width of the container.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.SerialContentLayoutManager.RightToLeft">
            <summary>
            Gets or sets whether layout is right-to-left.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.LayoutManagerPositionEventArgs">
            <summary>
            Represents event arguments for SerialContentLayoutManager.NextPosition event.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.LayoutManagerPositionEventArgs.Block">
            <summary>
            Gets or sets the block that is layed out.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.LayoutManagerPositionEventArgs.CurrentPosition">
            <summary>
            Gets or sets the current block position.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.LayoutManagerPositionEventArgs.NextPosition">
            <summary>
            Gets or sets the calculated next block position.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.LayoutManagerPositionEventArgs.Cancel">
            <summary>
            Cancels default position calculation.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.LayoutManagerLayoutEventArgs">
            <summary>
            Represents event arguments for the SerialContentLayoutManager layout events.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.LayoutManagerLayoutEventArgs.Block">
            <summary>
            Gets or sets the reference block object.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.LayoutManagerLayoutEventArgs.CurrentPosition">
            <summary>
            Gets or sets the position block will assume.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.LayoutManagerLayoutEventArgs.CancelLayout">
            <summary>
            Cancel the layout of the block, applies only to BeforeXXX layout event.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.LayoutManagerLayoutEventArgs.BlockVisibleIndex">
            <summary>
            Gets or sets the visibility index of the block.
            </summary>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.LayoutManagerLayoutEventArgs.#ctor(DevComponents.Charts.TextMarkup.IBlock,System.Drawing.Point,System.Int32)">
            <summary>
            Creates new instance of the class and initializes it with default values.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.LayoutManagerPositionEventHandler">
            <summary>
            Delegate for SerialContentLayoutManager.NextPosition event.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.LayoutManagerLayoutEventHandler">
            <summary>
            Delegate for the SerialContentLayoutManager layout events.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.ContainerElement.IsBlockElement">
            <summary>
            Returns whether markup element is an block element that always consumes a whole line in layout.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.eParagraphAlignment">
            <summary>
            Indicates paragraph content alignment
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.eParagraphVerticalAlignment">
            <summary>
            Indicates paragraph content alignment
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.EndMarkupElement.StartElement">
            <summary>
            Gets reference to markup start element.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.ExpandElement.CanStartNewLine">
            <summary>
            Returns whether layout manager can start new line with this element.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.Heading.Level">
            <summary>
            Gets or sets heading level. Values from 1 to 6 are valid. Default is 1.
            </summary>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.HyperLink.HitTest(System.Int32,System.Int32)">
            <summary>
            Returns whether hyper-link contains specified coordinates.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupElement.IsBlockElement">
            <summary>
            Returns whether markup element is an block element that always consumes a whole line in layout.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupElement.IsNewLineAfterElement">
            <summary>
            Returns whether layout manager switches to new line after processing this element.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupElement.CanStartNewLine">
            <summary>
            Returns whether layout manager can start new line with this element.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupElement.Elements">
            <summary>
            Gets the collection of child elements if any for this markup element.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupElement.IsSizeValid">
            <summary>
            Gets or sets whether element size is valid. When size is not valid element Measure method will be called to validate size.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupElement.Parent">
            <summary>
            Gets element parent or null if parent is not set.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupElement.Bounds">
            <summary>
            Gets or sets actual rendering bounds.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupElement.Visible">
            <summary>
            Gets or sets whether markup element is visible.
            </summary>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElement.Measure(System.Drawing.Size,DevComponents.Charts.TextMarkup.MarkupDrawContext)">
            <summary>
            Measures the element given available size.
            </summary>
            <param name="availableSize">Size available to element</param>
            <param name="d">Reference to graphics object</param>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElement.MeasureEnd(System.Drawing.Size,DevComponents.Charts.TextMarkup.MarkupDrawContext)">
            <summary>
            Measures the end tag of an element. Most implementations do not need to do anything but implementations like the ones
            that change color should return state back at this time.
            </summary>
            <param name="availableSize"></param>
            <param name="d"></param>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElement.Render(DevComponents.Charts.TextMarkup.MarkupDrawContext)">
            <summary>
            Renders element.
            </summary>
            <param name="d">Provides markup drawing context information.</param>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElement.RenderEnd(DevComponents.Charts.TextMarkup.MarkupDrawContext)">
            <summary>
            Renders element tag end. Most implementations do not need to do anything but mplementations like the ones
            that change color should return state back at this time.
            </summary>
            <param name="d">Provides markup drawing context information.</param>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElement.ArrangeCore(System.Drawing.Rectangle,DevComponents.Charts.TextMarkup.MarkupDrawContext)">
            <summary>
            Provides final rectangle to element and lets it arrange it's content given new constraint.
            </summary>
            <param name="finalRect">Final rectangle.</param>
            <param name="d"></param>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElement.Arrange(System.Drawing.Rectangle,DevComponents.Charts.TextMarkup.MarkupDrawContext)">
            <summary>
            Arranges the element given the final size. Layout is two step process with Measure followed by Arrange.
            </summary>
            <param name="finalSize"></param>
            <param name="d"></param>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupElement.RenderBounds">
            <summary>
            Gets or sets actual rendered bounds for a give markup element if applicable.
            </summary>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElementCollection.#ctor(DevComponents.Charts.TextMarkup.MarkupElement)">
            <summary>Creates new instance of the class.</summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupElementCollection.Parent">
            <summary>
            Gets or sets the collection parent element.
            </summary>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElementCollection.Add(DevComponents.Charts.TextMarkup.MarkupElement)">
            <summary>
            Adds new object to the collection.
            </summary>
            <param name="MarkupElement">Object to add.</param>
            <returns>Index of newly added object.</returns>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupElementCollection.Item(System.Int32)">
            <summary>
            Returns reference to the object in collection based on it's index.
            </summary>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElementCollection.Insert(System.Int32,DevComponents.Charts.TextMarkup.MarkupElement)">
            <summary>
            Inserts new object into the collection.
            </summary>
            <param name="index">Position of the object.</param>
            <param name="value">Object to insert.</param>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElementCollection.IndexOf(DevComponents.Charts.TextMarkup.MarkupElement)">
            <summary>
            Returns index of the object inside of the collection.
            </summary>
            <param name="value">Reference to the object.</param>
            <returns>Index of the object.</returns>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElementCollection.Contains(DevComponents.Charts.TextMarkup.MarkupElement)">
            <summary>
            Returns whether collection contains specified object.
            </summary>
            <param name="value">Object to look for.</param>
            <returns>true if object is part of the collection, otherwise false.</returns>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElementCollection.Remove(DevComponents.Charts.TextMarkup.MarkupElement)">
            <summary>
            Removes specified object from the collection.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElementCollection.CopyTo(DevComponents.Charts.TextMarkup.MarkupElement[],System.Int32)">
            <summary>
            Copies collection into the specified array.
            </summary>
            <param name="array">Array to copy collection to.</param>
            <param name="index">Starting index.</param>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupElementCollection.CopyTo(DevComponents.Charts.TextMarkup.MarkupElement[])">
            <summary>
            Copies contained items to the MarkupElement array.
            </summary>
            <param name="array">Array to copy to.</param>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.MarkupParser.IsMarkup(System.String)">
            <summary>
            Tests whether input text could be markup text.
            </summary>
            <param name="text">Text to test.</param>
            <returns>true if text could be markup, otherwise false</returns>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.MarkupSettings">
            <summary>
            Holds text-markup related settings.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupSettings.NormalHyperlink">
            <summary>
            Gets the style of the hyperlink in its default state.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupSettings.MouseOverHyperlink">
            <summary>
            Gets the style of the hyperlink when mouse is over the link.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.MarkupSettings.VisitedHyperlink">
            <summary>
            Gets the style of the visited hyperlink.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.HyperlinkStyle">
            <summary>
            Defines the text-markup hyperlink appearance style.
            </summary>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.HyperlinkStyle.#ctor">
            <summary>
            Initializes a new instance of the HyperlinkStyle class.
            </summary>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.HyperlinkStyle.#ctor(System.Drawing.Color,DevComponents.Charts.TextMarkup.eHyperlinkUnderlineStyle)">
            <summary>
            Initializes a new instance of the HyperlinkStyle class.
            </summary>
            <param name="textColor"></param>
            <param name="underlineStyle"></param>
        </member>
        <member name="M:DevComponents.Charts.TextMarkup.HyperlinkStyle.#ctor(System.Drawing.Color,System.Drawing.Color,DevComponents.Charts.TextMarkup.eHyperlinkUnderlineStyle)">
            <summary>
            Initializes a new instance of the HyperlinkStyle class.
            </summary>
            <param name="textColor"></param>
            <param name="backColor"></param>
            <param name="underlineStyle"></param>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.HyperlinkStyle.TextColor">
            <summary>
            Gets or sets hyperlink text color.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.HyperlinkStyle.BackColor">
            <summary>
            Gets or sets hyperlink back color.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.HyperlinkStyle.UnderlineStyle">
            <summary>
            Gets or sets the underline style for the hyperlink.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.HyperlinkStyle.IsChanged">
            <summary>
            Gets whether style has been changed from its default state.
            </summary>
        </member>
        <member name="T:DevComponents.Charts.TextMarkup.eHyperlinkUnderlineStyle">
            <summary>
            Defines hyperlink styles.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.eHyperlinkUnderlineStyle.None">
            <summary>
            Hyper links are not marked.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.eHyperlinkUnderlineStyle.SolidLine">
            <summary>
            Hyper links are underlined using solid line.
            </summary>
        </member>
        <member name="F:DevComponents.Charts.TextMarkup.eHyperlinkUnderlineStyle.DashedLine">
            <summary>
            Hyper links are underlined using dashed line.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.NewLine.IsSizeValid">
            <summary>
            Gets or sets whether element size is valid. When size is not valid element Measure method will be called to validate size.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.NewLine.IsNewLineAfterElement">
            <summary>
            Returns whether layout manager switches to new line after processing this element.
            </summary>
        </member>
        <member name="P:DevComponents.Charts.TextMarkup.Span.IsBlockElement">
            <summary>
            Returns whether markup element is an block element that always consumes a whole line in layout.
            </summary>
        </member>
        <member name="T:DataLabelCollection">
            <summary>
            Represents the collection of DataLabels.
            </summary>
        </member>
    </members>
</doc>
